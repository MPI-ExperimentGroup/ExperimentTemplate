<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<experiment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://frinexbuild.mpi.nl/alpha.xsd"
            appNameDisplay="group_example" 
            showMenuBar="false"
            preserveLastState="false"
            obfuscateBrowserStorage="false" > 
    <deployment state="staging" />
    <administration/>
    <metadata>
        <field controlledMessage="stimulusImageRegion" controlledRegex=".'{'3,'}'" postName="stimulusImageRegion" registrationField="stimulusImageRegion" />
        <field controlledMessage="distractorImageRegion" controlledRegex=".'{'3,'}'" postName="distractorImageRegion" registrationField="distractorImageRegion" />
    </metadata>
    <presenter back="Menu" menuLabel="Instruction" type="text" self="Instruction" title="Instruction">
        <htmlText featureText="This example demonstrates the group functionality of Frinex group experiments. Group experiments are run with multiple participants, each on different computers over the network. As a result to use this example in the normal configuration you will need to run this experiment on multiple computers simultaneously." />
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="GroupFormation" />
        <addPadding />
        <htmlText featureText="In order to make testing a group experiment easier there is a group test page which emulates multiple browsers by using iframes and javascript to predefine a random but shared group and assign group member codes via the URL of each of the experiment instances. This allows up to eight experiment instances (group members) to run simultaneously in one browser window. This group emulation page also contains a robot, that when enabled, randomly presses buttons on each instance causing the experiment to proceed without intervention." />
        <htmlText featureText="You can see an automated group interaction with the &lt;a href=&quot;grouptestframes.html&quot;&gt;robot group test page&lt;/a&gt;.&lt;br/&gt;" />
        <addPadding />
        <htmlText featureText="The group experiments function by the use of a group communication server. The messages from each group member are sent to the group server and then broadcast to all group members. Not all group messages are to be used by all group members. For example if two members are not in the same communication channel, they will not respond to each others messages." />
        <htmlText featureText="You observe the group messaging functionality in your browser with the &lt;a href=&quot;grouptestpage.html&quot;&gt;group diagnostics page&lt;/a&gt;.&lt;br/&gt;" />
    </presenter>
    <presenter back="GroupOf6" menuLabel="GroupFormation" next="Accord" type="stimulus" self="GroupFormation" title="GroupFormation">
        <!--regionReplace regionId="groupButtonsRegion"/-->
        <htmlText featureText="This group formation presenter is not strictly needed. However it does allow the group to be set up and its structure checked before proceeding." />
        <addPadding />
        <hasGetParameter parameterName="group">
            <conditionTrue>
                <htmlText featureText="The group name has been allocated in the URL. This member will be placed in the group associated with this name. If however the provided member code is already taken then this participant cannot be a member of this group." />
                <addPadding />
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="The group name has not been provided in the URL and a group will be randomly assigned. A specific group can be assigned by appending &amp;group=X to the URL." />
                <addPadding />
            </conditionFalse>
        </hasGetParameter>
        <hasGetParameter parameterName="member">
            <conditionTrue>
                <htmlText featureText="The group member code has been provided in the URL. This participant will be added to a group where the supplied member code is not already taken." />
                <addPadding />
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="The group member code has not been provided. This member will not be assigned a group without a member code being provided in the URL." />
                <htmlText featureText="You can specify the member code by adding &amp;member=X to the URL." />
                <addPadding />
            </conditionFalse>
        </hasGetParameter>
        <groupStimuli adjacencyThreshold="0" eventTag="GroupFormation" randomise="false" repeatRandomWindow="0" maxStimuli="100" repeatCount="1">
            <groupNetwork groupMembers="A,B,C,D,E,F,G,H" phasesPerStimulus="2" groupCommunicationChannels="A,B,C,D,E,F,G,H">
                <groupInitialisationError>
                    <htmlText featureText="groupInitialisationError" />
                </groupInitialisationError>
                <groupNetworkConnecting>
                    <htmlText featureText="groupNetworkConnecting" />
                    <addPadding />
                </groupNetworkConnecting>
                <groupFindingMembers>
                    <regionReplace regionId="groupFindingMembers">
                        <htmlText featureText="groupFindingMembers" />
                        <htmlTokenText featureText="This is member: &lt;groupMemberCode&gt;" />
                        <htmlTokenText featureText="Required members: &lt;groupAllMemberCodes&gt;" />
                        <htmlTokenText featureText="Assigned members: &lt;groupAssignedMemberCodes&gt;" />
                        <htmlTokenText featureText="Group: &lt;groupId&gt;" />
                        <htmlTokenText featureText="Group UUID: &lt;groupUUID&gt;" />
                        <addPadding />
                    </regionReplace>
                </groupFindingMembers>
                <groupNetworkSynchronising>
                    <htmlText featureText="GroupFormation groupNetworkSynchronising" />
                    <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                    <addPadding />
                </groupNetworkSynchronising>
                <groupPhaseListeners>
                    <groupMemberActivity phaseMembers="A,B,C,D,E,F,G,H:-">
                        <disableButtonGroup matchingRegex="activityButtonGroup" />
                        <htmlText featureText="First groupMemberActivity of GroupFormation Presenter" />
                        <htmlText featureText="The phaseMembers of this groupMemberActivity determines which members see this activity and in which phases." />
                        <htmlText featureText="&lt;groupMemberActivity phaseMembers=&quot;A,B,C,D,E,F,G,H:-&quot;&gt;" />
                        <htmlText featureText="Each phase is separated by a : so &quot;A,B,C,D,E,F,G,H:-&quot; describes two phases. The all participants will see activity in the first phase and no participants will see it in the second phase as indicated by the &quot;-&quot; in the second position." />
                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <addPadding />
                        <!--sendGroupMessageButton featureText="Continue [enter]" eventTag="joinGroupMessageButton" incrementPhase="1" hotKey="ENTER" repeatIncorrect="false" groupId="activityButtonGroup"/-->
                        <actionButton featureText="joinGroupMessageButton" groupId="activityButtonGroup">
                            <sendGroupMessage eventTag="joinGroupMessageButton" incrementPhase="1" />
                            <disableButtonGroup matchingRegex="activityButtonGroup" />
                            <htmlText featureText="waiting group response" />
                        </actionButton>
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:A,B,C,D,E,F,G,H">
                        <disableButtonGroup matchingRegex="activityButtonGroup" />
                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlText featureText="Second groupMemberActivity of GroupFormation Presenter" />
                        <htmlTokenText featureText="groupActiveChannel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupMemberCode: &lt;groupMemberCode&gt;" />
                        <addPadding />
                        <targetButton featureText="Volgende" target="Accord" groupId="activityButtonGroup" />
                    </groupMemberActivity>
                </groupPhaseListeners>
            </groupNetwork>
            <endOfStimulus>
                <centrePage />
                <htmlText featureText="No valid stimuli" />
            </endOfStimulus>
            <randomGrouping />
            <stimuli>
                <tag>BalloonGroup</tag>
            </stimuli>
        </groupStimuli>
    </presenter>
    <presenter back="Instruction" menuLabel="groupMembers and groupCommunicationChannels" type="metadata" self="Accord" title="groupMembers and groupCommunicationChannels">
        <htmlText featureText="The GroupFormation presenter has a group of 8 defined by groupMembers=&quot;A,B,C,D,E,F,G,H&quot;. All of the 8 group members are in the same communication channel as defined by groupCommunicationChannels=&quot;A,B,C,D,E,F,G,H&quot;. Which causes all members to wait for and potentially see messages from all other members." />
        <htmlText featureText="&lt;groupNetwork groupMembers=&quot;A,B,C,D,E,F,G,H&quot; groupCommunicationChannels=&quot;A,B,C,D,E,F,G,H&quot;&gt;" />
        <addPadding />
        <htmlText featureText="The GroupOf4 presenter in contrast has 4 group members defined by groupMembers=&quot;A,B,C,D&quot;. Each member is in a different communication channel as defined by groupCommunicationChannels=&quot;A|B|C|D&quot;. Which means that no member waits for nor sees messages from other members." />
        <htmlText featureText="&lt;groupNetwork groupMembers=&quot;A,B,C,D&quot; groupCommunicationChannels=&quot;A|B|C|D&quot;&gt;" />
        <targetButton featureText="GroupOf4" target="GroupOf4" />
        <addPadding />
        <htmlText featureText="The GroupOf6 presenter has 6 group members defined by groupMembers=&quot;A,B,C,D,E,F&quot;. Each communication channel contains a pair of members as defined by groupCommunicationChannels=&quot;A,B|C,D|E,F&quot;. Which means that A and B wait and sees messages from other, as do the other pairs C|D and E|F. While members without a common comunication channel such as A and C do not interact nor wait." />
        <htmlText featureText="&lt;groupNetwork groupMembers=&quot;A,B,C,D,E,F&quot; groupCommunicationChannels=&quot;A,B|C,D|E,F&quot;&gt;" />
    </presenter>
    <!--presenter back="Accord" menuLabel="screenTitle" next="GroupOf4" type="metadata" self="screenTag" title="screenTitle">
        <htmlText featureText="dispalyText"/>
        <saveMetadataButton featureText="saveButtonLabel" sendData="true" networkErrorMessage="on_Error_Text">
            <onError/>
            <onSuccess>
                <gotoNextPresenter/>
            </onSuccess>
        </saveMetadataButton>
        <addPadding/>
        <htmlText featureText="postText"/>
        <targetButton featureText="alternateButtonLabel" target="Instruction"/>
    </presenter-->
    <presenter back="GroupOf6" menuLabel="GroupOf4" type="stimulus" self="GroupOf4" title="GroupOf4">
        <clearCurrentScore evaluateTokens=""/>
        <triggerDefinition listenerId="groupDebugTrigger" threshold="0" maximum="0">
            <regionReplace regionId="groupDebugRegion">
                <htmlTokenText featureText="&lt;channelLoop&gt;&lt;channelLabel&gt;:&lt;channelScore&gt;&amp;nbsp;&lt;/channelLoop&gt;" />
                <htmlTokenText featureText="groupScore: &lt;groupScore&gt;" />
                <htmlTokenText featureText="groupMemberCode: &lt;groupMemberCode&gt;" />
                <htmlTokenText featureText="groupAllMemberCodes: &lt;groupAllMemberCodes&gt;" />
                <htmlTokenText featureText="groupOtherMemberCodes: &lt;groupOtherMemberCodes&gt;" />
                <htmlTokenText featureText="channelOtherMemberCodes: &lt;channelOtherMemberCodes&gt;" />
                <htmlTokenText featureText="groupActiveChannel: &lt;groupActiveChannel&gt;" />
                <htmlTokenText featureText="groupCommunicationChannels: &lt;groupCommunicationChannels&gt;" />
                <htmlTokenText featureText="groupMessageString: &lt;groupMessageString&gt;" />
                <htmlTokenText featureText="groupId: &lt;groupId&gt;" />
                <htmlTokenText featureText="groupUserLabel: &lt;groupUserLabel&gt;" />
                <htmlTokenText featureText="channelScore: &lt;channelScore&gt;" />
            </regionReplace>
        </triggerDefinition>
        <triggerMatching listenerId="groupDebugTrigger" />

        <regionReplace regionId="groupStatusRegion" />
        <regionReplace regionId="groupButtonsRegion" />
        <htmlText featureText="Participants E, F, G and H are not members of this group and not will be shown any activities here." />
        <htmlText featureText="In this example, each of the participants A, B, C and D are each in their own communication channel, as defined by groupCommunicationChannels=&quot;A|B|C|D&quot; and therefore each of them can proceed without waiting for others." />
        <!--actionButton featureText="Volgende [enter]" hotKey="ENTER"-->
        <groupStimuli eventTag="Group of Four" randomise="true" repeatRandomWindow="0" maxStimuli="23" repeatCount="1">
            <groupNetwork groupMembers="A,B,C,D" phasesPerStimulus="3" groupCommunicationChannels="A|B|C|D">
                <groupInitialisationError>
                    <htmlText featureText="groupInitialisationError" />
                </groupInitialisationError>
                <groupNetworkConnecting>
                    <triggerMatching listenerId="groupDebugTrigger" />
                    <regionReplace regionId="groupStatusRegion">
                        <htmlTokenText featureText="groupNetworkConnecting" />
                    </regionReplace>
                </groupNetworkConnecting>
                <groupFindingMembers>
                    <triggerMatching listenerId="groupDebugTrigger" />
                    <regionReplace regionId="groupStatusRegion">
                        <htmlTokenText featureText="groupFindingMembers" />
                    </regionReplace>
                </groupFindingMembers>
                <groupNetworkSynchronising>
                    <triggerMatching listenerId="groupDebugTrigger" />
                    <regionReplace regionId="groupStatusRegion">
                        <htmlTokenText featureText="groupNetworkSynchronising" />
                    </regionReplace>
                </groupNetworkSynchronising>
                <groupPhaseListeners>
                    <groupMemberActivity phaseMembers="A,B,C,D:-:-">
                        <triggerMatching listenerId="groupDebugTrigger" />
                        <htmlTokenText featureText="Activity: A,B,C,D:-:- Phase: &lt;groupRequestedPhase&gt; Member: &lt;groupMemberCode&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlText featureText="All participants see this activity" />
                        <!--regionReplace regionId="groupButtonsRegion"-->
                        <actionButton featureText="sendGroupMessage" groupId="activityButtonGroup">
                            <sendGroupMessage eventTag="sendGroupMessage" incrementPhase="1" />
                            <hideButtonGroup matchingRegex="activityButtonGroup" />
                            <htmlText featureText="No need to wait for other members" />
                            <!--htmlText featureText="waiting group response"/-->
                        </actionButton>
                        <!--/regionReplace-->
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:A,C:-">
                        <triggerMatching listenerId="groupDebugTrigger" />
                        <htmlTokenText featureText="Activity: -:A,C:- Phase: &lt;groupRequestedPhase&gt; Member: &lt;groupMemberCode&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlText featureText="Only members A and C see this activity" />
                        <!--regionReplace regionId="groupButtonsRegion"-->
                        <actionButton featureText="sendGroupMessage" groupId="activityButtonGroup">
                            <sendGroupMessage eventTag="sendGroupMessage" incrementPhase="1" />
                            <hideButtonGroup matchingRegex="activityButtonGroup" />
                            <htmlText featureText="No need to wait for other members" />
                            <!--htmlText featureText="waiting group response"/-->
                        </actionButton>
                        <!--/regionReplace-->
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:B,D:-">
                        <triggerMatching listenerId="groupDebugTrigger" />
                        <htmlTokenText featureText="Activity: -:B,D:- Phase: &lt;groupRequestedPhase&gt; Member: &lt;groupMemberCode&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlText featureText="Only members B and D see this activity" />
                        <!--regionReplace regionId="groupButtonsRegion"-->
                        <actionButton featureText="sendGroupMessage" groupId="activityButtonGroup">
                            <sendGroupMessage eventTag="sendGroupMessage" incrementPhase="1" />
                            <hideButtonGroup matchingRegex="activityButtonGroup" />
                            <htmlText featureText="No need to wait for other members" />
                            <!--htmlText featureText="waiting group response"/-->
                        </actionButton>
                        <!--/regionReplace-->
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:-:A,B,C,D">
                        <triggerMatching listenerId="groupDebugTrigger" />
                        <htmlTokenText featureText="Activity: -:-:A,B,C,D Phase: &lt;groupRequestedPhase&gt; Member: &lt;groupMemberCode&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlText featureText="All participants see this activity" />
                        <stimulusLabel />
                        <!--regionReplace regionId="groupButtonsRegion"-->
                        <actionButton featureText="sendGroupMessage" groupId="activityButtonGroup">
                            <sendGroupMessage eventTag="sendGroupMessage" incrementPhase="1" />
                            <hideButtonGroup matchingRegex="activityButtonGroup" />
                            <htmlText featureText="waiting group response" />
                        </actionButton>
                        <!--/regionReplace-->
                    </groupMemberActivity>
                </groupPhaseListeners>
            </groupNetwork>
            <endOfStimulus>
                <regionReplace regionId="groupButtonsRegion" />
                <regionReplace regionId="groupStatusRegion" />
                <htmlText featureText="endOfStimulus groupMemberActivity of GroupOf4 Presenter" />
                <htmlText featureText="This example has ended for this member, you can proceed via the menu button above." />
                <triggerMatching listenerId="groupDebugTrigger" />
                <!--actionButton featureText="sendGroupEndOfStimuli"-->
                <!--groupNetwork groupMembers="A,B,C,D" phasesPerStimulus="1" groupCommunicationChannels="A|B|C|D">
                            <groupFindingMembers>
                                <htmlText featureText="endOfStimulus groupFindingMembers"/>
                            </groupFindingMembers>
                            <groupInitialisationError>
                                <htmlText featureText="groupInitialisationError" />
                            </groupInitialisationError>
                            <groupNetworkConnecting>
                                <htmlText featureText="endOfStimulus groupNetworkConnecting"/>
                            </groupNetworkConnecting>
                            <groupNetworkSynchronising>
                                <htmlText featureText="endOfStimulus groupNetworkSynchronising"/>
                            </groupNetworkSynchronising>
                            <groupPhaseListeners>
                              <sendGroupEndOfStimuli eventTag="endOfStimulusGroupMessage"/>
                            </groupPhaseListeners>
                        </groupNetwork-->
                <!--/actionButton-->
                <!--clearPage/>
                    <htmlTokenText featureText="postStimuliText"/>
                    <actionButton featureText="Volgende [enter]" hotKey="ENTER">
                        <gotoNextPresenter/>
                    </actionButton-->
            </endOfStimulus>
            <randomGrouping />
            <stimuli>
                <tag>BalloonGroup</tag>
            </stimuli>
        </groupStimuli>
        <!--/actionButton-->
    </presenter>
    <presenter back="Instruction" menuLabel="GroupOf6" next="Fini" type="stimulus" self="GroupOf6" title="GroupOf6">
        <clearCurrentScore evaluateTokens=""/>
        <centrePage />
        <htmlText featureText="GroupOf6" />
        <regionReplace regionId="groupButtonsRegion">
            <actionButton featureText="Volgende [enter]" hotKey="ENTER">
                <htmlText featureText="Participants G and H are not members of this group and will be shown any activities here." />
                <groupStimuli eventTag="GroupOf6" randomise="true" repeatRandomWindow="6" maxStimuli="23" repeatCount="1">
                    <groupNetwork groupMembers="A,B,C,D,E,F" phasesPerStimulus="3" groupCommunicationChannels="A,B|C,D|E,F">
                        <groupInitialisationError>
                            <htmlText featureText="groupInitialisationError" />
                        </groupInitialisationError>
                        <groupNetworkConnecting>
                            <regionReplace regionId="groupNetworkConnecting">
                                <htmlText featureText="GroupOf6 groupNetworkConnecting" />
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                            </regionReplace>
                        </groupNetworkConnecting>
                        <groupFindingMembers>
                            <regionReplace regionId="groupFindingMembers">
                                <htmlText featureText="GroupOf6 groupFindingMembers" />
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                            </regionReplace>
                        </groupFindingMembers>
                        <groupNetworkSynchronising>
                            <regionReplace regionId="groupNetworkSynchronising">
                                <htmlText featureText="GroupOf6 groupNetworkSynchronising" />
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                            </regionReplace>
                        </groupNetworkSynchronising>
                        <groupPhaseListeners>
                            <groupMemberActivity phaseMembers="A:-:-:B:-:-:C:-:-:D:-:-:E:-:-:F:-:-:-">
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                                <stimulusHasResponse matchingRegex="">
                                    <conditionTrue>
                                        <pause msToNext="2000">
                                            <sendGroupStoredMessage eventTag="sendGroupStoredMessage" incrementPhase="2" />
                                        </pause>
                                    </conditionTrue>
                                    <conditionFalse>
                                        <stimulusLabel />
                                        <htmlText featureText="Phase1" />
                                        <stimulusPresent maxHeight="0" percentOfPage="0" animate="stimuliCode" showControls="false" maxWidth="0">
                                            <mediaLoaded />
                                            <mediaLoadFailed />
                                            <mediaPlaybackStarted />
                                            <mediaPlaybackComplete>
                                                <addPadding />
                                                <regionReplace regionId="groupButtonsRegion">
                                                    <sendGroupMessageButton featureText="Volgende [enter]" eventTag="TextEntered" incrementPhase="1" hotKey="ENTER" repeatIncorrect="false" />
                                                </regionReplace>
                                            </mediaPlaybackComplete>
                                        </stimulusPresent>
                                    </conditionFalse>
                                </stimulusHasResponse>
                            </groupMemberActivity>
                            <groupMemberActivity phaseMembers="-:-:B:-:-:C:-:-:D:-:-:E:-:-:F:-:-:A:-">
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                                <stimulusHasResponse matchingRegex="">
                                    <conditionTrue />
                                    <conditionFalse>
                                        <htmlText featureText="Phase2" />
                                    </conditionFalse>
                                </stimulusHasResponse>
                            </groupMemberActivity>
                            <groupMemberActivity phaseMembers="-:B:-:-:C:-:-:D:-:-:E:-:-:F:-:-:A:-:-">
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                                <htmlText featureText="Phase3" />
                                <addPadding />
                                <groupMessageLabel styleName="groupMessageLabel" />
                                <addPadding />
                                <stimulusPresent maxHeight="0" percentOfPage="0" animate="stimuliCode" showControls="false" maxWidth="0">
                                    <mediaLoaded />
                                    <mediaLoadFailed />
                                    <mediaPlaybackStarted />
                                    <mediaPlaybackComplete>
                                        <pause msToNext="7000">
                                            <sendGroupMessage eventTag="autoNext" incrementPhase="1" />
                                        </pause>
                                    </mediaPlaybackComplete>
                                </stimulusPresent>
                            </groupMemberActivity>
                            <groupMemberActivity phaseMembers="-:A:-:-:B:-:-:C:-:-:D:-:-:E:-:-:F:-">
                                <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                                <submitGroupEvent />
                                <sendGroupMessage eventTag="group record submitted" incrementPhase="1" />
                            </groupMemberActivity>
                        </groupPhaseListeners>
                    </groupNetwork>
                    <endOfStimulus>
                        <!--groupNetwork groupMembers="A,B,C,D,E,F" phasesPerStimulus="1" groupCommunicationChannels="A|B|C|D|E|F">
                            <groupFindingMembers>
                                <htmlText featureText="endOfStimulus groupFindingMembers"/>
                            </groupFindingMembers>
                            <groupInitialisationError>
                                <htmlText featureText="groupInitialisationError" />
                            </groupInitialisationError>
                            <groupNetworkConnecting>
                                <htmlText featureText="endOfStimulus groupNetworkConnecting"/>
                            </groupNetworkConnecting>
                            <groupNetworkSynchronising>
                                <htmlText featureText="endOfStimulus groupNetworkSynchronising"/>
                            </groupNetworkSynchronising>
                            <groupPhaseListeners>
                                <sendGroupEndOfStimuli eventTag="endOfStimulusGroupMessage"/>
                            </groupPhaseListeners>
                        </groupNetwork-->
                        <htmlText featureText="endOfStimulus" />
                    </endOfStimulus>
                    <randomGrouping />
                    <stimuli>
                        <tag>BalloonGroup</tag>
                    </stimuli>
                </groupStimuli>
            </actionButton>
        </regionReplace>
    </presenter>
    <presenter back="Menu" menuLabel="SendGroupStoredMessage" type="stimulus" self="SendGroupStoredMessage" title="SendGroupStoredMessage">
        <htmlText featureText="This example has a group of three with two communication channels. A and B share a communication channel and B and C also share a communication channel. This means that B communicates with both A and C. But A and C never communicate directly." />
        <groupStimuli adjacencyThreshold="0" eventTag="GroupFormation" randomise="false" repeatRandomWindow="0" maxStimuli="100" repeatCount="1">
            <groupNetwork groupMembers="A,B,C" phasesPerStimulus="3" groupCommunicationChannels="A,B|B,C">
                <groupInitialisationError>
                    <htmlText featureText="groupInitialisationError" />
                </groupInitialisationError>
                <groupNetworkConnecting>
                    <htmlText featureText="GroupFormation groupNetworkConnecting" />
                    <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                </groupNetworkConnecting>
                <groupFindingMembers>
                    <htmlText featureText="GroupFormation groupFindingMembers" />
                    <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                </groupFindingMembers>
                <groupNetworkSynchronising>
                    <htmlTokenText featureText="Connected to: &lt;groupId&gt;&lt;br/&gt;&lt;br/&gt;Group members: &lt;groupAllMemberCodes&gt;&lt;br/&gt;&lt;br/&gt;As member: &lt;groupMemberCode&gt;&lt;br/&gt;&lt;br/&gt;" />
                    <htmlText featureText="GroupFormation groupNetworkSynchronising" />
                    <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                </groupNetworkSynchronising>
                <groupPhaseListeners>
                    <groupMemberActivity phaseMembers="B,C:A,C:A,B">
                        <htmlTokenText featureText="&lt;groupMemberCode&gt; is waiting" />
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="A:-:-">
                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupActiveChannel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupMemberCode: &lt;groupMemberCode&gt;" />
                        <regionReplace regionId="groupButtonsRegion">
                            <stimulusLabel />
                            <stimulusFreeText featureText="Please enter at least three characters." groupId="MessageType1" validationRegex=".{1,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" />
                            <actionButton featureText="validateStimuliResponses">
                                <validateStimuliResponses>
                                    <conditionTrue>
                                        <regionAppend regionId="validateStimuliResponses">
                                            <plainText featureText="plainText in conditionTrue" />
                                            <regionReplace regionId="groupButtonsRegion">
                                                <actionButton featureText="sendGroupStoredMessage">
                                                    <sendGroupStoredMessage incrementPhase="1" groupId="MessageType1" />
                                                </actionButton>
                                            </regionReplace>
                                        </regionAppend>
                                    </conditionTrue>
                                    <conditionFalse>
                                        <regionAppend regionId="validateStimuliResponses">
                                            <plainText featureText="plainText in conditionFalse" />
                                        </regionAppend>
                                    </conditionFalse>
                                </validateStimuliResponses>
                            </actionButton>
                        </regionReplace>
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:B:-">
                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupActiveChannel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupMemberCode: &lt;groupMemberCode&gt;" />
                        <regionReplace regionId="groupButtonsRegion">
                            <sendGroupMessageButton repeatIncorrect="false" incrementPhase="1" featureText="forward message" />
                        </regionReplace>
                    </groupMemberActivity>
                    <groupMemberActivity phaseMembers="-:-:C">
                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupActiveChannel: &lt;groupActiveChannel&gt;" />
                        <htmlTokenText featureText="groupMemberCode: &lt;groupMemberCode&gt;" />
                        <regionReplace regionId="groupButtonsRegion">
                            <sendGroupMessageButton repeatIncorrect="false" incrementPhase="1" featureText="forward message" />
                        </regionReplace>
                    </groupMemberActivity>
                </groupPhaseListeners>
            </groupNetwork>
            <endOfStimulus>
                <centrePage />
                <htmlText featureText="No valid stimuli" />
            </endOfStimulus>
            <randomGrouping />
            <stimuli>
                <tag>BalloonGroup</tag>
            </stimuli>
        </groupStimuli>
    </presenter>
    <presenter back="Instruction" menuLabel="GroupOf2" type="stimulus" self="GroupOf2" title="GroupOf2">
        <htmlText featureText="GroupOf2" />
        <htmlText featureText="This example involves communication between two people. Therefore only members A and B will be shown activities here." />
        <htmlText featureText="The two member group is achieved with groupMembers=&quot;A,B&quot; and groupCommunicationChannels=&quot;A,B&quot;." />
        <htmlText featureText="The group that this instance tries to join is determined by the URL parameter &quot;group&quot;." />
        <htmlText featureText="The group member that this instance requests to be is determined by the URL parameter &quot;member&quot;." />
        <!-- What I guess I need for that to work is a way to correctly assign two persons to the same group, a way to send/receive text, and a way to correctly manage the asymmetry, i.e. make sure one participant has the marked target and sends text, the other person receives text and selects a target. -->
        <regionReplace regionId="groupStatusRegion" />
        <hasGetParameter parameterName="group">
            <conditionTrue>
                <hasGetParameter parameterName="member">
                    <conditionTrue>
                        <table>
                            <row>
                                <column>
                                    <regionReplace regionId="leftImageRegion" />
                                </column>
                                <column>
                                    <regionReplace regionId="rightImageRegion" />
                                </column>
                            </row>
                            <row>
                                <column>
                                    <regionReplace regionId="leftImageRegion_label" />
                                </column>
                                <column>
                                    <regionReplace regionId="rightImageRegion_label" />
                                </column>
                            </row>
                        </table>
                        <regionReplace regionId="textInputRegion" />
                        <regionReplace regionId="textStatusRegion" />
                        <groupStimuli eventTag="GroupOf2" randomise="true" repeatRandomWindow="3" maxStimuli="6" repeatCount="1">
                            <groupNetwork groupMembers="A,B" phasesPerStimulus="3" groupCommunicationChannels="A,B">
                                <groupInitialisationError>
                                    <htmlText featureText="groupInitialisationError" />
                                </groupInitialisationError>
                                <groupNetworkConnecting>
                                    <regionReplace regionId="groupStatusRegion">
                                        <htmlText featureText="groupNetworkConnecting" />
                                        <addPadding />
                                    </regionReplace>
                                </groupNetworkConnecting>
                                <groupFindingMembers>
                                    <regionReplace regionId="groupStatusRegion">
                                        <htmlText featureText="groupFindingMembers" />
                                        <htmlTokenText featureText="This is member: &lt;groupMemberCode&gt;" />
                                        <htmlTokenText featureText="Required members: &lt;groupAllMemberCodes&gt;" />
                                        <htmlTokenText featureText="Assigned members: &lt;groupAssignedMemberCodes&gt;" />
                                        <htmlTokenText featureText="Group: &lt;groupId&gt;" />
                                        <addPadding />
                                    </regionReplace>
                                </groupFindingMembers>
                                <groupNetworkSynchronising>
                                    <regionReplace regionId="groupStatusRegion">
                                        <htmlText featureText="groupNetworkSynchronising" />
                                        <htmlTokenText featureText="Stimulus: &lt;stimulusId&gt; Phase: &lt;groupRequestedPhase&gt; Channel: &lt;groupActiveChannel&gt;" />
                                        <addPadding />
                                    </regionReplace>
                                </groupNetworkSynchronising>
                                <groupPhaseListeners>
                                    <groupMemberActivity phaseMembers="A,B:-:-">
                                        <!-- clear any old images and labels -->
                                        <regionReplace regionId="leftImageRegion" />
                                        <regionReplace regionId="leftImageRegion_label" />
                                        <regionReplace regionId="rightImageRegion" />
                                        <regionReplace regionId="rightImageRegion_label" />
                                        <regionReplace regionId="textInputRegion" />
                                        <regionReplace regionId="textStatusRegion" />
                                        <!-- the position of the images is randomised here, in this example the randomisation is independent of other group members -->
                                        <matchOnEvalTokens evaluateTokens="random(2) &gt; 0" matchingRegex="true">
                                            <conditionTrue>
                                                <setMetadataValue fieldName="stimulusImageRegion" dataLogFormat="leftImageRegion"/>
                                                <setMetadataValue fieldName="distractorImageRegion" dataLogFormat="rightImageRegion"/>
                                            </conditionTrue>
                                            <conditionFalse>
                                                <setMetadataValue fieldName="stimulusImageRegion" dataLogFormat="rightImageRegion"/>
                                                <setMetadataValue fieldName="distractorImageRegion" dataLogFormat="leftImageRegion"/>
                                            </conditionFalse>
                                            <onError>
                                                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
                                            </onError>
                                        </matchOnEvalTokens>
                                        <!--Each person sees the same two pictures. This is the first phase of phaseMembers=A,B:-:- therefore A and B see this action. -->
                                        <regionReplace regionId="&lt;metadataField_distractorImageRegion&gt;">
                                            <stimulusCodeImage codeFormat="&lt;code&gt;_B.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                                <mediaLoaded>
                                                    <regionReplace regionId="&lt;metadataField_stimulusImageRegion&gt;">
                                                        <stimulusImage msToNext="0" styleName="styleName" dataChannel="2">
                                                            <mediaLoaded>
                                                                <sendGroupMessage eventTag="imagesReady" incrementPhase="1" />
                                                            </mediaLoaded>
                                                            <mediaLoadFailed>
                                                                <htmlText featureText="mediaLoadFailed"/>
                                                            </mediaLoadFailed>
                                                        </stimulusImage>
                                                    </regionReplace>
                                                </mediaLoaded>
                                                <mediaLoadFailed>
                                                    <htmlText featureText="mediaLoadFailed"/>
                                                </mediaLoadFailed>
                                            </stimulusCodeImage>
                                        </regionReplace>
                                    </groupMemberActivity>
                                    <!-- These roles reverse at some point in the experiment: in this example there are 3 phases per stimulus, 
                                        so -:B:-:-:B:-:-:B:-:-:A:-:-:A:-:-:A:- and -:-:A:-:-:A:-:-:A:-:-:B:-:-:B:-:-:B defines a direction of communication per stimulus.
                                        This method is keeps this example smaller however this is just one way of achieving the mid point change. -->
                                    <groupMemberActivity phaseMembers="-:A:-:-:A:-:-:A:-:-:B:-:-:B:-:-:B:-">
                                        <regionReplace regionId="&lt;metadataField_stimulusImageRegion&gt;_label">
                                            <!-- This member sees one of the pictures marked as ‘target’. -->
                                            <htmlText featureText="target"/>
                                        </regionReplace>
                                        <regionReplace regionId="textInputRegion">
                                            <!-- The person with the marked target types in a description of that specific picture into a text box. -->
                                            <stimulusFreeText featureText="Please enter at least three characters." groupId="descriptionInput" validationRegex=".{1,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" />
                                            <actionButton featureText="validateStimuliResponse">
                                                <validateStimuliResponses>
                                                    <conditionTrue>
                                                        <!-- The description is then sent to the other person. -->
                                                        <sendGroupStoredMessage incrementPhase="1" groupId="descriptionInput" />
                                                        <regionReplace regionId="textInputRegion"/>
                                                    </conditionTrue>
                                                    <conditionFalse />
                                                </validateStimuliResponses>
                                            </actionButton>
                                        </regionReplace>
                                    </groupMemberActivity>
                                    <groupMemberActivity phaseMembers="-:B:-:-:B:-:-:B:-:-:A:-:-:A:-:-:A:-">
                                        <regionReplace regionId="textStatusRegion">
                                            <!-- This member does not see which pictures is marked as ‘target’ -->
                                        </regionReplace>
                                        <!-- sendGroupMessage is not required for this member here /-->
                                    </groupMemberActivity>
                                    <groupMemberActivity phaseMembers="-:-:A:-:-:A:-:-:A:-:-:B:-:-:B:-:-:B">
                                        <regionReplace regionId="textStatusRegion">
                                            <htmlTokenText featureText="This other group member is selecting an image to your text: &lt;groupMessageString&gt;" />
                                            <!-- sendGroupMessage is not required for this member here /-->
                                        </regionReplace>
                                    </groupMemberActivity>
                                    <groupMemberActivity phaseMembers="-:-:B:-:-:B:-:-:B:-:-:A:-:-:A:-:-:A">
                                        <regionReplace regionId="textStatusRegion">
                                            <!-- The other memebr sees the description and has to guess which picture was the target. -->
                                            <htmlTokenText featureText="Please select the image indicated by this text: &lt;groupMessageString&gt;" />
                                        </regionReplace>
                                        <regionReplace regionId="&lt;metadataField_stimulusImageRegion&gt;_label">
                                            <!--sendGroupMessageButton repeatIncorrect="false" incrementPhase="1" featureText="forward message" /-->
                                            <actionButton featureText="Choose">
                                                <!-- this example does not cover group and channel scoring which would be done here -->
                                                <sendGroupMessage eventTag="X" incrementPhase="1" />
                                            </actionButton>
                                        </regionReplace>
                                        <regionReplace regionId="&lt;metadataField_distractorImageRegion&gt;_label">
                                            <!--sendGroupMessageButton repeatIncorrect="false" incrementPhase="1" featureText="forward message" /-->
                                            <actionButton featureText="Choose">
                                                <!-- this example does not cover group and channel scoring which would be done here -->
                                                <sendGroupMessage eventTag="Y" incrementPhase="1" />
                                            </actionButton>
                                        </regionReplace>
                                    </groupMemberActivity>
                                </groupPhaseListeners>
                            </groupNetwork>
                            <endOfStimulus>
                                <regionReplace regionId="leftImageRegion" />
                                <regionReplace regionId="leftImageRegion_label" />
                                <regionReplace regionId="rightImageRegion" />
                                <regionReplace regionId="rightImageRegion_label" />
                                <regionReplace regionId="textInputRegion">
                                    <htmlText featureText="End of stimuli" />
                                </regionReplace>
                                <regionReplace regionId="textStatusRegion" />
                            </endOfStimulus>
                            <randomGrouping />
                            <stimuli>
                                <tag>GroupOf2Images</tag>
                            </stimuli>
                        </groupStimuli>
                    </conditionTrue>
                    <conditionFalse>
                        <htmlText featureText="The group member code has not been provided. Please specify the member code by adding &amp;member=X to the URL." />
                        <addPadding />
                    </conditionFalse>
                </hasGetParameter>
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="Please provide a group name by appending &amp;group=X to the URL." />
                <addPadding />
            </conditionFalse>
        </hasGetParameter>
    </presenter>
    <presenter back="Instruction" menuLabel="Fini" type="transmission" self="Fini" title="Fini">
        <generateCompletionCode>
            <onSuccess>
                <htmlText featureText="completionScreenText1" />
                <addPadding />
                <displayCompletionCode />
            </onSuccess>
            <onError>
                <plainText featureText="Impossible de contacter le serveur, vérifiez votre connexion Internet s'il vous plaît." />
                <targetButton featureText="Réessayer" target="Fini" />
            </onError>
        </generateCompletionCode>
    </presenter>
    <presenter menuLabel="Menu" type="menu" self="Menu" title="Menu">
        <allMenuItems />
    </presenter>
    <stimuli>
        <stimulus code="stimulus1" identifier="stimulus1" label="Stimulus 1" pauseMs="0" tags="BalloonGroup" />
        <stimulus code="stimulus2" identifier="stimulus2" label="Stimulus 2" pauseMs="0" tags="BalloonGroup" />
        <stimulus code="stimulus3" identifier="stimulus3" label="Stimulus 3" pauseMs="0" tags="BalloonGroup" />
        <stimulus code="1" identifier="Image1" imagePath="1_A.png" label="1" tags="GroupOf2Images" />
        <stimulus code="2" identifier="Image2" imagePath="2_A.png" label="2" tags="GroupOf2Images" />
        <stimulus code="3" identifier="Image3" imagePath="3_A.png" label="3" tags="GroupOf2Images" />
        <stimulus code="4" identifier="Image4" imagePath="4_A.png" label="4" tags="GroupOf2Images" />
        <stimulus code="5" identifier="Image5" imagePath="5_A.png" label="5" tags="GroupOf2Images" />
        <stimulus code="6" identifier="Image6" imagePath="6_A.png" label="6" tags="GroupOf2Images" />
    </stimuli> 
</experiment>
