<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<experiment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="frinex.xsd" 
            userIdGetParam="uuid" 
            appNameDisplay="With Stimulus Example" 
            appNameInternal="with_stimulus_example" 
            backgroundColour="#FFFFFF" 
            complementColour0="#EAC3A3" 
            complementColour1="#9D7B5E"
            complementColour2="#C69E7C"
            complementColour3="#FFEDDE"
            complementColour4="#FFFDFB" 
            defaultScale="1.0" 
            isScalable="true"
            preserveLastState="false" 
            primaryColour0="#628D8D" 
            primaryColour1="#385E5E" 
            primaryColour2="#4A7777" 
            primaryColour3="#96ADAD"
            primaryColour4="#D5D8D8" 
            rotatable="true" 
            showMenuBar="true" 
            textFontSize="17" 
            obfuscateBrowserStorage="false"
>
    <deployment
        publishDate="2020-02-02"
        expiryDate="2025-02-22"
        isWebApp="true"
        isDesktop="true"
        isiOS="true"
        isAndroid="true"
        state="staging"
    />
    <validationService stagingUrl="/with_stimulus_example-admin/validate" productionUrl="/with_stimulus_example-admin/mock-nph-read_bq_exp_data.pl"/>
    <administration>
        <!--<dataAgreementField fieldName="dataAgreement" matchingRegex="true"/>  change this to have an attribute for each data type with its own regex "|disagree|agree"-->
        <adminUser name="example1" password="example1" />
        <adminUser name="example2" password="example2" />
        <adminUser name="example3" password="example3" />
        <dataChannel channel="0" label="Example" logToSdCard="false"/>
        <dataChannel channel="1" label="Data" logToSdCard="false"/>
        <dataChannel channel="2" label="Channel" logToSdCard="false"/>
        <dataChannel channel="3" label="Titles" logToSdCard="false"/>
        <dataChannel channel="4" label="Configuration" logToSdCard="false"/>
    </administration>
    <scss>
        .gwt-Button.optionButton.toggleBox {
        background: none;
        }
        .gwt-Button.popupButton {
        margin: 0px 10px 0px 10px;
        }
        .toggleBoxOn, .toggleBoxOff
        {
        position: absolute;
        border-radius: 15px;
        background: lightgrey;
        width: 15vw;
        }
        .toggleBoxOn
        {
        border: #4A7777 solid 3px;
        }
        .toggleBoxOff
        {
        border: #D5D8D8 solid 3px;
        }
        .toggleBox1 {
        left: 10vw;
        }
        .toggleBox2 {
        left: 27vw;
        }
        .toggleBox3 {
        left: 43vw;
        }
        .toggleBox4 {
        left: 59vw;
        }
        .toggleBox5 {
        left: 75vw;
        }
        .smallVideo {
        width: 100px;
        }
        .hardwareLightSensorPadding {
        display: block;
        height: 225px;
        }
        .hardwareLightSensor1Show, .hardwareLightSensor2Show,
        .hardwareLightSensor1Hide, .hardwareLightSensor2Hide,
        .hardwareLightSensor1Outline, .hardwareLightSensor2Outline {
        position: fixed;
        left: 50%; 
        height: 200px;
        width: 200px;
        }
        .hardwareLightSensor1Show, .hardwareLightSensor1Hide, .hardwareLightSensor1Outline {
        transform: translate(-125%,0);
        }
        .hardwareLightSensor2Show, .hardwareLightSensor2Hide, .hardwareLightSensor2Outline {
        transform: translate(25%,0);
        }
        .hardwareLightSensor1Outline, .hardwareLightSensor2Outline {
        border: 1px black solid;
        }
        .hardwareLightSensor1Show, .hardwareLightSensor2Show {
        background: black;
        display: block;
        }
        .hardwareLightSensor1Hide, .hardwareLightSensor2Hide {
        display: none;
        }
        $boxPositions: (
        ("10X15_30X60_45X60_75X90",10,15,30,60,45,60,75,90),
        ("45X10_15X60_75X30_60X90",45,10,15,60,75,30,60,90),
        ("45X90_10X10_15X75_30X60",45,90,10,10,15,75,30,60)
        );
        @each $boxPos in $boxPositions {
        @each $boxIndex in 1 2 3 4 {
        @each $boxState in "black" "white" {
        .box_#{nth($boxPos,1)}_#{$boxIndex}_#{$boxState}
        {
        left: #{nth($boxPos,($boxIndex*2))}vmin;
        top: #{nth($boxPos,1+($boxIndex*2))}vmin;
        background: #{$boxState};
        position: fixed;
        width: 10vmin;
        height: 10vmin;
        border-color: black;
        border-width: 2px;
        border-style: solid;
        }
        }
        }
        }
        .gwt-Button.optionButton.buttonStyle {
        margin: 0px;
        width: 100%;
        height: 100%;
        background: none;
        color: none;
        }
        .stimulusImageButton {
        border: 1px solid blueviolet;
        padding: 5px;
        }
        .stimulusImageButton:hover {
        border: 3px solid blueviolet;
        padding: 3px;
        }
        .gwt-Button.menuButton.menuButtonDemoAStyle {
        background: rgb(193,227,241);
        border-radius: 0px;
        }
        .gwt-Button.menuButton.menuButtonDemoBStyle {
        background: rgb(246,170,139);
        border-radius: 5px;
        }
        .exampleBorderedBackground {
        border-radius: 5px;
        border: 1px solid blue;
        padding: 3px;
        }
        // Named styles for the styled checkboxes and radio buttons example
        .gwt-RadioButton.optionButton.exampleRatingRadio, .gwt-CheckBox.optionButton.exampleRatingCheckbox {
        background: none;
        border: 1px solid blue;
        padding: 3px;
        }
        .gwt-RadioButton.optionButton.exampleRatingRadio.optionButtonActivated, .gwt-CheckBox.optionButton.exampleRatingCheckbox.optionButtonActivated {
        border-radius: 15px;
        background: lightgrey;
        }
        .gwt-RadioButton.optionButton.exampleRatingRadio > input[type=radio], .gwt-CheckBox.optionButton.exampleRatingCheckbox > input[type=checkbox] {
        display: none;
        }
        .stickyMenuExample > tbody > tr:first-of-type > td {
        position: sticky;
        top: 0;
        }    
        .stickyMenuExample > tbody > tr:last-of-type > td {
        position: sticky;
        bottom: 0;
        }    
        .stickyMenuExample > tbody > tr > td {
        width: 50%;
        }    
        table.stickyMenuExample {
        background: aliceblue;
        overflow: auto;
        height: 50vh;
        display: inline-block;
        border: solid;
        border-width: 1px;
        }
        .stickyTableExample > tbody > tr:first-of-type > td:first-of-type {
        background-color: aliceblue;
        position: sticky;
        left: 0;
        }    
        .stickyTableExample > tbody > tr:first-of-type > td:last-of-type {
        background-color: aliceblue;
        position: sticky;
        right: 0;
        }
        .stickyTableExample > tbody > tr > td {
        min-width: 25vw;
        }
        .stickyContent > tbody > tr:nth-child(11) > td {
        position: sticky;
        top: 0;
        height: 150px;
        width: 50vw;
        background: cadetblue;
        }
        .normalRegionExample {
        height: 25vh;
        width: 25vw;
        margin: 12vw;
        background: beige;
        }
        .recordingLevelMeter{
        height: 1px;
        width: 25vw;
        margin: 12vw;
        background: blue;
        }
        .progressIndicatorHorizontal {            
        height: 15px;
        width: 100%;
        }
        .bargraphInner.progressIndicatorHorizontal {
        min-height: 15px;
        background: blue;
        }
        .progressIndicatorVertical {
        height: 100px;
        width: 20px;
        }
        .progressIndicatorVertical td {
        transform: rotate(180deg);
        }
        .bargraphInner.progressIndicatorVertical {
        min-width: 20px;
        background: d3def6;
        }
        .progressIndicatorRight {
        height: 15px;
        width: 100%;
        }
        .bargraphInner.progressIndicatorRight {
        min-height: 15px;
        background: green;
        margin-left: auto;
        }
    </scss>
    <metadata>
        <field controlledMessage="Voer minimaal drie letters." controlledRegex=".'{'3,'}'" postName="workerId" preventServerDuplicates="false" registrationField="Proefpersoon ID"/>
        <field controlledMessage="Voer een getal." controlledRegex="[0-9]+" postName="age" preventServerDuplicates="false" registrationField="Leeftijd"/>
        <field controlledMessage="." controlledRegex="hidden|visible enabled|visible disabled" postName="enabledVisibleOptions" preventServerDuplicates="false" registrationField="enabledVisibleOptions"/>
        <field controlledMessage="." controlledRegex="|man|vrouw|anders" postName="gender" preventServerDuplicates="false" registrationField="Geslacht"/>
        <field controlledMessage="." controlledRegex="basisonderwijs|voortgezet onderwijs|MBO|HBO|universiteit|anders" postName="education" preventServerDuplicates="false" registrationField="Opleidingsniveau"/>
        <field controlledMessage="." controlledRegex=".*" postName="educationOther" preventServerDuplicates="false" registrationField="Opleidingsniveau (anders, namelijk)"/>
        <field controlledMessage="." controlledRegex=".*" postName="connection" preventServerDuplicates="false" registrationField="Connection"/>
        <field controlledMessage="." controlledRegex=".*" postName="connections" preventServerDuplicates="false" registrationField="Connections"/>
        <field controlledMessage="Voer een getal in." controlledRegex="[0-3][0-9]/[0-1][0-9]/[1-2][0-9][0-9][0-9]" postName="dateOfBirth" preventServerDuplicates="false" registrationField="Geboortedatum"/>
        <field controlledMessage="." controlledRegex="|Set 1 Instapset 2;3-2;5 jaar|Set 2 Instapset 2;6-2;11 jaar|Set 3 Instapset 3;0-3;11 jaar|Set 4 Instapset 4;0-4;5 jaar|Set 5 Instapset 4;6-5;5 jaar|Set 6 Instapset 5;6-6;5 jaar|Set 7 Instapset 6;6-7;11 jaar|Set 8 Instapset 8;0-9;11 jaar|Set 9 Instapset 10;0-10;11 jaar|Set 10 Instapset 11;0 - 13;11 jaar" postName="ageGroup" preventServerDuplicates="false" registrationField="Instapset"/>
        <field controlledMessage="." controlledRegex=".*" postName="item" preventServerDuplicates="false" registrationField="item"/>
        <!-- The attribute in the Experiment element userIdGetParam="uuid" allows the internal user id to be set via the get parameter and this metadata field -->
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="uuid" preventServerDuplicates="false" registrationField="Invitation UUID"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="validated_uuid" preventServerDuplicates="false" registrationField="Validated UUID"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="validation_error" preventServerDuplicates="false" registrationField="Validation Error"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="session_id" preventServerDuplicates="false" registrationField="session id"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="step_done" preventServerDuplicates="false" registrationField="session done"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="session_steps" preventServerDuplicates="false" registrationField="session steps"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="session_step" preventServerDuplicates="false" registrationField="session step"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="session_next_step" preventServerDuplicates="false" registrationField="session_next_step"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="invitation_code" preventServerDuplicates="false" registrationField="invitation code"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="currentScore" preventServerDuplicates="false" registrationField="Current Score"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="currentPotential" preventServerDuplicates="false" registrationField="Current Potential"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="totalScore" preventServerDuplicates="false" registrationField="Total Score"/>
        <field controlledMessage="." controlledRegex=".'{'3,'}'" postName="totalPotential" preventServerDuplicates="false" registrationField="Total Potential"/>
        <field controlledMessage="." controlledRegex=".'{'0,'}'" postName="progressIndicator_steps" preventServerDuplicates="false" registrationField="progressIndicator steps"/>
        <field controlledMessage="." controlledRegex=".'{'0,'}'" postName="progressIndicator_step" preventServerDuplicates="false" registrationField="progressIndicator step"/>
        <field controlledMessage="." controlledRegex=".*" postName="stimuliSequentialDisplayExample" preventServerDuplicates="false" registrationField="Stimuli Allocation Field"/>
        <field controlledMessage="." controlledRegex=".*" postName="storedDate" preventServerDuplicates="false" registrationField="StoredDate"/>
        <field controlledMessage="." controlledRegex=".*" postName="customCompletionNumber" preventServerDuplicates="false" registrationField="customCompletionNumber"/>
        <field controlledMessage="." controlledRegex=".*" postName="notificationMinutesSettings" preventServerDuplicates="false" registrationField="Trigger Notification Minutes"/>
        <field controlledMessage="." controlledRegex=".*" postName="notificationRangeSettings" preventServerDuplicates="false" registrationField="Trigger Notification Range"/>
        <field controlledMessage="." controlledRegex=".*" postName="notificationRangeSnoozed" preventServerDuplicates="false" registrationField="Trigger Notification Snooze"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekdaySettings" preventServerDuplicates="false" registrationField="Weekday Notifications"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekendSettings" preventServerDuplicates="false" registrationField="Weekend Notifications"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekdayFromSettings" preventServerDuplicates="false" registrationField="Weekday Notifications From"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekdayUntilSettings" preventServerDuplicates="false" registrationField="Weekday Notifications Until"/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="notificationCountWeekdaySettings" preventServerDuplicates="false" registrationField="Number Of Notifications Per Day On Weekdays"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekendFromSettings" preventServerDuplicates="false" registrationField="Weekend Notifications From"/>
        <field controlledMessage="." controlledRegex="|08:00|09:00|10:00|12:00|14:00|14:10|14:20|14:30|14:40|14:50|15:00|15:10|15:20|15:30|15:40|15:50|16:00|16:10|16:20|16:30|16:40|16:50|17:00|17:10|17:20|17:30|17:40|17:50|18:00" postName="notificationWeekendUntilSettings" preventServerDuplicates="false" registrationField="Weekend Notifications Until"/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="notificationCountWeekendSettings" preventServerDuplicates="false" registrationField="Number Of Notifications Per Day On Weekends"/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="notificationMinutes" preventServerDuplicates="false" registrationField="Show One Notifications In X Minutes "/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="displayedOrder" preventServerDuplicates="false" registrationField="Used to store the randomisation sequence for the displayed stimuli in random_image_positions_remembered."/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="displayedTopic1" preventServerDuplicates="false" registrationField="Used to store the stimuli in topic 1 that have already been displayed."/>
        <field controlledMessage="." controlledRegex="[0-9]*" postName="displayedTopic234" preventServerDuplicates="false" registrationField="Used to store the stimuli in topics 2,3,4 that have already been displayed and when."/>
    </metadata> 
    <presenter back="Menu" menuLabel="Terug" next="Informatie" type="metadata" self="Toestemming" title="Toestemming">
        <htmlText featureText="Toestemmingsverklaring voor deelname aan het onderzoek:&lt;br/&gt;&lt;br/&gt;Ik stem geheel vrijwillig in met deelname aan dit onderzoek."/>
        <targetButton featureText="Akkoord" target="Informatie"/>
    </presenter>
    <presenter back="Toestemming" menuLabel="Terug" type="text" self="Informatie" title="Informatie">
        <htmlText featureText="Beste deelnemer, &lt;br/&gt;Bedankt dat je mee wilt doen aan dit onderzoek! &lt;br/&gt;&lt;br/&gt;"/>
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="Gegevens"/>
    </presenter>
    <presenter back="Informatie" menuLabel="Gegevens" next="Metadata_Jump_Test" type="metadata" self="Gegevens" title="Gegevens">
        <metadataField fieldName="workerId"/>
        <metadataField fieldName="age"/>
        <metadataField fieldName="gender"/>
        <metadataField fieldName="education"/>
        <metadataFieldVisibilityDependant fieldName="educationOther" linkedFieldName="education" visibleRegex="anders" enabledRegex=".*"/>
        <metadataFieldConnection fieldName="connection" linkedFieldName="workerId" oneToMany="false"/>
        <metadataFieldConnection fieldName="connections" linkedFieldName="workerId" oneToMany="true"/>
        <metadataField fieldName="dateOfBirth"/>
        <metadataFieldDateTriggered fieldName="ageGroup" linkedFieldName="dateOfBirth" daysThresholds="50 100 200 400 500 600 800 1000" visibleRegex=".*" enabledRegex=".*"/>
        <addPadding/>
        <htmlText featureText="When a dateOfBirth is entered the Instapset dropdown will jump to the age group specified in the daysThresholds attribute. This dropdown can then be editied as required."/>
        <htmlText featureText="The restulting value of Instapset can then be used in the following presenter to jump to the relevant section of the experiment."/>
        <addPadding/>
        <htmlText featureText="When Opleidingsniveau is equal to anders the extra field educationOther will be shown."/>
        <addPadding/>
        <saveMetadataButton featureText="Volgende" sendData="true" networkErrorMessage="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw.">
            <onError/>
            <onSuccess>
                <gotoNextPresenter/>
            </onSuccess>
        </saveMetadataButton>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test" type="stimulus" self="Metadata_Jump_Test" title="Metadata Jump Test">
        <htmlText featureText="When a ageGroup contains a value in the menu below the associated presenter will be shown and this menu skipped."/>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 1 Instapset 2;3-2;5 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_1"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 2 Instapset 2;6-2;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_2"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 3 Instapset 3;0-3;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_3"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 4 Instapset 4;0-4;5 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_4"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 5 Instapset 4;6-5;5 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_5"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 6 Instapset 5;6-6;5 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_6"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 7 Instapset 6;6-7;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_7"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 8 Instapset 8;0-9;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_8"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 9 Instapset 10;0-10;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_9"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="ageGroup" matchingRegex="Set 10 Instapset 11;0 - 13;11 jaar">
            <conditionTrue>
                <gotoPresenter target="Metadata_Jump_Test_Target_10"/>
            </conditionTrue>
            <conditionFalse>
            </conditionFalse>
        </hasMetadataValue>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 1" type="menu" self="Metadata_Jump_Test_Target_1" title="Metadata Jump Test Target 1">
        <htmlText featureText="Metadata Jump Test Target 1."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 2" type="menu" self="Metadata_Jump_Test_Target_2" title="Metadata Jump Test Target 2">
        <htmlText featureText="Metadata Jump Test Target 2."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 3" type="menu" self="Metadata_Jump_Test_Target_3" title="Metadata Jump Test Target 3">
        <htmlText featureText="Metadata Jump Test Target 3."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 4" type="menu" self="Metadata_Jump_Test_Target_4" title="Metadata Jump Test Target 4">
        <htmlText featureText="Metadata Jump Test Target 4."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 5" type="menu" self="Metadata_Jump_Test_Target_5" title="Metadata Jump Test Target 5">
        <htmlText featureText="Metadata Jump Test Target 5."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 6" type="menu" self="Metadata_Jump_Test_Target_6" title="Metadata Jump Test Target 6">
        <htmlText featureText="Metadata Jump Test Target 6."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 7" type="menu" self="Metadata_Jump_Test_Target_7" title="Metadata Jump Test Target 7">
        <htmlText featureText="Metadata Jump Test Target 7."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 8" type="menu" self="Metadata_Jump_Test_Target_8" title="Metadata Jump Test Target 8">
        <htmlText featureText="Metadata Jump Test Target 8."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 9" type="menu" self="Metadata_Jump_Test_Target_9" title="Metadata Jump Test Target 9">
        <htmlText featureText="Metadata Jump Test Target 9."/>
    </presenter>
    <presenter back="Gegevens" menuLabel="Metadata Jump Test Target 10" type="menu" self="Metadata_Jump_Test_Target_10" title="Metadata Jump Test Target 10">
        <htmlText featureText="Metadata Jump Test Target 10."/>
    </presenter>
    <presenter back="Menu" menuLabel="Nested Table Test" type="text" self="First_Stimuli_Screen_Informatie" title="Nested Table Test">
        <htmlText featureText="Instructies 1: &lt;br/&gt;&lt;br/&gt;Druk op [Z] als de zin kompleet is, of op [.]."/>
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="First_Stimuli_Screen"/>
        <table styleName="menuTable">
            <row>
                <column styleName="menuTable">
                    <plainText featureText="outer column 1"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="outer column 2"/>
                    <table styleName="menuTable">
                        <row>
                            <column styleName="menuTable">
                                <plainText featureText="column 1 in table 1"/>
                            </column >
                            <column styleName="menuTable">
                                <plainText featureText="column 2 in table 1"/>
                                <table styleName="menuTable">
                                    <row>
                                        <column styleName="menuTable">
                                            <plainText featureText="column 1 in table 2"/>
                                        </column >
                                        <column styleName="menuTable">
                                            <plainText featureText="column 2 in table 2"/>
                                        </column>
                                        <column styleName="menuTable">
                                            <plainText featureText="column3 in table 2"/>
                                        </column>
                                    </row>
                                </table>
                            </column>
                            <column styleName="menuTable">
                                <plainText featureText="column3 in table 1"/>
                                <table styleName="menuTable">
                                    <row>
                                        <column styleName="menuTable">
                                            <plainText featureText="column 1 in table 3"/>
                                        </column >
                                        <column styleName="menuTable">
                                            <plainText featureText="column 2 in table 3"/>
                                        </column>
                                        <column styleName="menuTable">
                                            <plainText featureText="column3 in table 3"/>
                                        </column>
                                    </row>
                                </table>
                            </column>
                        </row>
                    </table>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="outer column3"/>
                </column>
            </row>
        </table>
    </presenter>
    <presenter back="Menu" menuLabel="Sticky Table Example" type="text" self="sticky_table_example" title="Sticky Table Example">
        <htmlText featureText="This table uses a custom style &quot;stickyTableExample&quot; in the SCSS section of the experiment XML."/>
        <htmlText featureText="The custom style causes the left and right columns to stay in view regardless of page scrolling."/>
        <htmlText featureText="Because the CSS position: sticky; has specific requirements, this is applied via the parent table not the cells."/>
        <addPadding/>
        <targetButton featureText="Sticky Region Example" hotKey="SPACE" target="sticky_region_example"/>
        <addPadding/>
        <targetButton featureText="Sticky Menu Example" hotKey="SPACE" target="sticky_menu_example"/>
        <addPadding/>
        <table styleName="stickyTableExample menuTable">
            <row>
                <column styleName="menuTable">
                    <plainText featureText="sticky column 1"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="padding column 2"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="padding column 3"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="padding column 4"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="padding column 5"/>
                </column>
                <column styleName="menuTable">
                    <plainText featureText="sticky column 6"/>
                </column>
            </row>
        </table>
    </presenter>
    <presenter back="Menu" menuLabel="Sticky Menu Example" type="menu" self="sticky_menu_example" title="Sticky Menu Example">
        <htmlText featureText="This menu uses a custom style &quot;stickyMenuExample&quot; in the SCSS section of the experiment XML."/>
        <htmlText featureText="The custom style causes the first and last menu items to stay in view regardless of menu scrolling."/>
        <htmlText featureText="Because the CSS position: sticky; acts on a container not the component, this style is applied to the parent menu not the menu items directly."/>
        <htmlText featureText="Please not that this example uses a feature of allMenuItems that currently is not avaiable in individual menuItems (if you want this feature please ask for a stylable menu wrapper element for menuItems)."/>
        <addPadding/>
        <targetButton featureText="Sticky Table Example" hotKey="SPACE" target="sticky_table_example"/>
        <addPadding/>
        <targetButton featureText="Sticky Region Example" hotKey="SPACE" target="sticky_region_example"/>
        <addPadding/>
        <allMenuItems styleName="stickyMenuExample"/>
    </presenter>
    <presenter back="Menu" menuLabel="Sticky Region Example" type="stimulus" self="sticky_region_example" title="Sticky Region Example">
        <clearPage styleName="contentBody stickyContent"/>
        <htmlText featureText="This region uses a custom style &quot;stickyContent&quot; in the SCSS section of the experiment XML."/>
        <htmlText featureText="The custom style causes the contents of the region to stay in view regardless of page scrolling."/>
        <htmlText featureText="Because the CSS position: sticky; acts on a container not the component, this is applied to the parent table not the cells."/>
        <htmlText featureText="In this case the container style is set by &amp;lt;clearPage styleName=&quot;stickyContent&quot;/&amp;gt;."/>
        <plainText featureText="Which applies to the component (region1) because it is the 11th child: .stickyContent > tbody > tr:nth-child(11) > td"/>
        <addPadding/>
        <targetButton featureText="Sticky Table Example" hotKey="SPACE" target="sticky_table_example"/>
        <addPadding/>
        <targetButton featureText="Sticky Menu Example" hotKey="SPACE" target="sticky_menu_example"/>
        <addPadding/>
        <regionAppend regionId="region1">
            <plainText featureText="sticky region 1"/>
        </regionAppend>
        <regionAppend regionId="region2" styleName="normalRegionExample">
            <plainText featureText="region 2"/>
        </regionAppend>
        <regionAppend regionId="region3" styleName="normalRegionExample">
            <plainText featureText="region 3"/>
        </regionAppend>
        <regionAppend regionId="region4" styleName="normalRegionExample">
            <plainText featureText="region 4"/>
        </regionAppend>
        <regionAppend regionId="region5" styleName="normalRegionExample">
            <plainText featureText="region 5"/>
        </regionAppend>
        <regionAppend regionId="region6" styleName="normalRegionExample">
            <plainText featureText="region 6"/>
        </regionAppend>
        <regionAppend regionId="region7" styleName="normalRegionExample">
            <plainText featureText="region 7"/>
        </regionAppend>
        <regionAppend regionId="region8" styleName="normalRegionExample">
            <plainText featureText="region 8"/>
        </regionAppend>
    </presenter>
    <presenter back="Menu" menuLabel="Popup Dialogue Example" type="stimulus" self="popup_dialogue_example" title="Popup Dialogue Example">
        <clearPage/>
        <plainText featureText="This presenter shows a few demonstration popups. Popups direct the user to the information and the actions of the popup. However the user can always close the browser or application if they don't like the options you give them."/>
        <actionButton featureText="Popup">
            <showHtmlPopup featureText="This is some text in the popup dialogue.">  
                <actionButton featureText="OK">
                    <clearPage/>
                    <plainText featureText="The first demonstration popup has closed. The next one is different."/>
                    <actionButton featureText="Show Another Popup">
                        <showHtmlPopup featureText="This popup dialogue also has text, but it has &lt;b&gt;two&lt;/b&gt; buttons not one.">
                            <actionButton featureText="ActionButtonA (close)" styleName="popupButton">
                                <clearPage/> 
                                <plainText featureText="The second popup has closed."/>                
                                <actionButton featureText="Reload This Presenter">
                                    <gotoPresenter target="popup_dialogue_example"/>
                                </actionButton>
                            </actionButton>
                            <actionButton featureText="ActionButtonB (reload this presenter)" styleName="popupButton">
                                <gotoPresenter target="popup_dialogue_example"/>
                            </actionButton>
                        </showHtmlPopup>
                    </actionButton>
                </actionButton>
            </showHtmlPopup>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Compare the last two items" type="stimulus" self="compare_the_last_two_items" title="Compare the last two items">
        <htmlTokenText featureText="This example looks at the sequence of button clicks and performs an action when the last two clicks were on the same button."/>
        <htmlTokenText featureText="The sequence of button clicks has been: &lt;metadataField_session_steps&gt;"/>
        <hasMetadataValue fieldName="session_steps" matchingRegex=".*AA$">
            <conditionTrue>
                <plainText featureText="The A button was clicked the last two times in a row."/>
            </conditionTrue>
            <conditionFalse>
                <addPadding/>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="session_steps" matchingRegex=".*BB$">
            <conditionTrue>
                <plainText featureText="The B button was clicked the last two times in a row."/>
            </conditionTrue>
            <conditionFalse>
                <addPadding/>
            </conditionFalse>
        </hasMetadataValue>
        <hasMetadataValue fieldName="session_steps" matchingRegex=".*CC$">
            <conditionTrue>
                <plainText featureText="The C button was clicked the last two times in a row."/>
            </conditionTrue>
            <conditionFalse>
                <addPadding/>
            </conditionFalse>
        </hasMetadataValue>
        <actionButton featureText="ActionButton A">
            <setMetadataValue fieldName="session_steps" replacementRegex="" dataLogFormat="&lt;metadataField_session_steps&gt;A"/>
            <gotoPresenter target="compare_the_last_two_items"/>
        </actionButton>
        <actionButton featureText="ActionButton B">
            <setMetadataValue fieldName="session_steps" replacementRegex="" dataLogFormat="&lt;metadataField_session_steps&gt;B"/>
            <gotoPresenter target="compare_the_last_two_items"/>
        </actionButton>
        <actionButton featureText="ActionButton C">
            <setMetadataValue fieldName="session_steps" replacementRegex="" dataLogFormat="&lt;metadataField_session_steps&gt;C"/>
            <gotoPresenter target="compare_the_last_two_items"/>
        </actionButton>
        <addPadding/>
        <addPadding/>
        <actionButton featureText="Clear the sequence">
            <setMetadataValue fieldName="session_steps" replacementRegex="" dataLogFormat=""/>
            <gotoPresenter target="compare_the_last_two_items"/>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Snooze Notification Screen" type="metadata" self="Snooze" title="Snooze Notification Screen">
        <setMetadataValue fieldName="notificationRangeSnoozed" replacementRegex="" dataLogFormat="in_minutes:1 in_minutes:5 &lt;metadataField_notificationRangeSettings&gt;"/>
        <requestNotification targetOptions="Request_Notification_Screen,Menu,Snooze" featureText="Range Notification" fieldName="notificationRangeSnoozed" dataLogFormat="dataLogFormat for notificationA. PlayerMaxScore: &lt;playerMaxScore&gt;&lt;br/&gt; notificationSettings: &lt;notificationSettings&gt;">
            <onError> 
                <plainText featureText="Request Notification Failed. Notifications are only available on Android and iOS devices."/>
            </onError>
            <onSuccess>
                <plainText featureText="Request Notification Done"/>
                <htmlTokenText featureText="Your notification has been snoozed and another will show again in 1 and 5 minutes."/>
            </onSuccess>
        </requestNotification>
    </presenter>
    <presenter back="Menu" menuLabel="Request Notification Screen" type="metadata" self="Request_Notification_Screen" title="Request Notification Screen">
        <plainText featureText="This example is for Android and iOS apps and demonstrates how to request notifications at given times in the future."/>
        <metadataField fieldName="notificationMinutes"/>
        <addPadding/>
        <saveMetadataButton featureText="Request Minutes Notification" sendData="false" networkErrorMessage=".">
            <onError>
                <plainText featureText="Save metadata failed"/>
            </onError>
            <onSuccess>
                <setMetadataValue fieldName="notificationMinutesSettings" replacementRegex="" dataLogFormat="in_minutes:&lt;metadataField_notificationMinutes&gt;"/>
                <htmlTokenText featureText="notificationSettings: &lt;metadataField_notificationMinutesSettings&gt;&lt;br/&gt;"/>
                <requestNotification targetOptions="Request_Notification_Screen,Menu,Timer_Label_Screen" featureText="Minutes Notification" fieldName="notificationMinutesSettings" dataLogFormat="dataLogFormat for notificationA. PlayerMaxScore: &lt;playerMaxScore&gt;&lt;br/&gt; notificationSettings: &lt;notificationSettings&gt;">
                    <onError>
                        <plainText featureText="Request Notification Failed. Notifications are only available on Android and iOS devices."/>
                    </onError>
                    <onSuccess>
                        <plainText featureText="Request Notification Done"/>
                    </onSuccess>
                </requestNotification>
            </onSuccess>
        </saveMetadataButton>
        <addPadding/>
        <metadataField fieldName="notificationWeekdaySettings"/>
        <metadataField fieldName="notificationWeekendSettings"/>
        <addPadding/>
        <metadataField fieldName="notificationWeekdayFromSettings"/>
        <metadataField fieldName="notificationWeekdayUntilSettings"/>
        <metadataField fieldName="notificationCountWeekdaySettings"/>
        <addPadding/>
        <metadataField fieldName="notificationWeekendFromSettings"/>
        <metadataField fieldName="notificationWeekendUntilSettings"/>
        <metadataField fieldName="notificationCountWeekendSettings"/>
        <!--        <actionButton featureText="Request Notification">
                <requestNotification listenerId="notificationA" featureText="featureText for notificationA" fieldName="notificationMatchA" dataLogFormat="dataLogFormat for notificationA"/>
                <regionAppend regionId="regionTimerA">
                    <plainText featureText="Request Notification Done"/>
                </regionAppend>
        </actionButton>-->
        <saveMetadataButton featureText="Request Range Notifications" sendData="false" networkErrorMessage=".">
            <onError>
                <plainText featureText="Save metadata failed"/>
            </onError>
            <onSuccess>
                <setMetadataValue fieldName="notificationRangeSettings" replacementRegex="" dataLogFormat="weekdays:&lt;metadataField_notificationWeekdaySettings&gt; weekends:&lt;metadataField_notificationWeekendSettings&gt; weekdays_between:&lt;metadataField_notificationWeekdayFromSettings&gt;:&lt;metadataField_notificationWeekdayUntilSettings&gt;:&lt;metadataField_notificationCountWeekdaySettings&gt; weekends_between:&lt;metadataField_notificationWeekendFromSettings&gt;:&lt;metadataField_notificationWeekendUntilSettings&gt;:&lt;metadataField_notificationCountWeekendSettings&gt;"/>
                <htmlTokenText featureText="notificationSettings: &lt;metadataField_notificationRangeSettings&gt;&lt;br/&gt;"/>
                <requestNotification targetOptions="Request_Notification_Screen,Menu,Snooze" featureText="Range Notification" fieldName="notificationRangeSettings" dataLogFormat="dataLogFormat for notificationA. PlayerMaxScore: &lt;playerMaxScore&gt;&lt;br/&gt; notificationSettings: &lt;notificationSettings&gt;">
                    <onError>
                        <plainText featureText="Request Notification Failed. Notifications are only available on Android and iOS devices."/>
                    </onError>
                    <onSuccess>
                        <plainText featureText="Request Notification Done"/>
                    </onSuccess>
                </requestNotification>
            </onSuccess>
        </saveMetadataButton>
    </presenter>
    <presenter back="Menu" menuLabel="Timer Label Screen" type="stimulus" self="Timer_Label_Screen" title="Timer Label Screen">
        <startTimer msToNext="150000" listenerId="timerA">
            <regionAppend regionId="timerRegionA">
                <plainText featureText="Timer Completed"/>
            </regionAppend>
        </startTimer>
        <regionAppend regionId="timerRegionA">
        </regionAppend>
        <plainText featureText="timerLabel msToNext=30000 will count down 30000ms"/>
        <timerLabel listenerId="timerA" msLabelFormat="mm:ss" msToNext="30000" styleName="countDownLabel"/>
        <plainText featureText="timerLabel msToNext=0 will count up"/>
        <timerLabel listenerId="timerA" msLabelFormat="mm:ss" msToNext="0" styleName="countDownLabel"/>
        <actionButton featureText="Restart Timer">
            <clearTimer listenerId="timerA"/>
            <regionAppend regionId="timerRegionA">
                <plainText featureText="Timer Cleared"/>
                <plainText featureText="Timer Started"/>
            </regionAppend>
            <startTimer msToNext="15000" listenerId="timerA">
                <regionAppend regionId="timerRegionA">
                    <plainText featureText="Restarted Timer Completed"/>
                </regionAppend>
            </startTimer>
        </actionButton>
        <actionButton featureText="Clear Timer">
            <clearTimer listenerId="timerA"/>
            <regionAppend regionId="timerRegionA">
                <plainText featureText="Timer Cleared"/>
            </regionAppend>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Sequential Display Example (using 7 separate timers)" type="stimulus" self="Sequential_Display_Example0_6" title="Sequential Display Example (using 7 separate timers)">
        <loadStimulus eventTag="Sequential_Display_Example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="10">
            <hasMoreStimulus>
                <clearTimer listenerId="sequentialDisplayTimer0"/>
                <clearTimer listenerId="sequentialDisplayTimer1"/>
                <clearTimer listenerId="sequentialDisplayTimer2"/>
                <clearTimer listenerId="sequentialDisplayTimer3"/>
                <clearTimer listenerId="sequentialDisplayTimer4"/>
                <clearTimer listenerId="sequentialDisplayTimer5"/> 
                <clearTimer listenerId="sequentialDisplayTimer6"/>
                <clearPage/>
                <regionAppend regionId="hardwareLightSensor1Outline" styleName="hardwareLightSensor1Show">
                    <htmlText featureText="sync" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="hardwareLightSensor2Outline" styleName="hardwareLightSensor2Outline">
                    <htmlText featureText="&amp;nbsp;" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="crossLabelRegion" styleName="hardwareLightSensor1Hide">
                    <htmlText featureText="+" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Hide">
                    <stimulusLabel styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide"/>
                <regionAppend regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                <actionButton groupId="respondButtonGroup" featureText="Respond [space]" hotKey="SPACE">
                    <htmlTokenText featureText="respondButton &lt;sequentialDisplayTimer0&gt;ms"/>
                </actionButton>
                <disableButtonGroup matchingRegex="respondButtonGroup"/>
                <stimulusAudio dataChannel="2" autoPlay="false" mediaId="stimulusAudioExample" showPlaybackIndicator="false">
                    <mediaLoaded>
                        <plainText featureText="stimulusAudioLoaded"/>
                        <regionReplace regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide">
                            <stimulusVideo loop="false" styleName="smallVideo" dataChannel="2" autoPlay="false" mediaId="stimulusVideoExample" showControls="false">
                                <mediaLoaded>
                                    <plainText featureText="stimulusVideoLoaded"/>
                                    <clearTimer listenerId="sequentialDisplayTimer0"/>
                                    <clearTimer listenerId="sequentialDisplayTimer1"/>
                                    <clearTimer listenerId="sequentialDisplayTimer2"/>
                                    <clearTimer listenerId="sequentialDisplayTimer3"/>
                                    <clearTimer listenerId="sequentialDisplayTimer4"/>
                                    <clearTimer listenerId="sequentialDisplayTimer5"/>
                                    <clearTimer listenerId="sequentialDisplayTimer6"/>
                                    <startTimer msToNext="100" listenerId="sequentialDisplayTimer0">
                                        <regionStyle regionId="hardwareLightSensor1Outline" styleName="hardwareLightSensor1Outline"/>
                                        <regionStyle regionId="crossLabelRegion" styleName="hardwareLightSensor1Outline"/>
                                        <htmlTokenText featureText="crossLabelShow (100) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <timerLabel listenerId="sequentialDisplayTimer0" msLabelFormat="mm:ss" msToNext="0" styleName="countDownLabel"/>
                                    <startTimer msToNext="350" listenerId="sequentialDisplayTimer1">
                                        <regionStyle regionId="crossLabelRegion" styleName="hardwareLightSensor1Hide"/>
                                        <regionStyle regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Show"/>
                                        <htmlTokenText featureText="stimuliLabelShow (350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="1350" listenerId="sequentialDisplayTimer2">
                                        <regionStyle regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Hide"/>
                                        <playMedia mediaId="stimulusAudioExample"/>
                                        <htmlTokenText featureText="stimuliLabelHide (1350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="2350" listenerId="sequentialDisplayTimer3">
                                        <!-- it is probably better to never hide the video but make sure the first frames are blank instead, but this assumption needs to be tested -->
                                        <regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Show"/>
                                        <playMedia mediaId="stimulusVideoExample"/>
                                        <htmlTokenText featureText="stimuliVideoShow (2350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="3350" listenerId="sequentialDisplayTimer4">
                                        <regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide"/>
                                        <htmlTokenText featureText="stimuliVideoHide (3350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="400" listenerId="sequentialDisplayTimer5">
                                        <enableButtonGroup matchingRegex="respondButtonGroup"/>
                                        <htmlTokenText featureText="respondButtonEnabled (400) &lt;sequentialDisplayTimer0&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="3350" listenerId="sequentialDisplayTimer6">
                                        <disableButtonGroup matchingRegex="respondButtonGroup"/>
                                        <htmlTokenText featureText="respondButtonDisabled (3350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                        <htmlTokenText featureText="all timer values &lt;sequentialDisplayTimer0&gt;ms &lt;sequentialDisplayTimer1&gt;ms &lt;sequentialDisplayTimer2&gt;ms &lt;sequentialDisplayTimer3&gt;ms &lt;sequentialDisplayTimer4&gt;ms &lt;sequentialDisplayTimer5&gt;ms &lt;sequentialDisplayTimer6&gt;ms"/>
                                        <actionButton groupId="nextButtonGroup" featureText="Volgende [space]" hotKey="SPACE">
                                            <nextStimulus repeatIncorrect="false"/>
                                        </actionButton>
                                    </startTimer>
                                </mediaLoaded>
                                <mediaLoadFailed> 
                                    <plainText featureText="stimulusVideoFailed"/>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <htmlTokenText featureText="stimulusVideoPlaybackStarted (2350) &lt;sequentialDisplayTimer0&gt;ms"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <htmlTokenText featureText="stimulusVideoComplete &lt;sequentialDisplayTimer0&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusVideo>  
                        </regionReplace>
                    </mediaLoaded> 
                    <mediaLoadFailed>
                        <plainText featureText="stimulusAudioFailed"/>
                        <stimulusLabel/>
                        <actionButton featureText="Skip" hotKey="SPACE">
                            <nextStimulus repeatIncorrect="false"/>
                        </actionButton>
                    </mediaLoadFailed>
                    <mediaPlaybackStarted>
                        <htmlTokenText featureText="stimulusAudioPlaybackStarted (1350) &lt;sequentialDisplayTimer0&gt;ms"/>
                    </mediaPlaybackStarted> 
                    <mediaPlaybackComplete>
                        <htmlTokenText featureText="stimulusAudioComplete &lt;sequentialDisplayTimer0&gt;ms"/>
                    </mediaPlaybackComplete>
                </stimulusAudio>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="Sequential_Display_Example"/>
                    <gotoPresenter target="Sequential_Display_Example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>ToneVideos</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="HardwareTimeStamps" type="stimulus" self="hardware_time_stamps" title="HardwareTimeStamps">
        <!--Adding HardwareTimeStamps so that experiment timing can be tested in place.-->
        <loadStimulus eventTag="Sequential_Display_Example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="10">
            <hasMoreStimulus>
                <clearPage/>
                <regionAppend regionId="paddingRegion"/>
                <regionAppend regionId="hardwareTimeStampStatusRegion"/>
                <hasGetParameter parameterName="hardwareTimeStamp">
                    <conditionTrue>
                        <regionStyle regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="HardwareTimeStamps is enabled."/>
                        </regionAppend>
                    </conditionTrue>
                    <conditionFalse>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="The GET parameter hardwareTimeStamp has not been provided in the URL. HardwareTimeStamps disabled so this example will have no output."/>
                            <htmlText featureText="&lt;a href=&quot;?hardwareTimeStamp&quot;&gt;Enable HardwareTimeStamps&lt;/a&gt;"/>
                        </regionAppend>
                    </conditionFalse>
                </hasGetParameter>
                <table styleName="stimulusPanel">
                    <row>
                        <column>
                            <actionTokenButton featureText="off">
                                <hardwareTimeStamp dtmf="off"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <htmlText featureText="1209 Hz"/>
                        </column>
                        <column>
                            <htmlText featureText="1336 Hz"/>
                        </column>
                        <column>
                            <htmlText featureText="1477 Hz"/>
                        </column>
                        <column>
                            <htmlText featureText="1633 Hz"/>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="697 Hz"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="1">
                                <hardwareTimeStamp dtmf="1"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="2">
                                <hardwareTimeStamp dtmf="2"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="3">
                                <hardwareTimeStamp dtmf="3"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="A">
                                <hardwareTimeStamp dtmf="A"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="770 Hz"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="4">
                                <hardwareTimeStamp dtmf="4"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="5">
                                <hardwareTimeStamp dtmf="5"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="6">
                                <hardwareTimeStamp dtmf="6"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="B">
                                <hardwareTimeStamp dtmf="B"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="852 Hz"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="7">
                                <hardwareTimeStamp dtmf="7"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="8">
                                <hardwareTimeStamp dtmf="8"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="9">
                                <hardwareTimeStamp dtmf="9"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="C">
                                <hardwareTimeStamp dtmf="C"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="941 Hz"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="*">
                                <hardwareTimeStamp dtmf="*"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="0">
                                <hardwareTimeStamp dtmf="0"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="#">
                                <hardwareTimeStamp dtmf="#"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="D">
                                <hardwareTimeStamp dtmf="D"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="Optical"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="On 1">
                                <hardwareTimeStamp opto1="true"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Off 1">
                                <hardwareTimeStamp opto1="false"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="On 2">
                                <hardwareTimeStamp opto2="true"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Off 2">
                                <hardwareTimeStamp opto2="false"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="Video"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="Load">
                                <cancelPauseAll/>
                                <hardwareTimeStamp dtmf="1" opto1="true" opto2="false" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="stimulusVideo stimulusVideoExample"/>
                                </regionAppend>
                                <regionReplace regionId="stimuliVideoRegion">
                                    <stimulusVideo loop="false" styleName="smallVideo" dataChannel="2" autoPlay="false" mediaId="stimulusVideoExample" showControls="false">
                                        <mediaLoaded>
                                            <hardwareTimeStamp dtmf="2"/>
                                            <regionAppend regionId="stimuliLabelRegion">
                                                <plainText featureText="mediaLoaded stimulusVideoExample"/>
                                            </regionAppend>
                                        </mediaLoaded>
                                        <mediaLoadFailed>
                                            <hardwareTimeStamp dtmf="2" opto1="false" opto2="true" />
                                            <regionAppend regionId="stimuliLabelRegion">
                                                <plainText featureText="mediaLoadFailed stimulusVideoExample"/>
                                            </regionAppend>
                                        </mediaLoadFailed>
                                        <mediaPlaybackStarted>
                                            <hardwareTimeStamp dtmf="off" />
                                            <regionAppend regionId="stimuliLabelRegion">
                                                <plainText featureText="mediaPlaybackStarted stimulusVideoExample"/>
                                            </regionAppend>
                                        </mediaPlaybackStarted>
                                        <mediaPlaybackComplete>
                                            <hardwareTimeStamp dtmf="3" opto1="false" opto2="true" />
                                            <regionAppend regionId="stimuliLabelRegion">
                                                <plainText featureText="mediaPlaybackComplete stimulusVideoExample"/>
                                            </regionAppend>
                                        </mediaPlaybackComplete>
                                    </stimulusVideo>  
                                </regionReplace>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Pause">
                                <hardwareTimeStamp dtmf="4" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="pauseMedia stimulusVideoExample"/>
                                </regionAppend>
                                <pauseMedia mediaId="stimulusVideoExample"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Resume">
                                <hardwareTimeStamp dtmf="5" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="playMedia stimulusVideoExample"/>
                                </regionAppend>
                                <playMedia mediaId="stimulusVideoExample"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Rewind">
                                <hardwareTimeStamp dtmf="6" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="rewindMedia stimulusVideoExample"/>
                                </regionAppend>
                                <rewindMedia mediaId="stimulusVideoExample"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="Recorder OGG"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="Record">
                                <cancelPauseAll/>
                                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" mediaId="recordedMediaD">
                                    <onError>
                                        <hardwareTimeStamp dtmf="7" opto1="false" opto2="true" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="onError recordedMediaD"/>
                                        </regionAppend>
                                    </onError>
                                    <onSuccess>
                                        <hardwareTimeStamp dtmf="8" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="onSuccess recordedMediaD"/>
                                        </regionAppend>
                                    </onSuccess>
                                    <mediaLoaded>
                                        <hardwareTimeStamp dtmf="9" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaLoaded recordedMediaD"/>
                                        </regionAppend>
                                    </mediaLoaded>
                                    <mediaLoadFailed>                                        
                                        <hardwareTimeStamp dtmf="0" opto1="false" opto2="true" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaLoadFailed recordedMediaD"/>
                                        </regionAppend>
                                    </mediaLoadFailed>
                                    <mediaPlaybackStarted>                                        
                                        <hardwareTimeStamp dtmf="A" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaPlaybackStarted recordedMediaD"/>
                                        </regionAppend>
                                    </mediaPlaybackStarted>
                                    <mediaPlaybackComplete>
                                        <hardwareTimeStamp dtmf="B" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaPlaybackComplete recordedMediaD"/>
                                        </regionAppend>
                                    </mediaPlaybackComplete>
                                </startAudioRecorderWeb>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Pause">
                                <hardwareTimeStamp dtmf="C" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="pauseMedia recordedMediaD"/>
                                </regionAppend>
                                <pauseMedia mediaId="recordedMediaD"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Resume">
                                <hardwareTimeStamp dtmf="D" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="playMedia recordedMediaD"/>
                                </regionAppend>
                                <playMedia mediaId="recordedMediaD"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Stop">
                                <stopAudioRecorder/>	
                                <hardwareTimeStamp dtmf="off" opto1="false" opto2="true"/>
                            </actionTokenButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <htmlText featureText="Recorder WAV"/>
                        </column>
                        <column>
                            <actionTokenButton featureText="Record">
                                <cancelPauseAll/>
                                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" recordingFormat="wav" mediaId="recordedMediaE">
                                    <onError>
                                        <hardwareTimeStamp dtmf="7" opto1="false" opto2="true" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="onError recordedMediaE"/>
                                        </regionAppend>
                                    </onError>
                                    <onSuccess>
                                        <hardwareTimeStamp dtmf="8" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="onSuccess recordedMediaE"/>
                                        </regionAppend>
                                    </onSuccess>
                                    <mediaLoaded>
                                        <hardwareTimeStamp dtmf="9" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaLoaded recordedMediaE"/>
                                        </regionAppend>
                                    </mediaLoaded>
                                    <mediaLoadFailed>                                        
                                        <hardwareTimeStamp dtmf="0" opto1="false" opto2="true" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaLoadFailed recordedMediaE"/>
                                        </regionAppend>
                                    </mediaLoadFailed>
                                    <mediaPlaybackStarted>                                        
                                        <hardwareTimeStamp dtmf="A" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaPlaybackStarted recordedMediaE"/>
                                        </regionAppend>
                                    </mediaPlaybackStarted>
                                    <mediaPlaybackComplete>
                                        <hardwareTimeStamp dtmf="B" />
                                        <regionAppend regionId="stimuliLabelRegion">
                                            <plainText featureText="mediaPlaybackComplete recordedMediaE"/>
                                        </regionAppend>
                                    </mediaPlaybackComplete>
                                </startAudioRecorderWeb>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Pause">
                                <hardwareTimeStamp dtmf="C" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="pauseMedia recordedMediaE"/>
                                </regionAppend>
                                <pauseMedia mediaId="recordedMediaE"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Resume">
                                <hardwareTimeStamp dtmf="D" />
                                <regionAppend regionId="stimuliLabelRegion">
                                    <plainText featureText="playMedia recordedMediaE"/>
                                </regionAppend>
                                <playMedia mediaId="recordedMediaE"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Stop">
                                <stopAudioRecorder/>	
                                <hardwareTimeStamp dtmf="off" opto1="false" opto2="true"/>
                            </actionTokenButton>
                        </column>
                    </row>
                </table>
                <regionReplace regionId="stimuliVideoRegion"/>
                <nextStimulusButton featureText="Next [ENTER]" eventTag="Next" hotKey="ENTER" repeatIncorrect="false"/>
                <regionAppend regionId="stimuliLabelRegion"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="hardware_time_stamps"/>
                    <gotoPresenter target="hardware_time_stamps"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>ToneVideos</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Sequential Display Example (single timer)" type="stimulus" self="Sequential_Display_Example" title="Sequential Display Example (single timer)">
        <loadStimulus eventTag="Sequential_Display_Example" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="10">
            <hasMoreStimulus>
                <clearTimer listenerId="sequentialDisplayTimer"/> 
                <clearPage/>
                <hardwareTimeStamp dtmf="off" opto1="true" opto2="true"/>
                <hasGetParameter parameterName="hardwareTimeStamp">
                    <conditionTrue>
                        <regionStyle regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="HardwareTimeStamps is enabled."/>
                        </regionAppend>
                        <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" recordingFormat="wav" mediaId="recordedMediaSTE">
                            <onError/>
                            <onSuccess/>
                            <mediaLoaded/>
                            <mediaLoadFailed/>
                            <mediaPlaybackStarted/>
                            <mediaPlaybackComplete/>
                        </startAudioRecorderWeb>
                    </conditionTrue>
                    <conditionFalse>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="The GET parameter hardwareTimeStamp has not been provided in the URL. HardwareTimeStamps disabled so this example will have no output."/>
                            <htmlText featureText="&lt;a href=&quot;?hardwareTimeStamp&quot;&gt;Enable HardwareTimeStamps&lt;/a&gt;"/>
                        </regionAppend>
                    </conditionFalse>
                </hasGetParameter>
                <timerLabel listenerId="sequentialDisplayTimer" msLabelFormat="mm:ss" msToNext="0" styleName="countDownLabel"/>
                <hardwareTimeStamp dtmf="0" opto1="false" opto2="true"/>
                <regionAppend regionId="hardwareLightSensor1Outline" styleName="hardwareLightSensor1Show">
                    <htmlText featureText="sync" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="hardwareLightSensor2Outline" styleName="hardwareLightSensor2Outline">
                    <htmlText featureText="&amp;nbsp;" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="crossLabelRegion" styleName="hardwareLightSensor1Hide">
                    <htmlText featureText="+" styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Hide">
                    <stimulusLabel styleName="stimuliLabel"/>
                </regionAppend>
                <regionAppend regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide"/>
                <regionAppend regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                <actionButton groupId="respondButtonGroup" featureText="Respond [space]" hotKey="SPACE">
                    <logTimeStamp eventTag="actionButton Respond"/>
                    <hardwareTimeStamp dtmf="1"/>
                    <htmlTokenText featureText="respondButton &lt;sequentialDisplayTimer&gt;ms"/>
                </actionButton>
                <disableButtonGroup matchingRegex="respondButtonGroup"/>
                <stimulusLabel/>
                <showStimulusProgress/>
                <stimulusAudio dataChannel="2" autoPlay="false" mediaId="stimulusAudioExample" showPlaybackIndicator="false">
                    <mediaLoaded>
                        <plainText featureText="stimulusAudioLoaded"/>
                        <hardwareTimeStamp opto2="true"/>
                        <regionReplace regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide">
                            <stimulusVideo loop="false" styleName="smallVideo" dataChannel="2" autoPlay="false" mediaId="stimulusVideoExample" showControls="false">
                                <mediaLoaded> 
                                    <plainText featureText="stimulusVideoLoaded"/>
                                    <clearTimer listenerId="sequentialDisplayTimer"/>
                                    <hardwareTimeStamp dtmf="off" />
                                    <startTimer msToNext="100" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="3" opto1="true" />
                                        <regionStyle regionId="hardwareLightSensor1Outline" styleName="hardwareLightSensor1Outline"/>
                                        <regionStyle regionId="crossLabelRegion" styleName="hardwareLightSensor1Outline"/>
                                        <htmlTokenText featureText="crossLabelShow (100) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="350" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="4" opto1="true" opto2="false"/>
                                        <regionStyle regionId="crossLabelRegion" styleName="hardwareLightSensor1Hide"/>
                                        <regionStyle regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Show"/>
                                        <htmlTokenText featureText="stimuliLabelShow (350) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="500" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="5" opto2="true"/>
                                        <regionStyle regionId="stimuliLabelRegion" styleName="hardwareLightSensor2Hide"/>
                                        <htmlTokenText featureText="stimuliLabelHide (500) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="1000" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="6" />
                                        <playMedia mediaId="stimulusAudioExample"/>
                                        <htmlTokenText featureText="play audio request (1000) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="7000" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="7" />
                                        <!-- it is probably better to never hide the video but make sure the first frames are blank instead -->
                                        <!--<regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Show"/>-->
                                        <playMedia mediaId="stimulusVideoExample"/>
                                        <htmlTokenText featureText="stimuliVideoPlay (7000) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="11000" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="8" />
                                        <!--<regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide"/>-->
                                        <htmlTokenText featureText="stimuliVideoHide (11000) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="400" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="9" />
                                        <enableButtonGroup matchingRegex="respondButtonGroup"/>
                                        <htmlTokenText featureText="respondButtonEnabled (400) &lt;sequentialDisplayTimer&gt;ms"/>
                                    </startTimer>
                                    <startTimer msToNext="13000" listenerId="sequentialDisplayTimer">
                                        <hardwareTimeStamp dtmf="A" />
                                        <disableButtonGroup matchingRegex="respondButtonGroup"/>
                                        <htmlTokenText featureText="respondButtonDisabled (13000) &lt;sequentialDisplayTimer&gt;ms"/>
                                        <actionButton groupId="nextButtonGroup" featureText="Volgende [space]" hotKey="SPACE">
                                            <hardwareTimeStamp dtmf="*" />
                                            <logTimeStamp eventTag="actionButton Volgende"/>
                                            <nextStimulus repeatIncorrect="false"/>
                                        </actionButton>
                                    </startTimer>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <cancelPauseAll/>
                                    <plainText featureText="stimulusVideoFailed"/>
                                    <plainText featureText="Either the media failed to load or the media playback failed. This can be caused by a missing file or by an attempt to play the media before the user interacts with the page after it has loaded. If it is the latter, it can be overcome by clicking the retry button below, which firstly is a user interaction and secondly restarts the media playback."/>
                                    <actionButton featureText="Replay (R)" hotKey="R">
                                        <logTimeStamp eventTag="actionButton Replay"/>
                                        <showStimulus/>
                                    </actionButton>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <hardwareTimeStamp dtmf="off" opto2="false"/>
                                    <regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Show"/>
                                    <htmlTokenText featureText="stimulusVideoPlaybackStarted and show (7000) &lt;sequentialDisplayTimer&gt;ms"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <hardwareTimeStamp dtmf="off" opto2="true"/>
                                    <regionStyle regionId="stimuliVideoRegion" styleName="hardwareLightSensor2Hide"/>
                                    <htmlTokenText featureText="stimulusVideoComplete and hide &lt;sequentialDisplayTimer&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusVideo>  
                        </regionReplace>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <cancelPauseAll/>
                        <plainText featureText="stimulusAudioFailed"/>
                        <stimulusLabel/>
                        <plainText featureText="Either the media failed to load or the media playback failed. This can be caused by a missing file or by an attempt to play the media before the user interacts with the page after it has loaded. If it is the latter, it can be overcome by clicking the retry button below, which firstly is a user interaction and secondly restarts the media playback."/>
                        <actionButton featureText="Replay (R)" hotKey="R">
                            <logTimeStamp eventTag="actionButton Replay"/>
                            <showStimulus/>
                        </actionButton>
                        <actionButton featureText="Skip (S)" hotKey="S">
                            <logTimeStamp eventTag="actionButton Skip"/>
                            <nextStimulus repeatIncorrect="false"/>
                        </actionButton>
                    </mediaLoadFailed>
                    <mediaPlaybackStarted>
                        <hardwareTimeStamp dtmf="off" />
                        <htmlTokenText featureText="stimulusAudioPlaybackStarted (1000) &lt;sequentialDisplayTimer&gt;ms"/>
                    </mediaPlaybackStarted>
                    <mediaPlaybackComplete>
                        <htmlTokenText featureText="stimulusAudioComplete &lt;sequentialDisplayTimer&gt;ms"/>
                    </mediaPlaybackComplete>
                </stimulusAudio>
                <table>
                    <row>
                        <column>
                            <actionButton featureText="Media Stimulus V0">
                                <logTimeStamp eventTag="actionButton V0"/>
                                <setMetadataValue fieldName="stimuliSequentialDisplayExample" dataLogFormat="v0"/>
                                <resetStimulus target="Sequential_Display_Example"/>
                                <gotoPresenter target="Sequential_Display_Example"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="Tone Stimulus V1">
                                <logTimeStamp eventTag="actionButton V1"/>
                                <setMetadataValue fieldName="stimuliSequentialDisplayExample" dataLogFormat="v1"/>
                                <resetStimulus target="Sequential_Display_Example"/>
                                <gotoPresenter target="Sequential_Display_Example"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="Tone Stimulus V2">
                                <logTimeStamp eventTag="actionButton V2"/>
                                <setMetadataValue fieldName="stimuliSequentialDisplayExample" dataLogFormat="v2"/>
                                <resetStimulus target="Sequential_Display_Example"/>
                                <gotoPresenter target="Sequential_Display_Example"/>
                            </actionButton>
                        </column>
                    </row>
                </table>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <logTimeStamp eventTag="actionButton resetStimulus"/>
                    <resetStimulus target="Sequential_Display_Example"/>
                    <gotoPresenter target="Sequential_Display_Example"/>
                </actionButton>
                <stopAudioRecorder/>	
                <hardwareTimeStamp dtmf="off" opto1="true" opto2="true"/>
            </endOfStimulus> 
            <randomGrouping storageField="stimuliSequentialDisplayExample">
                <tag alias="v0">media</tag>
                <tag alias="v1">ToneVideos</tag>
                <tag alias="v2">ToneVideos_c</tag>
                <!-- A metadata field for this storageField must be declaired above: <field controlledMessage="." controlledRegex=".*" postName="stimuliSequentialDisplayExample" preventServerDuplicates="false" registrationField="Stimuli Allocation Field"/>-->
            </randomGrouping>
            <stimuli/>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" self="RunTrialsSimple1000" type="stimulus" title="RunTrialsSimple1000">
        <logTimeStamp eventTag="run_main"/>
        <loadStimulus eventTag="loadTargetPicture" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <!-- prepare everything before the time critical section -->
                <regionAppend regionId="crossRegion" styleName="hiddenRegion">
                    <htmlText featureText="&lt;div style=&quot;font-size: 75px; font-weight: normal;&quot;&gt;+&lt;/div&gt;" />
                </regionAppend>
                <regionAppend regionId="stimulusRegion" styleName="hiddenRegion">
                    <stimulusImage msToNext="0">
                        <mediaLoadFailed>
                            <logTimeStamp eventTag="image_load_failed"/>
                            <htmlText featureText="Hetplaatje kon niet worden geladen. Controleer alstublieft uw internetverbinding en probeer het opnieuw."/>
                            <actionButton featureText="Probeer opnieuw">
                                <clearPage/>   
                                <showStimulus/>
                            </actionButton>
                        </mediaLoadFailed>
                        <mediaLoaded>
                            <!-- start the display sequence after the jitter has passed, msToNext="500" should be enough time here to be outside the known jitter -->
                            <clearTimer listenerId="singleTimebaseTimer"/>
                            <startTimer msToNext="500" listenerId="singleTimebaseTimer"> 
                                <regionStyle regionId="crossRegion" styleName="centeredVerticalHorizontal"/>
                                <logTimeStamp eventTag="cross_shown"/>
                                <logTimeStamp eventTag="next_stimulus"/>
                            </startTimer>
                            <!-- the use of stimulusPause will like all pauses introduce jitter at the start of period -->
                            <!-- we need to determine an alternative to this <stimulusPause > but from memory I think startTimer will process tokens ie <code>+500 -->
                            <addTimerTrigger evaluateTokens="&lt;stimulusPauseMs&gt; + 500" listenerId="singleTimebaseTimer" maximum="60000" minimum="0">
                                <onError>
                                    <plainText featureText="addTimerTrigger onError"/>
                                </onError>
                                <onTimer>
                                    <logTimeStamp eventTag="pause_ended"/>
                                    <!-- to hide the cross we only change the CSS and avoid modifying the HTML because that could cause delays -->
                                    <regionStyle regionId="crossRegion" styleName="hiddenRegion"/>
                                    <regionStyle regionId="stimulusRegion" styleName="centeredVerticalHorizontal"/>
                                    <hardwareTimeStamp dtmf="1"/>
                                    <logTimeStamp eventTag="image_revealed"/>
                                </onTimer>
                            </addTimerTrigger>
                            <!-- 500 is added here to accommodate the initial 500 anti jitter delay -->
                            <addTimerTrigger evaluateTokens="1000+&lt;stimulusPauseMs&gt;+500" listenerId="singleTimebaseTimer" maximum="60000" minimum="0">
                                <onError>
                                    <plainText featureText="addTimerTrigger onError"/>
                                </onError>
                                <onTimer>                            
                                    <hardwareTimeStamp dtmf="off"/>
                                    <clearPage/>
                                    <!-- a clearTimer here would terminate the single timer and therefore block the next event -->
                                    <!-- <clearTimer listenerId="singleTimebaseTimer"/> -->
                                </onTimer>
                            </addTimerTrigger>
                            <!-- the previous 1000 and 500 is added here to accommodate the initial 500 anti jitter delay -->
                            <addTimerTrigger evaluateTokens="1000+1000+&lt;stimulusPauseMs&gt;+500" listenerId="singleTimebaseTimer" maximum="60000" minimum="0">
                                <onError>
                                    <plainText featureText="addTimerTrigger onError"/>
                                </onError>
                                <onTimer>
                                    <logTimeStamp eventTag="to_next_stimulus"/>
                                    <clearTimer listenerId="singleTimebaseTimer"/>
                                    <nextStimulus repeatIncorrect="false"/>
                                </onTimer>
                            </addTimerTrigger>
                        </mediaLoaded>
                    </stimulusImage>
                </regionAppend>
            </hasMoreStimulus>
            <endOfStimulus>
                <logTimeStamp eventTag="end_main"/>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="RunTrialsSimple1000"/>
                    <gotoPresenter target="RunTrialsSimple1000"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>TestrunSimple</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Audio Input Select" type="stimulus" self="Audio_Input_Select" title="Audio Input Select">
        <plainText featureText="This example demonstrates an audio input select box that can be used with the HTML5 audio recorder (startAudioRecorderWeb)."/>
<!--        <audioInputSelectWeb deviceRegex=".*" styleName="">
            <onError>
                <plainText featureText="audioInputSelectWeb_onError"/>
            </onError> 
            <onSuccess>
                <plainText featureText="audioInputSelectWeb_onSuccess"/>
            </onSuccess>
        </audioInputSelectWeb>-->
        <audioInputSelectWeb>
            <onError>
                <plainText featureText="audioInputSelectWeb_onError"/>
            </onError> 
            <onSuccess>
                <plainText featureText="audioInputSelectWeb_onSuccess"/>
            </onSuccess>
        </audioInputSelectWeb>
        <loadStimulus eventTag="Audio_Input_Select" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <regionReplace regionId="recordedMediaControls">
                    <actionButton featureText="startAudioRecorder">
                        <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="3000000" deviceRegex="" mediaId="recordedMedia" levelIndicatorStyle="levelIndicator">
                            <onError>
                                <regionReplace regionId="recordedMediaControls">
                                    <htmlText featureText="startAudioRecorder onError"/>
                                </regionReplace>
                            </onError>
                            <onSuccess>
                                <regionReplace regionId="recordedMediaControls">
                                    <htmlText featureText="startAudioRecorder onSuccess"/>
                                    <actionButton featureText="stopAudioRecorder">
                                        <stopAudioRecorder/>
                                    </actionButton>
                                </regionReplace>
                            </onSuccess>
                            <mediaLoaded>
                                <regionReplace regionId="recordedMediaControls">
                                    <plainText featureText="AudioRecordingLoaded"/>
                                    <actionButton featureText="Play Media">
                                        <playMedia mediaId="recordedMedia"/>
                                    </actionButton>
                                    <actionButton featureText="Pause Media">
                                        <pauseMedia mediaId="recordedMedia"/>
                                    </actionButton>
                                    <nextStimulusButton featureText="Next Stimulus" eventTag="Audio_Input_Select" repeatIncorrect="false"/>
                                </regionReplace>
                            </mediaLoaded>
                            <mediaLoadFailed>
                                <regionReplace regionId="recordedMediaControls">
                                    <plainText featureText="AudioRecordingLoadFailed"/>
                                </regionReplace>
                            </mediaLoadFailed>
                            <mediaPlaybackStarted/>
                            <mediaPlaybackComplete>
                            </mediaPlaybackComplete>
                        </startAudioRecorderWeb>
                    </actionButton>
                </regionReplace>
            </hasMoreStimulus>
            <endOfStimulus>
                <stopAudioRecorder/>
                <actionButton featureText="resetStimulus" hotKey="SPACE">
                    <resetStimulus target="Audio_Input_Select"/>
                    <gotoPresenter target="Audio_Input_Select"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Region Timer Screen" next="With_Stimuli_Screen" type="stimulus" self="Region_Timer_Screen" title="With Stimuli Screen">
        <regionAppend regionId="regionTimerC">
            <plainText featureText="TimerC startTimer"/>
        </regionAppend>
        <startTimer msToNext="30000" listenerId="timerA">
            <regionAppend regionId="regionTimerC">
                <plainText featureText="TimerC Completed"/>
            </regionAppend>
        </startTimer>
        <timerLabel listenerId="timerA" msLabelFormat="ss" msToNext="30000" styleName="countDownLabel"/>
        <regionAppend regionId="regionId" styleName="styleName">
            <plainText featureText="plainText in region"/>
        </regionAppend>
        <actionButton featureText="regionStyleNone">
            <regionStyle regionId="regionId" styleName=""/>
        </actionButton>
        <actionButton featureText="hiddenRegionStyle">
            <regionStyle regionId="regionId" styleName="hiddenRegion"/>
        </actionButton>
        <actionButton featureText="regionReplace">
            <regionReplace regionId="regionId" styleName="styleName">
                <plainText featureText="plainText in regionReplace"/>
            </regionReplace>
        </actionButton>
        <actionButton featureText="regionClear">
            <regionClear regionId="regionId"/>
        </actionButton>
        <regionAppend regionId="regionTimerA">
            <plainText featureText="TimerA region"/>
        </regionAppend>
        <actionButton featureText="startTimerA">
            <regionAppend regionId="regionTimerA">
                <plainText featureText="TimerA startTimer"/>
            </regionAppend>
            <startTimer msToNext="30000" listenerId="timerA">
                <regionAppend regionId="regionTimerA">
                    <plainText featureText="TimerA Completed"/>
                </regionAppend>
            </startTimer>
        </actionButton>
        <actionButton featureText="compareTimerA">
            <compareTimer msToNext="10000" listenerId="timerA">
                <aboveThreshold>
                    <regionAppend regionId="regionTimerA">
                        <plainText featureText="TimerA aboveThreshold"/>
                    </regionAppend>
                </aboveThreshold>
                <withinThreshold>
                    <regionAppend regionId="regionTimerA">
                        <plainText featureText="TimerA withinThreshold"/>
                    </regionAppend>
                </withinThreshold>
            </compareTimer>
        </actionButton>
        <actionButton featureText="clearTimerA">
            <clearTimer listenerId="timerA"/>
            <regionAppend regionId="regionTimerA">
                <plainText featureText="TimerA clearTimer"/>
            </regionAppend>
        </actionButton>
        <actionButton featureText="htmlTokenText TimerA">
            <regionAppend regionId="regionTimerA">
                <htmlTokenText featureText="TimerA &lt;timerA&gt;ms"/>
            </regionAppend>
        </actionButton>
        <actionButton featureText="logTimerValueA">
            <logTimerValue listenerId="timerA" eventTag="timerAeventTag" dataChannel="3"/>
            <regionAppend regionId="regionTimerA">
                <plainText featureText="TimerA logTimerValue"/>
            </regionAppend>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Region Toggle Example" type="stimulus" self="Region_Toggle_Example" title="Region Toggle Example">
        <regionAppend regionId="regionA">
            <actionButton featureText="show B">
                <regionStyle regionId="regionA" styleName=""/>
                <regionStyle regionId="regionB" styleName="exampleBorderedBackground"/>
            </actionButton>
        </regionAppend>
        <regionAppend regionId="regionB">
            <actionButton featureText="exampleBorderedBackground to A and show B">
                <regionStyle regionId="regionA" styleName="exampleBorderedBackground"/>
                <regionStyle regionId="regionB" styleName=""/>
                <regionStyle regionId="regionC" styleName=""/>
            </actionButton>
        </regionAppend>
        <regionStyle regionId="regionB" styleName="hiddenRegion"/>
        <regionAppend regionId="regionC">
            <actionButton featureText="Hide region C and B">
                <regionStyle regionId="regionB" styleName="hiddenRegion"/>
                <regionStyle regionId="regionC" styleName="hiddenRegion"/>
            </actionButton>
        </regionAppend>
    </presenter> 
    <presenter back="Menu" menuLabel="Rating Toggle Example" type="stimulus" self="Rating_Toggle_Example" title="Rating Toggle Example">
        <loadStimulus eventTag="First Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <regionClear regionId="region1"/>
                <regionClear regionId="region2"/>
                <regionClear regionId="region3"/>
                <regionClear regionId="region4"/>
                <regionClear regionId="region5"/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="
                Each click is an attempt and therefore accrues a score.&lt;br/&gt;
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                "/>
                <addPadding/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <addPadding/>
                <regionAppend regionId="region1">
                    <actionButton featureText="1" styleName="toggleBox">
                        <setStimulusCodeResponse codeFormat="1" dataChannel="8" applyScore="true"/>
                        <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOn"/>
                        <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOff"/>
                        <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOff"/>
                        <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOff"/>
                        <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOff"/>
                    </actionButton>
                </regionAppend>
                <regionAppend regionId="region2">
                    <actionButton featureText="2" styleName="toggleBox">
                        <setStimulusCodeResponse codeFormat="2" dataChannel="8" applyScore="true"/>
                        <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOff"/>
                        <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOn"/>
                        <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOff"/>
                        <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOff"/>
                        <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOff"/>
                    </actionButton>
                </regionAppend>
                <regionAppend regionId="region3">
                    <actionButton featureText="3" styleName="toggleBox">
                        <setStimulusCodeResponse codeFormat="3" dataChannel="8" applyScore="true"/>
                        <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOff"/>
                        <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOff"/>
                        <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOn"/>
                        <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOff"/>
                        <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOff"/>
                    </actionButton>
                </regionAppend>
                <regionAppend regionId="region4">
                    <actionButton featureText="4" styleName="toggleBox">
                        <setStimulusCodeResponse codeFormat="4" dataChannel="8" applyScore="true"/>
                        <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOff"/>
                        <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOff"/>
                        <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOff"/>
                        <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOn"/>
                        <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOff"/>
                    </actionButton>
                </regionAppend>
                <regionAppend regionId="region5">
                    <actionButton featureText="5" styleName="toggleBox">
                        <setStimulusCodeResponse codeFormat="5" dataChannel="8" applyScore="true"/>
                        <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOff"/>
                        <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOff"/>
                        <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOff"/>
                        <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOff"/>
                        <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOn"/>
                    </actionButton>
                </regionAppend>
                <regionStyle regionId="region1" styleName="toggleBox1 toggleBoxOff"/>
                <regionStyle regionId="region2" styleName="toggleBox2 toggleBoxOff"/>
                <regionStyle regionId="region3" styleName="toggleBox3 toggleBoxOff"/>
                <regionStyle regionId="region4" styleName="toggleBox4 toggleBoxOff"/>
                <regionStyle regionId="region5" styleName="toggleBox5 toggleBoxOff"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <nextStimulusButton featureText="Next [TAB + ENTER]" eventTag="Next [TAB + ENTER]" hotKey="ENTER" repeatIncorrect="false"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <addPadding/>
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore/>
                    <gotoPresenter target="Rating_Toggle_Example"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="Rating_Toggle_Example"/>
                    <gotoPresenter target="Rating_Toggle_Example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RatingToggle</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Rating Token Text Example" type="stimulus" self="Rating_Token_Text_Example" title="Rating Token Text Example">
        <loadStimulus eventTag="Rating_Token_Text_Example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                "/>
                <addPadding/>
                <stimulusLabel styleName="stimuliLabel"/>
                <htmlTokenText featureText="
                Please choose one out of &lt;stimulusRatingLabel_0&gt;, &lt;stimulusRatingLabel_1&gt;, &lt;stimulusRatingLabel_2&gt;, &lt;stimulusRatingLabel_3&gt;, &lt;stimulusRatingLabel_4&gt;"/>
                <addPadding />
                <addPadding />
                <addPadding />
                <addPadding />
                <table>
                    <row>
                        <column>
                            <actionTokenButton featureText="&lt;stimulusRatingLabel_0&gt;">
                                <setStimulusCodeResponse codeFormat="User clicked &lt;stimulusRatingLabel_0&gt;" dataChannel="8" applyScore="true" />
                                <nextStimulus repeatIncorrect="false" />
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="&lt;stimulusRatingLabel_1&gt;">
                                <setStimulusCodeResponse codeFormat="User clicked &lt;stimulusRatingLabel_1&gt;" dataChannel="8" applyScore="true" />
                                <nextStimulus repeatIncorrect="false" />
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="&lt;stimulusRatingLabel_2&gt;">
                                <setStimulusCodeResponse codeFormat="User clicked &lt;stimulusRatingLabel_2&gt;" dataChannel="8" applyScore="true" />
                                <nextStimulus repeatIncorrect="false" />
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="&lt;stimulusRatingLabel_3&gt;">
                                <setStimulusCodeResponse codeFormat="User clicked &lt;stimulusRatingLabel_3&gt;" dataChannel="8" applyScore="true" />
                                <nextStimulus repeatIncorrect="false" />
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="&lt;stimulusRatingLabel_4&gt;">
                                <setStimulusCodeResponse codeFormat="User clicked &lt;stimulusRatingLabel_4&gt;" dataChannel="8" applyScore="true" />
                                <nextStimulus repeatIncorrect="false" />
                            </actionTokenButton>
                        </column>
                        <!-- a metadata field can be combined with the rating buttons -->
                        <hasMetadataValue fieldName="educationOther" matchingRegex=".+">
                            <conditionFalse />
                            <conditionTrue>
                                <column>
                                    <actionTokenButton featureText="&lt;metadataField_educationOther&gt;">
                                        <setStimulusCodeResponse codeFormat="User clicked &lt;metadataField_educationOther&gt;" dataChannel="8" applyScore="true" />
                                        <nextStimulus repeatIncorrect="false" />
                                    </actionTokenButton>
                                </column>
                            </conditionTrue>
                        </hasMetadataValue>
                    </row>
                </table>
                <addPadding />
                <actionButton featureText="Set metadata value">
                    <setMetadataValue fieldName="educationOther" replacementRegex="" dataLogFormat="Cat" />
                    <gotoPresenter target="Rating_Token_Text_Example" />
                </actionButton>
                <addPadding />
                <actionButton featureText="Clear metadata value">
                    <setMetadataValue fieldName="educationOther" replacementRegex="" dataLogFormat="" />
                    <gotoPresenter target="Rating_Token_Text_Example" />
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage />
                <addPadding />
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore />
                    <gotoPresenter target="Rating_Token_Text_Example" />
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="Rating_Token_Text_Example"/>
                    <gotoPresenter target="Rating_Token_Text_Example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RatingToggle</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Metadata (Enable) (Visible)" type="metadata" self="Metadata_Enable_Visible" title="Metadata (Enable) (Visible)">
        <plainText featureText="In this example two metadata fields are hidden/shown and enabled/disabled according to the value of another field."/>
        <metadataField fieldName="enabledVisibleOptions"/>
        <metadataFieldVisibilityDependant fieldName="educationOther" linkedFieldName="enabledVisibleOptions" visibleRegex=".*visible.*" enabledRegex=".*enabled.*"/>
        <metadataField fieldName="dateOfBirth"/>
        <metadataFieldDateTriggered fieldName="ageGroup" linkedFieldName="dateOfBirth" daysThresholds="50 100 200 400 500 600 800 1000" visibleRegex=".*" enabledRegex="nevermatches"/>
        <addPadding/>
        <saveMetadataButton featureText="Volgende" sendData="true" networkErrorMessage="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw.">
            <onError/> 
            <onSuccess>
                <gotoPresenter target="Metadata_Enable_Visible"/>
            </onSuccess>
        </saveMetadataButton>
    </presenter> 
    <presenter back="Menu" menuLabel="Metadata Current Date" type="stimulus" self="Metadata_Current_Date" title="Metadata Current Date">
        <addPadding/>
        <plainText featureText="In this example a metadata field is checked if it contains the current date or not."/>
        <triggerDefinition listenerId="showCurrentValue" threshold="0" maximum="0">
            <regionReplace regionId="currentValueRegion">
                <htmlTokenText featureText="Stored Date: &lt;metadataField_storedDate&gt;"/>
                <hasMetadataValue fieldName="storedDate" matchingRegex=".*&lt;currentDateDDMMYYYY&gt;$">
                    <conditionFalse>
                        <htmlText featureText="It's another date"/>
                    </conditionFalse>
                    <conditionTrue>
                        <htmlText featureText="It's today"/>
                    </conditionTrue>
                </hasMetadataValue>
            </regionReplace>
        </triggerDefinition>
        <triggerMatching listenerId="showCurrentValue"/>
        <addPadding/>
        <actionButton featureText="Set Current Date">
            <setMetadataValue fieldName="storedDate" dataLogFormat="&lt;currentDateDDMMYYYY&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionButton featureText="Set Another Date">
            <setMetadataValue fieldName="storedDate" dataLogFormat="01/12/3456"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
    </presenter> 
    <presenter back="Menu" menuLabel="Last Seven Days" type="stimulus" self="last_seven_days" title="Last Seven Days">
        <addPadding/>
        <plainText featureText="In this example a metadata field containing a list of dates is filtered so that it only contains dates that are within the last seven days or three days."/>
        <plainText featureText="This example expects the list of dates to be in sequence due to list being formed by appending the current day to the end of the list one or more times on each relevant day."/>
        <triggerDefinition listenerId="showCurrentValue" threshold="0" maximum="0">
            <regionReplace regionId="currentValueRegion">
                <htmlTokenText featureText="Stored Date List: &lt;metadataField_storedDate&gt;"/>
            </regionReplace>
        </triggerDefinition>
        <triggerMatching listenerId="showCurrentValue"/>
        <addPadding/>
        <actionButton featureText="Add Some Dates">
            <setMetadataValue fieldName="storedDate" dataLogFormat="&lt;currentDateDDMMYYYY-21D&gt;&lt;currentDateDDMMYYYY-14D&gt;&lt;currentDateDDMMYYYY-7D&gt;&lt;currentDateDDMMYYYY-6D&gt;&lt;currentDateDDMMYYYY-3D&gt;&lt;currentDateDDMMYYYY-2D&gt;&lt;currentDateDDMMYYYY-2D&gt;&lt;currentDateDDMMYYYY-2D&gt;&lt;currentDateDDMMYYYY-1D&gt;&lt;currentDateDDMMYYYY&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionButton featureText="Add Other Dates">
            <setMetadataValue fieldName="storedDate" dataLogFormat="&lt;currentDateDDMMYYYY-8D&gt;&lt;currentDateDDMMYYYY-7D&gt;&lt;currentDateDDMMYYYY-6D&gt;&lt;currentDateDDMMYYYY-5D&gt;&lt;currentDateDDMMYYYY-4D&gt;&lt;currentDateDDMMYYYY-3D&gt;&lt;currentDateDDMMYYYY-2D&gt;&lt;currentDateDDMMYYYY-1D&gt;&lt;currentDateDDMMYYYY&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionButton featureText="Add Earlier Dates">
            <setMetadataValue fieldName="storedDate" dataLogFormat="&lt;currentDateDDMMYYYY-28D&gt;&lt;currentDateDDMMYYYY-27D&gt;&lt;currentDateDDMMYYYY-16D&gt;&lt;currentDateDDMMYYYY-15D&gt;&lt;currentDateDDMMYYYY-14D&gt;&lt;currentDateDDMMYYYY-13D&gt;&lt;currentDateDDMMYYYY-12D&gt;&lt;currentDateDDMMYYYY-11D&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionButton featureText="Add Todays Date">
            <setMetadataValue fieldName="storedDate" dataLogFormat="&lt;metadataField_storedDate&gt;&lt;currentDateDDMMYYYY&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionTokenButton featureText="Keep Since &lt;currentDateDDMMYYYY-6D&gt;">
            <!-- this replacementRegex will match on the first date that is found (only one) and then capture the rest of the string to the right of that date -->
            <setMetadataValue fieldName="storedDate" replacementRegex="(&lt;currentDateDDMMYYYY-6D&gt;.*|&lt;currentDateDDMMYYYY-5D&gt;.*|&lt;currentDateDDMMYYYY-4D&gt;.*|&lt;currentDateDDMMYYYY-3D&gt;.*|&lt;currentDateDDMMYYYY-2D&gt;.*|&lt;currentDateDDMMYYYY-1D&gt;.*|&lt;currentDateDDMMYYYY&gt;.*)" dataLogFormat="&lt;metadataField_storedDate&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionTokenButton>
        <addPadding/>
        <actionTokenButton featureText="Keep Since &lt;currentDateDDMMYYYY-2D&gt;">
            <!-- this replacementRegex will match on the first date that is found (only one) and then capture the rest of the string to the right of that date -->
            <setMetadataValue fieldName="storedDate" replacementRegex="(&lt;currentDateDDMMYYYY-2D&gt;.*|&lt;currentDateDDMMYYYY-1D&gt;.*|&lt;currentDateDDMMYYYY&gt;.*)" dataLogFormat="&lt;metadataField_storedDate&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionTokenButton>
    </presenter> 
    <presenter back="Menu" menuLabel="Replace All Example" type="stimulus" self="replace_all_example" title="Replace All Example">
        <addPadding/>
        <plainText featureText="In this example a the contents of a metadata field is modified by replacing all instances of U with Je."/>
        <plainText featureText="Please note that doing this type of replacement with a such short search string could easily have unintended effects."/>
        <triggerDefinition listenerId="showCurrentValue" threshold="0" maximum="0">
            <regionReplace regionId="currentValueRegion">
                <htmlTokenText featureText="Current Value: &lt;metadataField_storedDate&gt;"/>
            </regionReplace>
        </triggerDefinition>
        <addPadding/>
        <addPadding/>
        <triggerMatching listenerId="showCurrentValue"/>
        <addPadding/>
        <actionButton featureText="Add Some Text">
            <setMetadataValue fieldName="storedDate" dataLogFormat="Als u ermee instemt om door te gaan met dit experiment, klik dan op 'Akkoord' om verder te gaan. Als u besluit niet deel te nemen aan het experiment, kunt u de pagina sluiten of naar een andere website gaan."/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <addPadding/>
        <actionTokenButton featureText="Change To Je">
            <setMetadataEvalTokens evaluateTokens="replaceAll(&quot;&lt;metadataField_storedDate&gt;&quot;, &quot; u &quot;, &quot; je &quot;)" fieldName="storedDate">	
                <onError>
                    <htmlTokenText featureText="Failed Replacing All."/>
                </onError>
                <onSuccess> 
                    <triggerMatching listenerId="showCurrentValue"/>
                </onSuccess>
            </setMetadataEvalTokens>
        </actionTokenButton>
        <addPadding/>
        <actionTokenButton featureText="Do It Wrong">
            <setMetadataEvalTokens evaluateTokens="replaceAll(&quot;&lt;metadataField_storedDate&gt;&quot;, &quot;u&quot;, &quot;&lt;b&gt;je&lt;/b&gt;&quot;)" fieldName="storedDate">	
                <onError>
                    <htmlTokenText featureText="Failed Replacing All."/>
                </onError>
                <onSuccess> 
                    <triggerMatching listenerId="showCurrentValue"/>
                </onSuccess>
            </setMetadataEvalTokens>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionTokenButton>
    </presenter>
    <!-- todo: It would be nice to add a version of four_different_topics that compliments the metadata field method by using stimuli responses instead -->
    <presenter back="Menu" menuLabel="Four Different Topics" type="stimulus" self="four_different_topics" title="Four Different Topics">
        <triggerDefinition listenerId="showTopic234" threshold="0" maximum="3">
            <stimulusLabel styleName="stimuliLabel"/>
            <!-- the white space between entries is just to make the lines wrap so this example presenter loops nicer -->
            <setMetadataValue fieldName="displayedTopic234" dataLogFormat="&lt;metadataField_displayedTopic234&gt; &lt;stimulusId&gt;"/>
        </triggerDefinition>
        <triggerDefinition listenerId="showTopic1" threshold="0" maximum="1">
            <stimulusLabel styleName="stimuliLabel"/>
            <!-- the white space between entries is just to make the lines wrap so this example presenter loops nicer -->
            <setMetadataValue fieldName="displayedTopic1" dataLogFormat="&lt;metadataField_displayedTopic1&gt; &lt;stimulusId&gt;"/>
        </triggerDefinition>
        <htmlTokenText featureText="This example shows stimuli from 4 different topics. For these 4 different topics, the questions for one topic will only be shown once, while the questions for the other topics can be shown multiple times but not more than once in 7 days. The questions of these 4 topics should be mixed (so not in block order) when presented." />
        <addPadding/>
        <withStimuli eventTag="four_different_topics" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <!-- todo: finish testing this does what it says -->
            <beforeStimulus>
                <hasMetadataValue fieldName="displayedTopic234" matchingRegex=".*&lt;currentDateDDMMYYYY&gt;.*">
                    <conditionFalse> 
                        <htmlText featureText="Appending todays date to the metadata field displayedTopic234."/>
                        <setMetadataValue fieldName="displayedTopic234" dataLogFormat="&lt;metadataField_displayedTopic234&gt;&lt;currentDateDDMMYYYY&gt;"/>
                        <addPadding/>
                    </conditionFalse>
                    <conditionTrue>
                        <htmlText featureText="The metadata field displayedTopic234 already contains todays date."/>
                        <addPadding/>
                    </conditionTrue>
                </hasMetadataValue>
                <htmlTokenText featureText="Seen displayedTopic1: &lt;metadataField_displayedTopic1&gt;"/>
                <htmlTokenText featureText="Seen displayedTopic234: &lt;metadataField_displayedTopic234&gt;"/>
                <addPadding/>
                <htmlText featureText="Trimming displayedTopic234 to keep only the last seven days."/>
                <setMetadataValue fieldName="displayedTopic234" replacementRegex="(&lt;currentDateDDMMYYYY-6D&gt;.*|&lt;currentDateDDMMYYYY-5D&gt;.*|&lt;currentDateDDMMYYYY-4D&gt;.*|&lt;currentDateDDMMYYYY-3D&gt;.*|&lt;currentDateDDMMYYYY-2D&gt;.*|&lt;currentDateDDMMYYYY-1D&gt;.*|&lt;currentDateDDMMYYYY&gt;.*)" dataLogFormat="&lt;metadataField_displayedTopic234&gt;"/>
                <htmlTokenText featureText="After trimming displayedTopic234: &lt;metadataField_displayedTopic234&gt;"/>
                <addPadding/>
            </beforeStimulus>
            <eachStimulus>
                <currentStimulusHasTag tags="Topic_1">	
                    <conditionTrue>
                        <hasMetadataValue fieldName="displayedTopic1" matchingRegex=".*&lt;stimulusId&gt;.*">
                            <conditionFalse>
                                <triggerMatching listenerId="showTopic1"/>
                            </conditionFalse>
                            <conditionTrue>
                                <htmlTokenText featureText="Topic 1 stimulus &lt;stimulusId&gt; has already been seen."/>
                            </conditionTrue>
                        </hasMetadataValue>
                    </conditionTrue>
                    <conditionFalse>
                    </conditionFalse>
                </currentStimulusHasTag>
                <currentStimulusHasTag tags="Topic_234">
                    <conditionTrue>
                        <hasMetadataValue fieldName="displayedTopic234" matchingRegex=".*&lt;stimulusId&gt;.*">
                            <conditionFalse>
                                <triggerMatching listenerId="showTopic234"/>
                            </conditionFalse>
                            <conditionTrue>
                                <htmlTokenText featureText="This stimulus &lt;stimulusId&gt; has already been seen in the last seven days."/>
                            </conditionTrue>
                        </hasMetadataValue>
                    </conditionTrue>
                    <conditionFalse>
                    </conditionFalse>
                </currentStimulusHasTag>
            </eachStimulus>
            <afterStimulus>
                <addPadding/>
                <htmlTokenText featureText="Updated displayedTopic1: &lt;metadataField_displayedTopic1&gt;"/>
                <htmlTokenText featureText="Updated displayedTopic234: &lt;metadataField_displayedTopic234&gt;"/>
                <addPadding/>
                <actionButton featureText="showNextTopics">
                    <resetStimulus target="four_different_topics"/>
                    <gotoPresenter target="four_different_topics"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="clearSeenTopics">
                    <setMetadataValue fieldName="displayedTopic1" dataLogFormat=""/>
                    <setMetadataValue fieldName="displayedTopic234" dataLogFormat=""/>
                    <resetStimulus target="four_different_topics"/>
                    <gotoPresenter target="four_different_topics"/>
                </actionButton>
            </afterStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>Topics</tag>
            </stimuli>
        </withStimuli>
    </presenter> 
    <presenter back="Menu" menuLabel="Append Unique Date" type="stimulus" self="append_unique_date" title="Append Unique Date">
        <!--todo: complete this example-->
        <regionAppend regionId="currentValueRegion">
            <htmlTokenText featureText="&lt;metadataField_session_next_step&gt;"/>
        </regionAppend>
        <triggerDefinition listenerId="showCurrentValue" threshold="0" maximum="0">
            <regionReplace regionId="currentValueRegion">
                <htmlTokenText featureText="&lt;metadataField_session_next_step&gt;"/>
            </regionReplace>
        </triggerDefinition>
        <actionButton featureText="Reset Metadata Value">
            <setMetadataValue fieldName="session_next_step" dataLogFormat="25112020_26112020_27112020_28112020_29112020"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <actionButton featureText="Append Current Date">
            <setMetadataValue fieldName="session_next_step" dataLogFormat="&lt;metadataField_session_next_step&gt;_&lt;currentDateDDMMYYYY&gt;"/>
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
        <actionButton featureText="Remove Current Date">
            <setMetadataValue fieldName="session_next_step" replacementRegex="([0-9]{8,8}_?)*&lt;currentDateDDMMYYYY&gt;(_?[0-9]{8,8}_?)*[_$]" dataLogFormat="&lt;metadataField_session_next_step&gt;"/>
            <!--setMetadataValue fieldName="session_next_step" replacementRegex="([^&lt;currentDateDDMMYYYY&gt;]*)" dataLogFormat="&lt;metadataField_session_next_step&gt;"/-->
            <triggerMatching listenerId="showCurrentValue"/>
        </actionButton>
    </presenter>
    <!--<presenter back="Menu" menuLabel="Draggable Euclidian Distance" type="stimulus" self="draggable_euclidian_distance" title="Draggable Euclidian Distance">
        <scss>loop to make styles that step around the circle</scss>
        <withStimuli eventTag="With Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus/>
            <eachStimulus>
                <dragable dataChannel="3" groupId="draggable">
                    the draggable element must be in the scope of a stimulus
                    dragable allows the element to be dragged while storing the intermediate positions in the touch input logger
                    when the drag ends the final location is stored as a stimulus response
                    when the next stimulus or validateStimuliLocations occurs the current position is sent to the server
                    when the stimulus is shown a second time the last stored position can be restored
                    <htmlTokenText styleName="positionInCircle" featureText="sentence fragments"/>
                </dragable>
            </eachStimulus>
            <afterStimulus>
                <setMetadataEvalTokens evaluateTokens="d1e269-d1e235-d1e253-d1e290" fieldName="draggable_euclidian_distance">
                    <onError></onError>
                    <onSuccess></onSuccess>
                </setMetadataEvalTokens>
                <validateStimuliDragables evaluateTokens="calculate euclidian distance between the elements (center of the item) for use in the next trials">
                    <onError></onError>
                    <onSuccess></onSuccess>
                </validateStimuliDragables>
            </afterStimulus>
        </withStimuli>
        <randomGrouping storageField="draggable_euclidian_distance">
                <tag alias="v0">media</tag>
        </randomGrouping>
            <stimuli/>
    </presenter>-->
    <presenter back="Menu" menuLabel="currentDate daysBetween and length" type="metadata" self="currentDate_daysBetween_and_length" title="currentDate daysBetween and length">
        <plainText featureText="In this example the current date is shown in a label. The number of days between the entered dateOfBirth and today is calculated and put into the session_step field and shown in a label. The length of the string in the educationOther field is put into the step_done field and shown in a label."/>
        <metadataField fieldName="dateOfBirth"/>
        <metadataField fieldName="educationOther"/>
        <addPadding/>
        <htmlTokenText featureText="The current date is: &lt;currentDateDDMMYYYY&gt;"/>
        <addPadding/>
        <saveMetadataButton featureText="update" sendData="true" networkErrorMessage="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw.">
            <onError/>
            <onSuccess>
                <!--<clearPage/>-->
                <addPadding/>
                <setMetadataEvalTokens evaluateTokens="length(&quot;&lt;metadataField_educationOther&gt;&quot;)" fieldName="step_done">	
                    <onError>
                        <htmlTokenText featureText="Failed to setMetadataEvalTokens."/>
                    </onError>
                    <onSuccess>
                        <htmlTokenText featureText="The value of the educationOther field is: &quot;&lt;metadataField_educationOther&gt;&quot;."/>
                        <htmlTokenText featureText="The length of the educationOther field is: &lt;metadataField_step_done&gt;."/>
                    </onSuccess>
                </setMetadataEvalTokens>
                <setMetadataEvalTokens evaluateTokens="daysBetween(&quot;&lt;metadataField_dateOfBirth&gt;&quot;,&quot;&lt;currentDateDDMMYYYY&gt;&quot;)" fieldName="session_step">	
                    <onError>
                        <htmlTokenText featureText="Failed to setMetadataEvalTokens."/>
                    </onError>
                    <onSuccess> 
                        <htmlTokenText featureText="The number of days between dateOfBirth:&lt;metadataField_dateOfBirth&gt; and today:&lt;currentDateDDMMYYYY&gt; is &lt;metadataField_session_step&gt;."/>
                    </onSuccess>
                </setMetadataEvalTokens>
                <!--<targetButton featureText="edit values" target="currentDate_daysBetween_and_length"/>-->
            </onSuccess>
        </saveMetadataButton>
    </presenter>
    <presenter back="Menu" menuLabel="progressIndicator" type="metadata" self="progressIndicator_example" title="progressIndicator Example">
        <plainText featureText="In this example two metadata fields are used to display a percentage in progress indicator." />
        <metadataField fieldName="progressIndicator_step" />
        <metadataField fieldName="progressIndicator_steps" />
        <addPadding />
        <table>
            <row>
                <column>
                    <actionButton featureText="0%">
                        <setMetadataValue fieldName="progressIndicator_step" dataLogFormat="0" />
                        <setMetadataValue fieldName="progressIndicator_steps" dataLogFormat="100" />
                        <gotoPresenter target="progressIndicator_example" />
                    </actionButton>
                </column>
                <column>
                    <actionButton featureText="25%">
                        <setMetadataValue fieldName="progressIndicator_step" dataLogFormat="25" />
                        <setMetadataValue fieldName="progressIndicator_steps" dataLogFormat="100" />
                        <gotoPresenter target="progressIndicator_example" />
                    </actionButton>
                </column>
                <column>
                    <actionButton featureText="50%">
                        <setMetadataValue fieldName="progressIndicator_step" dataLogFormat="25" />
                        <setMetadataValue fieldName="progressIndicator_steps" dataLogFormat="50" />
                        <gotoPresenter target="progressIndicator_example" />
                    </actionButton>
                </column>
                <column>
                    <actionButton featureText="75%">
                        <setMetadataValue fieldName="progressIndicator_step" dataLogFormat="75" />
                        <setMetadataValue fieldName="progressIndicator_steps" dataLogFormat="100" />
                        <gotoPresenter target="progressIndicator_example" />
                    </actionButton>
                </column>
                <column>
                    <actionButton featureText="100%">
                        <setMetadataValue fieldName="progressIndicator_step" dataLogFormat="1000" />
                        <setMetadataValue fieldName="progressIndicator_steps" dataLogFormat="1000" />
                        <gotoPresenter target="progressIndicator_example" />
                    </actionButton>
                </column>
            </row>
        </table>
        <plainText featureText="The progressIndicator takes a string in evaluateTokens and uses metadata fields as numbers to calculate a percentage for the progress value." />
        <plainText featureText="&lt;metadataField_progressIndicator_step&gt; / &lt;metadataField_progressIndicator_steps&gt; * 100" />
        <addPadding />
        <progressIndicator evaluateTokens="&lt;metadataField_progressIndicator_step&gt; / &lt;metadataField_progressIndicator_steps&gt; * 100">
            <onError>
                <htmlText featureText="The progressIndicator evaluateTokens failed, please check the metadata field values." styleName="metadataError" />
            </onError>
            <onSuccess />
        </progressIndicator>
        <addPadding />
        <progressIndicator evaluateTokens="&lt;metadataField_progressIndicator_step&gt; / &lt;metadataField_progressIndicator_steps&gt; * 100" styleName="progressIndicatorVertical">
            <onError>
                <htmlText featureText="The progressIndicator evaluateTokens failed, please check the metadata field values." styleName="metadataError" />
            </onError>
            <onSuccess />
        </progressIndicator>
        <addPadding />
        <progressIndicator evaluateTokens="&lt;metadataField_progressIndicator_step&gt; / &lt;metadataField_progressIndicator_steps&gt; * 100" styleName="progressIndicatorHorizontal">
            <onError>
                <htmlText featureText="The progressIndicator evaluateTokens failed, please check the metadata field values." styleName="metadataError" />
            </onError>
            <onSuccess />
        </progressIndicator>
        <addPadding />
        <progressIndicator evaluateTokens="&lt;metadataField_progressIndicator_step&gt; / &lt;metadataField_progressIndicator_steps&gt; * 100" styleName="progressIndicatorRight">
            <onError>
                <htmlText featureText="The progressIndicator evaluateTokens failed, please check the metadata field values." styleName="metadataError" />
            </onError>
            <onSuccess />
        </progressIndicator>
        <addPadding />
        <saveMetadataButton featureText="Update" sendData="false" networkErrorMessage="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw.">
            <onError />
            <onSuccess>
                <gotoPresenter target="progressIndicator_example" />
            </onSuccess>
        </saveMetadataButton>
    </presenter>
    <presenter back="Menu" menuLabel="With Stimuli Screen" next="First_Stimuli_Screen_Informatie" type="stimulus" self="With_Stimuli_Screen" title="With Stimuli Screen">
        <withStimuli eventTag="With Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus>
                <plainText featureText="plainText in beforeStimulus"/>
            </beforeStimulus>
            <eachStimulus>
                <plainText featureText="plainText in eachStimulus"/>
                <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                    <mediaLoaded>
                        <plainText featureText="plainText in mediaLoaded"/>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <plainText featureText="plainText in mediaLoadFailed"/>
                    </mediaLoadFailed>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <plainText featureText="plainText in mediaPlaybackComplete"/>
                        <addPadding/>
                        <ratingButton dataChannel="1" ratingLabelRight="" ratingLabels="zin compleet,zin onvolledig" ratingLabelLeft=""/>
                    </mediaPlaybackComplete>
                </stimulusPresent>
            </eachStimulus>
            <afterStimulus>
                <regionAppend regionId="validateStimuliResponses"/>
                <actionButton featureText="validateStimuliResponses">
                    <validateStimuliResponses>
                        <conditionFalse>
                            <regionAppend regionId="validateStimuliResponses">
                                <plainText featureText="plainText in conditionFalse"/>
                            </regionAppend>
                        </conditionFalse>
                        <conditionTrue>
                            <regionAppend regionId="validateStimuliResponses">
                                <plainText featureText="plainText in conditionTrue"/>
                            </regionAppend>
                        </conditionTrue>
                    </validateStimuliResponses>
                </actionButton>
                <plainText featureText="plainText in afterStimulus"/>
                <targetButton featureText="Next Screen" target="First_Stimuli_Screen_Informatie"/>
            </afterStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </withStimuli>
    </presenter>
    <presenter back="Menu" menuLabel="Stimulus Subquestions" type="stimulus" self="Stimulus_Subquestions" title="Stimulus Subquestions">
        <withStimuli eventTag="Stimulus Subquestions" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus>
                <plainText featureText="plainText in beforeStimulus"/>
            </beforeStimulus>
            <eachStimulus>
                <stimulusMetadataField dataChannel="3" fieldName="education"/>
                <regionAppend regionId="subquestionregion&lt;stimulusId&gt;">
                    <plainText featureText="plainText in eachStimulus"/>
                    <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                        <mediaLoaded/>
                        <mediaLoadFailed/>
                        <mediaPlaybackStarted/>
                        <mediaPlaybackComplete>
                            <plainText featureText="plainText in mediaPlaybackComplete"/>
                            <addPadding/>
                            <plainText featureText="Click a rating button to see its sub questions"/>
                            <table>
                                <row>
                                    <stimulusHasRatingOptions>
                                        <conditionTrue>
                                            <column>
                                                <actionTokenButton featureText="Rating 0 is &lt;stimulusRatingLabel_0&gt;">
                                                    <regionAppend regionId="subquestionregion&lt;stimulusId&gt;">
                                                        <plainText featureText="Question one rating 0"/>
                                                        <plainText featureText="Question one for zin compleet"/>
                                                        <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" " groupId="rating_0_for_zin_compleet"/>
                                                    </regionAppend>
                                                </actionTokenButton>
                                            </column>                                            
                                            <column>
                                                <actionTokenButton featureText="Rating 1 is &lt;stimulusRatingLabel_1&gt;">
                                                    <plainText featureText="Question one rating 1"/>
                                                    <regionAppend regionId="subquestionregion&lt;stimulusId&gt;">
                                                        <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" " groupId="rating_0_for_zin_compleet"/>
                                                    </regionAppend>
                                                </actionTokenButton>
                                            </column>
                                        </conditionTrue>
                                        <conditionFalse/>
                                    </stimulusHasRatingOptions>
                                    <column>
                                        <actionButton featureText="zin compleet">
                                            <regionReplace regionId="subquestionregion&lt;stimulusId&gt;">
                                                <plainText featureText="Question one for zin compleet"/>
                                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" " groupId="question_one_for_zin_compleet"/>
                                                <plainText featureText="Question two for zin compleet"/>
                                                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="3" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="question_two_for_zin_compleet"/>
                                                <plainText featureText="Question three for zin compleet"/>
                                                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="3" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="question_three_for_zin_compleet"/>
                                                <actionButton featureText="do you want another question">
                                                    <regionAppend regionId="subquestionregion&lt;stimulusId&gt;">
                                                        <plainText featureText="here is your question, please describe it"/>
                                                        <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" " groupId="another_question_for_zin_compleet"/>
                                                    </regionAppend>
                                                </actionButton>
                                            </regionReplace>
                                        </actionButton>
                                    </column>
                                    <column>
                                        <actionButton featureText="zin onvolledig">
                                            <regionReplace regionId="subquestionregion&lt;stimulusId&gt;">
                                                <plainText featureText="Question one for zin onvolledig"/>
                                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" " groupId="question_one_for_zin_compleet"/>
                                                <plainText featureText="Question two for zin compleet"/>
                                                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="3" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="question_two_for_zin_compleet"/>
                                                <plainText featureText="Question three for zin compleet"/>
                                                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="3" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="question_three_for_zin_compleet"/>
                                            </regionReplace>
                                        </actionButton>
                                    </column>
                                </row>
                            </table>
                        </mediaPlaybackComplete>
                    </stimulusPresent>
                </regionAppend>
            </eachStimulus>
            <afterStimulus>
                <regionAppend regionId="validateStimuliResponses"/>
                <actionButton featureText="validateStimuliResponses">
                    <validateStimuliResponses>
                        <conditionFalse>
                            <regionAppend regionId="validateStimuliResponses">
                                <plainText featureText="plainText in conditionFalse"/>
                            </regionAppend>
                        </conditionFalse>
                        <conditionTrue>
                            <regionAppend regionId="validateStimuliResponses">
                                <plainText featureText="plainText in conditionTrue"/>
                            </regionAppend>
                        </conditionTrue>
                    </validateStimuliResponses>
                </actionButton>
                <plainText featureText="plainText in afterStimulus"/>
                <targetButton featureText="Next Screen" target="First_Stimuli_Screen_Informatie"/>
            </afterStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>rating_button_examples</tag>
            </stimuli>
        </withStimuli>
    </presenter>
    <presenter back="Menu" menuLabel="Has Stimulus Response" type="stimulus" self="Has_Stimulus_Response" title="Has Stimulus Response">
        <withStimuli eventTag="Has Stimulus Response" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus>
                <plainText featureText="Clicking a button adds a response."/>
            </beforeStimulus>
            <eachStimulus>
                <stimulusLabel/>
                <addStimulusCodeResponseValidation featureText="Please respond to this item." validationRegex=".{1,}" dataChannel="8"/>
                <htmlTokenText featureText="The current response: &lt;stimulusResponse&gt;"/>
                <table>
                    <row>
                        <column>
                            <actionTokenButton featureText="Clear" styleName="ratingBox">
                                <setStimulusCodeResponse codeFormat="" dataChannel="8" applyScore="false"/>
                            </actionTokenButton>
                        </column>
                        <column>
                            <actionTokenButton featureText="Respond" styleName="ratingBox">
                                <setStimulusCodeResponse codeFormat="5" dataChannel="8" applyScore="true"/>
                            </actionTokenButton>
                        </column>
                    </row>
                </table>
            </eachStimulus>
            <afterStimulus>
                <addPadding/>
                <actionButton featureText="validateStimuliResponses">
                    <validateStimuliResponses>
                        <conditionFalse>
                            <plainText featureText="validateStimuliResponses conditionFalse"/>
                        </conditionFalse>
                        <conditionTrue>
                            <plainText featureText="validateStimuliResponses conditionTrue"/>
                            <actionButton featureText="resetStimulus">
                                <resetStimulus target="Has_Stimulus_Response"/>
                                <gotoPresenter target="Has_Stimulus_Response"/>
                            </actionButton>
                        </conditionTrue>
                    </validateStimuliResponses>
                </actionButton>
            </afterStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </withStimuli>
    </presenter>
    <presenter back="Menu" menuLabel="logTokenText Stimuli Screen" next="stimulusRatingRadio" type="stimulus" self="First_Stimuli_Screen" title="First Stimuli Screen">
        <loadStimulus eventTag="First Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="
                stimulusId:
                &lt;stimulusId&gt;&lt;br/&gt;
                stimulusLabel:
                &lt;stimulusLabel&gt;&lt;br/&gt;
                stimulusCode:
                &lt;stimulusCode&gt;&lt;br/&gt;
                stimulusCorrectResponses:
                &lt;stimulusCorrectResponses&gt;&lt;br/&gt;
                stimulusRatingLabels:
                &lt;stimulusRatingLabels&gt;&lt;br/&gt;
                stimulusRatingLabel0:
                &lt;stimulusRatingLabel_0&gt;&lt;br/&gt;
                stimulusRatingLabel_1:
                &lt;stimulusRatingLabel_1&gt;&lt;br/&gt;
                stimulusPauseMs:
                &lt;stimulusPauseMs&gt;&lt;br/&gt;
                stimulusAudio:
                &lt;stimulusAudio&gt;&lt;br/&gt;
                stimulusVideo:
                &lt;stimulusVideo&gt;&lt;br/&gt;
                stimulusImage:
                &lt;stimulusImage&gt;&lt;br/&gt;
                stimulusTags:
                &lt;stimulusTags&gt;&lt;br/&gt;
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <logTokenText dataChannel="3" type="logTokenTextType" headerKey="logTokenTextKey" dataLogFormat="
                stimulusId:
                &lt;stimulusId&gt;&lt;br/&gt;
                stimulusLabel:
                &lt;stimulusLabel&gt;&lt;br/&gt;
                stimulusCode:
                &lt;stimulusCode&gt;&lt;br/&gt;
                stimulusCorrectResponses:
                &lt;stimulusCorrectResponses&gt;&lt;br/&gt;
                stimulusRatingLabels:
                &lt;stimulusRatingLabels&gt;&lt;br/&gt;
                stimulusRatingLabel0:
                &lt;stimulusRatingLabel_0&gt;&lt;br/&gt;
                stimulusRatingLabel1:
                &lt;stimulusRatingLabel_1&gt;&lt;br/&gt;
                stimulusPauseMs:
                &lt;stimulusPauseMs&gt;&lt;br/&gt;
                stimulusAudio:
                &lt;stimulusAudio&gt;&lt;br/&gt;
                stimulusVideo:
                &lt;stimulusVideo&gt;&lt;br/&gt;
                stimulusImage:
                &lt;stimulusImage&gt;&lt;br/&gt;
                stimulusTags:
                &lt;stimulusTags&gt;&lt;br/&gt;
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <addPadding/>
                <!--todo: flesh out this score thrshold example/test-->
                <bestScoreAboveThreshold scoreThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="best scoreThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="best scoreThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </bestScoreAboveThreshold>
                <bestScoreAboveThreshold errorThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="best errorThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="best errorThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </bestScoreAboveThreshold>
                <bestScoreAboveThreshold correctStreak="3">
                    <aboveThreshold>
                        <plainText featureText="best correctStreak aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="best correctStreak withinThreshold of 3"/>
                    </withinThreshold>
                </bestScoreAboveThreshold>
                <bestScoreAboveThreshold errorStreak="3">
                    <aboveThreshold>
                        <plainText featureText="best errorStreak aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="best errorStreak withinThreshold of 3"/>
                    </withinThreshold>
                </bestScoreAboveThreshold>
                <bestScoreAboveThreshold potentialThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="best potentialThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="best potentialThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </bestScoreAboveThreshold>
                <totalScoreAboveThreshold scoreThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="total scoreThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="total scoreThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </totalScoreAboveThreshold>
                <totalScoreAboveThreshold errorThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="total errorThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="total errorThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </totalScoreAboveThreshold>
                <totalScoreAboveThreshold potentialThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="total potentialThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="total potentialThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </totalScoreAboveThreshold>
                <scoreAboveThreshold scoreThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="current scoreThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="current scoreThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <scoreAboveThreshold errorThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="current errorThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="current errorThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <scoreAboveThreshold correctStreak="3">
                    <aboveThreshold>
                        <plainText featureText="current correctStreak aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="current correctStreak withinThreshold of 3"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <scoreAboveThreshold errorStreak="3">
                    <aboveThreshold>
                        <plainText featureText="current errorStreak aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="current errorStreak withinThreshold of 3"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <scoreAboveThreshold potentialThreshold="3">
                    <aboveThreshold>
                        <plainText featureText="current potentialThreshold aboveThreshold of 3"/>
                    </aboveThreshold>
                    <withinThreshold>
                        <plainText featureText="current potentialThreshold withinThreshold of 3"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <addPadding/>
                <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                    <mediaLoaded/>
                    <mediaLoadFailed/>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <stimulusHasRatingOptions>
                            <conditionTrue>
                                <stimulusRatingButton ratingLabelRight="" dataChannel="1" ratingLabelLeft="">
                                    <nextStimulus repeatIncorrect="false"/>
                                </stimulusRatingButton>
                            </conditionTrue>
                            <conditionFalse>
                                <!--<plainText featureText="For this example please note that the regex validationRegex .{1,} on a multi line input will need to match on all lines, so the first empty line will not pass the validation test. In order for this example to allow both multiline input and tab+enter for next, the hotKey ENTER should be omitted and added validationRegex should be [\\\\s\\\\S]\\{1,\\} where th 1 indicates the minimum input."/>-->
                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex="[\\s\\S]{1,}" inputErrorMessage=" "/>
                                <nextStimulusButton featureText="Next [TAB + ENTER]" eventTag="Next [TAB + ENTER]" repeatIncorrect="false"/>
                            </conditionFalse>
                        </stimulusHasRatingOptions>
                    </mediaPlaybackComplete>
                </stimulusPresent>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <htmlTokenText featureText="playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <logTokenText dataChannel="3" type="logTokenTextType" headerKey="logTokenTextKey" dataLogFormat="playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <addPadding/>
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore/>
                    <gotoPresenter target="First_Stimuli_Screen"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="First_Stimuli_Screen"/>
                    <gotoPresenter target="First_Stimuli_Screen"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>Pretest_Screen</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="stimulusResponse_logTokenText" type="stimulus" self="stimulusResponse_logTokenText" title="stimulusResponse_logTokenText">
        <loadStimulus eventTag="stimulusResponse_logTokenText" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="Stored stimuli responses can be displayed in the htmlTokenText. Not all response types are stored currently. Rating buttons do not store the response, but free text does. This can be changed later if needed."/>
                <plainText featureText="The current stimulus: &lt;stimulusResponse&gt;"/>
                <plainText featureText="Specific stimulus by id: &lt;stimulusResponse_Q7&gt;"/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="
                stimulusId:
                &lt;stimulusId&gt;&lt;br/&gt;
                stimulusLabel:
                &lt;stimulusLabel&gt;&lt;br/&gt;
                stimulusResponse:
                &lt;stimulusResponse&gt;&lt;br/&gt;"/>
                <addPadding/>
                <htmlTokenText featureText="
                stimulusResponse_Q1:
                &lt;stimulusResponse_Q1&gt;&lt;br/&gt;
                stimulusResponse_Q2:
                &lt;stimulusResponse_Q2&gt;&lt;br/&gt;
                stimulusResponse_Q3:
                &lt;stimulusResponse_Q3&gt;&lt;br/&gt;
                stimulusResponse_Q6:
                &lt;stimulusResponse_Q6&gt;&lt;br/&gt;
                stimulusResponse_Q7:
                &lt;stimulusResponse_Q7&gt;&lt;br/&gt;
                stimulusResponse_Q8:
                &lt;stimulusResponse_Q8&gt;&lt;br/&gt;
                "/>
                <addPadding/>
                <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                    <mediaLoaded/>
                    <mediaLoadFailed/>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <stimulusHasRatingOptions>
                            <conditionTrue>
                                <stimulusRatingButton ratingLabelRight="" dataChannel="1" ratingLabelLeft="">
                                    <nextStimulus repeatIncorrect="false"/>
                                </stimulusRatingButton>
                            </conditionTrue>
                            <conditionFalse>
                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex=".{1,}" inputErrorMessage=" "/>
                                <nextStimulusButton featureText="Next [TAB + ENTER]" eventTag="Next [TAB + ENTER]" hotKey="ENTER" repeatIncorrect="false"/>
                            </conditionFalse>
                        </stimulusHasRatingOptions>
                    </mediaPlaybackComplete>
                </stimulusPresent>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <addPadding/>
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore/>
                    <gotoPresenter target="stimulusResponse_logTokenText"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="stimulusResponse_logTokenText"/>
                    <gotoPresenter target="stimulusResponse_logTokenText"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>Pretest_Screen</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="StimulusRatingRadio" next="Second_Informatie" type="stimulus" self="stimulusRatingRadio" title="StimulusRatingRadio">
        <loadStimulus eventTag="First Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <addPadding/>
                <addPadding/>
                <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                    <mediaLoaded/>
                    <mediaLoadFailed/>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <stimulusHasRatingOptions>
                            <conditionTrue>
                                <stimulusRatingRadio ratingLabelRight="" dataChannel="1" ratingLabelLeft=""/>
                                <nextStimulusButton featureText="stimulusRatingRadio Next" eventTag="stimulusRatingRadio Next" repeatIncorrect="false"/>
                            </conditionTrue>
                            <conditionFalse>
                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex=".{1,}" inputErrorMessage=" "/>
                                <nextStimulusButton featureText="Next [TAB + ENTER]" eventTag="Next [TAB + ENTER]" hotKey="ENTER" repeatIncorrect="false"/>
                            </conditionFalse>
                        </stimulusHasRatingOptions>
                    </mediaPlaybackComplete>
                </stimulusPresent>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <htmlTokenText featureText="playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                "/>
                <addPadding/>
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore/>
                    <gotoPresenter target="stimulusRatingRadio"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="stimulusRatingRadio"/>
                    <gotoPresenter target="stimulusRatingRadio"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>Pretest_Screen</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Metadata HtmlTokenText" type="stimulus" self="Metadata_HtmlTokenText" title="Metadata HtmlTokenText">
        <htmlTokenText featureText="
                workerId:
                &lt;metadataField_workerId&gt;&lt;br/&gt;
                age:
                &lt;metadataField_age&gt;&lt;br/&gt;
                enabledVisibleOptions:
                &lt;metadataField_enabledVisibleOptions&gt;&lt;br/&gt;
                gender:
                &lt;metadataField_gender&gt;&lt;br/&gt;
                education:
                &lt;metadataField_education&gt;&lt;br/&gt;
                educationOther:
                &lt;metadataField_educationOther&gt;&lt;br/&gt;
                dateOfBirth:
                &lt;metadataField_dateOfBirth&gt;&lt;br/&gt;
                item:
                &lt;metadataField_item&gt;&lt;br/&gt;
                ageGroup:
                &lt;metadataField_ageGroup&gt;&lt;br/&gt;
                "/>
        <actionTokenButton featureText="&lt;metadataField_workerId&gt;">
        </actionTokenButton>
    </presenter>
    <presenter back="Menu" menuLabel="Terug" type="text" self="Second_Informatie" title="Second Informatie">
        <htmlText featureText="Instructies Deel 2: &lt;br/&gt;&lt;br/&gt;Type het juiste antwoord in de textbox."/>
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="Second"/>
    </presenter>
    <presenter back="Menu" menuLabel="hasGetParameter" type="menu" self="hasGetParameter" title="hasGetParameter">
        <htmlText featureText="A get parameter must be provided on the URL, eg:"/>
        <htmlText featureText="https://frinexstaging.mpi.nl/with_stimulus_example?stimuliC"/>
        <htmlText featureText="https://frinexstaging.mpi.nl/with_stimulus_example?stimuliN"/>
        <htmlText featureText="https://frinexstaging.mpi.nl/with_stimulus_example?stimuliC&amp;stimuliN"/>
        <hasGetParameter parameterName="stimuliC">
            <conditionTrue>
                <htmlText featureText="stimuliC provided"/>
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="stimuliC not provided"/>
            </conditionFalse>
        </hasGetParameter>
        <hasGetParameter parameterName="stimuliN">
            <conditionTrue>
                <htmlText featureText="stimuliN provided"/>
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="stimuliN not provided"/>
            </conditionFalse>
        </hasGetParameter>
    </presenter>
    <presenter back="Menu" menuLabel="Terug" type="text" self="cafe_test" title="café encoding test">
        <htmlText featureText="Please make sure that the accent is correctly displayed on this screen: café"/>
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="Second"/>
    </presenter>
    <presenter back="Menu" menuLabel="Single Image Example" type="text" self="Single_Image_Example" title="Single Image Example">
        <htmlText featureText="This is a simple example showing a single image."/>
        <image msToNext="1000" src="d1e269.jpg" styleName="exampleBorderedBackground">
            <mediaLoaded>
                <htmlText featureText="mediaLoaded"/>
            </mediaLoaded>
            <mediaLoadFailed>
                <htmlText featureText="mediaLoadFailed"/>
            </mediaLoadFailed>
        </image>
        <htmlText featureText="This label is after the image but before mediaLoaded and mediaLoadFailed are evaluated."/>
    </presenter>
    <presenter back="Menu" menuLabel="Rating Buttons Example" type="stimulus" self="rating_buttons_example" title="Rating Buttons Example">
        <loadStimulus eventTag="rating_buttons_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="Rating buttons can be different for each stimulus, or the same for all. In this example we have the same set of options for all."/>
                <htmlText featureText="For an example of stimulus based rating buttons see: &lt;a href=&quot;#InvitationCodeExampleStimuliScreen&quot;&gt;InvitationCodeExampleStimuliScreen&lt;/a&gt;"/>
                <addPadding/>
                <plainText featureText="These rating buttons also respond to key press events, eg numbers in this case."/>
                <addPadding/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <ratingButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief">
                    <nextStimulus repeatIncorrect="false"/>
                </ratingButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="rating_buttons_example"/>
                    <gotoPresenter target="rating_buttons_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Clear Stimulus Responses Example" type="stimulus" self="clear_stimulus_responses_example" title="Clear Stimulus Responses Example">
        <loadStimulus eventTag="clear_stimulus_responses_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows how to clear stimulus responses when reshowing a stimulus with radio button or checkbox inputs that already has a response."/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <stimulusLabel styleName="countDownLabel"/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <stimulusExists offset="1">
                    <conditionTrue>
                        <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <actionButton featureText="clearStimulusResponses">
                    <clearStimulusResponses tags="rating_button_examples"/>
                    <gotoPresenter target="clear_stimulus_responses_example"/>
                </actionButton>
                <addPadding/>
                <addPadding/> 
                <addPadding/>
                <htmlText featureText="stimulusRatingRadio" styleName="highlightedText"/>
                <stimulusRatingRadio ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>                
                <htmlText featureText="ratingCheckbox" styleName="highlightedText"/>
                <ratingCheckbox ratingLabelRight="Most M like" ratingLabels="G,H,I,J,K,L,M" dataChannel="1" ratingLabelLeft="Most G like" orientation="horizontal"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="stimulusRatingCheckbox" styleName="highlightedText"/>
                <stimulusRatingCheckbox ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="clear_stimulus_responses_example"/>
                    <gotoPresenter target="clear_stimulus_responses_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>rating_button_examples</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Clear Stimulus Response Example" type="stimulus" self="clear_stimulus_response_example" title="Clear Stimulus Response Example">
        <loadStimulus eventTag="clear_stimulus_response_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows multiple free text inputs for each stimulus. The responses to each stimulus are shown in a htmlTokenText with &lt;stimulusResponse_stimulusid_groupId&gt;"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <stimulusLabel styleName="countDownLabel"/> 
                <addPadding/>
                <addPadding/>
                <htmlText featureText="All responses for this stimulus will be stored separately according to the groupId of each including the stimulusFreeText." styleName="highlightedText"/>
                <htmlTokenText featureText="1: &lt;stimulusResponse__stimulusFreeText1&gt;"/>
                <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeText1"/>
                <htmlTokenText featureText="2: &lt;stimulusResponse__stimulusFreeText2&gt;"/>
                <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeText2"/>
                <addPadding/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <stimulusExists offset="+1">
                    <conditionTrue>
                        <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <addPadding/>
                <actionButton featureText="clearStimulusResponse all">
                    <clearStimulusResponse/>
                    <gotoPresenter target="clear_stimulus_response_example"/>
                </actionButton>
                <actionButton featureText="clearStimulusResponse 1">
                    <clearStimulusResponse groupId="stimulusFreeText1"/>
                    <gotoPresenter target="clear_stimulus_response_example"/>
                </actionButton>
                <actionButton featureText="clearStimulusResponse 2">
                    <clearStimulusResponse groupId="stimulusFreeText2"/>
                    <gotoPresenter target="clear_stimulus_response_example"/>
                </actionButton>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="Current stimulus all groups: &lt;stimulusResponse&gt;"/>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="id7_1: &lt;stimulusResponse_7_stimulusFreeText1&gt;"/>
                <htmlTokenText featureText="id7_2: &lt;stimulusResponse_7_stimulusFreeText2&gt;"/>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="id68_1: &lt;stimulusResponse_68_stimulusFreeText1&gt;"/>
                <htmlTokenText featureText="id68_2: &lt;stimulusResponse_68_stimulusFreeText2&gt;"/>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="id32_1: &lt;stimulusResponse_32_stimulusFreeText1&gt;"/>
                <htmlTokenText featureText="id32_2: &lt;stimulusResponse_32_stimulusFreeText2&gt;"/>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="id322_1: &lt;stimulusResponse_322_stimulusFreeText1&gt;"/>
                <htmlTokenText featureText="id322_2: &lt;stimulusResponse_322_stimulusFreeText2&gt;"/>
                <addPadding/>
                <addPadding/>
                <htmlTokenText featureText="id323_1: &lt;stimulusResponse_323_stimulusFreeText1&gt;"/>
                <htmlTokenText featureText="id323_2: &lt;stimulusResponse_323_stimulusFreeText2&gt;"/>
                <addPadding/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="clear_stimulus_response_example"/>
                    <gotoPresenter target="clear_stimulus_response_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>rating_button_examples</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Visible Enable Stimulus Free Text Example" type="stimulus" self="visible_enable_stimulus_free_text_example" title="Visible Enable Stimulus Free Text Example">
        <loadStimulus eventTag="visible_enable_stimulus_free_text_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows various stimulus inputs and the validation cases when enabled, disabled, hidden and shown. Only when the input is enabled and visible will its validity be considered."/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <stimulusLabel styleName="countDownLabel"/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <stimulusExists offset="+1">
                    <conditionTrue>
                        <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="Input validation will only occur on these inputs when they are both visible and enabled." styleName="highlightedText"/>
                <table>
                    <row>
                        <column>
                            <stimulusFreeText featureText="Please enter at least three characters." validationRegex=".{3,}" hotKey="ENTER" inputErrorMessage="" styleName="minimalWidth" groupId="stimulusFreeText1"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="stimulusFreeText1"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="stimulusFreeText1"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="stimulusFreeText1"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="stimulusFreeText1"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusFreeText featureText="Please enter at least three digits." validationRegex="[0-9]{3,}" hotKey="ENTER" inputErrorMessage="" styleName="minimalWidth" groupId="stimulusFreeText2"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="stimulusFreeText2"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="stimulusFreeText2"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="stimulusFreeText2"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="stimulusFreeText2"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusMetadataField dataChannel="3" fieldName="dateOfBirth"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="dateOfBirth"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="dateOfBirth"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="dateOfBirth"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="dateOfBirth"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column styleName="exampleBorderedBackground">
                            <addStimulusCodeResponseValidation dataChannel="3" featureText="The response is not valid." groupId="nonUserInterfaceValidation" validationRegex="[0-9]{3,}"/>
                            <actionButton featureText="Set to: 1234 (valid)">
                                <setStimulusCodeResponse applyScore="false" codeFormat="1234" dataChannel="6" groupId="nonUserInterfaceValidation" />
                            </actionButton>
                            <actionButton featureText="Set to: abcd">
                                <setStimulusCodeResponse applyScore="false" codeFormat="abcd" dataChannel="6" groupId="nonUserInterfaceValidation" />
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="nonUserInterfaceValidation"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="nonUserInterfaceValidation"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="nonUserInterfaceValidation"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="nonUserInterfaceValidation"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <ratingRadioButton ratingLabels="1,2,3,4,5,6,7" dataChannel="1" groupId="ratingRadioButtonInput"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="ratingRadioButtonInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="ratingRadioButtonInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="ratingRadioButtonInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="ratingRadioButtonInput"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusRatingRadio dataChannel="1" groupId="stimulusRatingRadioInput"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="stimulusRatingRadioInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="stimulusRatingRadioInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="stimulusRatingRadioInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="stimulusRatingRadioInput"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <ratingCheckbox ratingLabels="G,H,I,J,K,L,M" dataChannel="1" groupId="ratingCheckboxInput"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="ratingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="ratingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="ratingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="ratingCheckboxInput"/>
                            </actionButton>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusRatingCheckbox dataChannel="1" groupId="stimulusRatingCheckboxInput"/>
                        </column>
                        <column>
                            <actionButton featureText="enable">
                                <enableButtonGroup matchingRegex="stimulusRatingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="disable">
                                <disableButtonGroup matchingRegex="stimulusRatingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="show">
                                <showButtonGroup matchingRegex="stimulusRatingCheckboxInput"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="hide">
                                <hideButtonGroup matchingRegex="stimulusRatingCheckboxInput"/>
                            </actionButton>
                        </column>
                    </row>
                    <!-- the feature metadataFieldVisibilityDependant is only for metadata not stimulus and so is not relevant here
                        <metadataField fieldName="education"/>
                        <metadataFieldVisibilityDependant fieldName="educationOther" linkedFieldName="education" visibleRegex="anders" enabledRegex=".*"/>
                    -->
                </table>
                <addPadding/>
                <addPadding/>
                <actionButton featureText="Validate">
                    <validateStimuliResponses>
                        <conditionFalse>
                            <regionReplace regionId="validateStimuliRegion">         
                                <plainText featureText="Validate conditionFalse"/>
                            </regionReplace>
                        </conditionFalse>
                        <conditionTrue>
                            <regionReplace regionId="validateStimuliRegion">
                                <plainText featureText="Validate conditionTrue"/>
                            </regionReplace>
                        </conditionTrue>
                    </validateStimuliResponses>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="visible_enable_stimulus_free_text_example"/>
                    <gotoPresenter target="visible_enable_stimulus_free_text_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>rating_button_examples</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Rating Button orientationType Example" type="stimulus" self="rating_button_orientationType_example" title="Rating Button orientationType Example">
        <loadStimulus eventTag="rating_button_orientationType_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows various stimulus rating types and various layout options for those rating options. Some rating options in this example are fixed and others are per stimulus."/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <stimulusLabel styleName="countDownLabel"/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="All responses for this stimulus will be stored separately according to the groupId of each including the stimulusFreeText." styleName="highlightedText"/>
                <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeText1"/>
                <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeText2"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="ratingButton" styleName="highlightedText"/>
                <ratingButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="A,B,C,D,E,F,G" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="ratingButton horizontal">
                    <nextStimulus repeatIncorrect="false"/>
                </ratingButton>
                <ratingButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="A,B,C,D,E,F,G" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="vertical" groupId="ratingButton vertical">
                    <nextStimulus repeatIncorrect="false"/>
                </ratingButton>
                <ratingButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="A,B,C,D,E,F,G" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="flow" groupId="ratingButton flow">
                    <nextStimulus repeatIncorrect="false"/>
                </ratingButton>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="stimulusRatingButton" styleName="highlightedText"/>
                <stimulusRatingButton ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="stimulusRatingButton horizontal">
                    <nextStimulus repeatIncorrect="false"/>
                </stimulusRatingButton>
                <stimulusRatingButton ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="vertical" groupId="stimulusRatingButton vertical">
                    <nextStimulus repeatIncorrect="false"/>
                </stimulusRatingButton>
                <stimulusRatingButton ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="flow" groupId="stimulusRatingButton flow">
                    <nextStimulus repeatIncorrect="false"/>
                </stimulusRatingButton>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="ratingRadioButton" styleName="highlightedText"/>
                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="ratingRadioButton horizontal"/>
                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="vertical" groupId="ratingRadioButton vertical"/>
                <ratingRadioButton ratingLabelRight="zeer waarschijnlijk positief" ratingLabels="1,2,3,4,5,6,7" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="flow" groupId="ratingRadioButton flow"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="stimulusRatingRadio" styleName="highlightedText"/>
                <stimulusRatingRadio ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="stimulusRatingRadio horizontal"/>
                <stimulusRatingRadio ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="vertical" groupId="stimulusRatingRadio vertical"/>
                <stimulusRatingRadio ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="flow" groupId="stimulusRatingRadio flow"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="ratingCheckbox" styleName="highlightedText"/>
                <ratingCheckbox ratingLabelRight="Most M like" ratingLabels="G,H,I,J,K,L,M" dataChannel="1" ratingLabelLeft="Most G like" orientation="horizontal" groupId="ratingCheckbox horizontal"/>
                <ratingCheckbox ratingLabelRight="Most M like" ratingLabels="G,H,I,J,K,L,M" dataChannel="1" ratingLabelLeft="Most G like" orientation="vertical" groupId="ratingCheckbox vertical"/>
                <ratingCheckbox ratingLabelRight="Most M like" ratingLabels="G,H,I,J,K,L,M" dataChannel="1" ratingLabelLeft="Most G like" orientation="flow" groupId="ratingCheckbox flow"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <htmlText featureText="stimulusRatingCheckbox" styleName="highlightedText"/>
                <stimulusRatingCheckbox ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" groupId="stimulusRatingCheckbox horizontal"/>
                <stimulusRatingCheckbox ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="vertical" groupId="stimulusRatingCheckbox vertical"/>
                <stimulusRatingCheckbox ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="flow" groupId="stimulusRatingCheckbox flow"/>
                <addPadding/>
                <addPadding/>
                <addPadding/>
                <ratingFooterButton ratingLabelRight="zeer waarschijnlijk V" ratingLabels="Z,Y,X,W,V" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk ratingFooterButton">
                    <nextStimulus repeatIncorrect="false"/>
                </ratingFooterButton>
                <htmlText featureText="Example CSS styles" styleName="highlightedText"/>
                <htmlText featureText="To style the checkboxes or radio buttons without the default input items you can use the following (see the scss element for this experiments configuration for more details):&lt;br/&gt;exampleRatingRadio &gt; input[type=radio], exampleRatingCheckbox &gt; input[type=checkbox] &amp;#123;display: none;&amp;#125;"/>
                <stimulusRatingCheckbox ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" styleName="exampleRatingCheckbox" groupId="stimulusRatingCheckbox CSS"/>
                <stimulusRatingRadio ratingLabelRight="zeer waarschijnlijk positief" dataChannel="1" ratingLabelLeft="zeer waarschijnlijk negatief" orientation="horizontal" styleName="exampleRatingRadio" groupId="stimulusRatingRadio CSS"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="rating_button_orientationType_example"/>
                    <gotoPresenter target="rating_button_orientationType_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>rating_button_examples</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Holding Button Down Example" type="stimulus" self="holding_button_down_example" title="Holding Button Down Example">
        <htmlText featureText="This example offers a button with a hotkey. If the hotkey is held down, the button will not be retriggerd until the hotkey is released for 1 second."/>
        <actionButton groupId="blockButtonGroup" featureText="Block [SPACE]" hotKey="SPACE">
            <cancelPauseAll/>
            <htmlText featureText="Button blocked."/>
            <pause msToNext="1000">
                <disableButtonGroup matchingRegex="blockButtonGroup"/>
                <enableButtonGroup matchingRegex="exampleButtonGroup"/>
                <htmlText featureText="Button enabled."/>
            </pause>
        </actionButton>
        <actionButton groupId="exampleButtonGroup" featureText="Stimulus [SPACE]" hotKey="SPACE">
            <disableButtonGroup matchingRegex="exampleButtonGroup"/>
            <enableButtonGroup matchingRegex="blockButtonGroup"/>
            <htmlText featureText="Button triggered."/>
            <pause msToNext="1000">
                <htmlText featureText="Button enabled."/>
                <disableButtonGroup matchingRegex="blockButtonGroup"/>
                <enableButtonGroup matchingRegex="exampleButtonGroup"/>
            </pause>
        </actionButton>                
        <disableButtonGroup matchingRegex="blockButtonGroup"/>
        <enableButtonGroup matchingRegex="exampleButtonGroup"/>
    </presenter>
    <presenter back="Menu" menuLabel="Hotkey Enable Example" type="stimulus" self="hotkey_enable_example" title="Hotkey Enable Example">
        <htmlText featureText="This example assigns a button a hotkey and adds a button with the same kotkey. When the hotkey is pressed the button triggers and disables itself. When the hotkey is released the button is enabled again by the hotKeyInput listener."/>
        <hotKeyInput groupId="blockButtonGroup" hotKey="SPACE">
            <onKeyUp>
                <htmlText featureText="hotKeyInput onKeyUp."/>
                <htmlText featureText="Button enabled."/>
                <enableButtonGroup matchingRegex="exampleButtonGroup"/>
            </onKeyUp>
            <onKeyDown>
                <htmlText featureText="hotKeyInput onKeyDown."/>
            </onKeyDown>
        </hotKeyInput>
        <actionButton groupId="exampleButtonGroup" featureText="Stimulus [SPACE]" hotKey="SPACE">
            <disableButtonGroup matchingRegex="exampleButtonGroup"/>
            <htmlText featureText="Button triggered and disabled."/>
        </actionButton>                
    </presenter>
    <presenter back="Menu" menuLabel="Single Line Text Box Example" type="stimulus" self="single_line_text_box_example" title="Single Line Text Box Example">
        <loadStimulus eventTag="single_line_text_box_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="The stimulus text box can be single line or multi line, it can also pass hot keys to buttons in the page, if those keys are not valid input for that text box. In this case the box is single line, so the enter key is not valid input and therefore enter can trigger the next stimulus."/>
                <addPadding/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <stimulusFreeText featureText="Please enter at least three characters." validationRegex=".{1,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth"/>
                <addPadding/>
                <actionButton featureText="Next [ENTER]" hotKey="ENTER">
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="single_line_text_box_example"/>
                    <gotoPresenter target="single_line_text_box_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Single Line Text Box Without Action Example" type="stimulus" self="single_line_text_box_no_action_example" title="Single Line Text Box Without Action Example">
        <withStimuli eventTag="single_line_text_box_no_action_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus>
                <plainText featureText="The stimulus text box can be single line or multi line, with out without an action for that hotkey."/>
            </beforeStimulus>
            <eachStimulus>
                <addPadding/>
                <stimulusLabel/>
                <addPadding/>
                <stimulusFreeText featureText="Please enter at least three characters." validationRegex=".{1,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth"/>
            </eachStimulus>
            <afterStimulus>
                <addPadding/>
                <actionButton featureText="Validate">
                    <validateStimuliResponses>
                        <conditionFalse>
                            <plainText featureText="Validate conditionFalse"/>
                        </conditionFalse>
                        <conditionTrue>
                            <plainText featureText="Validate conditionTrue"/>
                        </conditionTrue>
                    </validateStimuliResponses>
                </actionButton>
                <addPadding/>
                <actionButton featureText="Add a button with a hotkey">
                    <addPadding/>
                    <actionButton featureText="Validate [ENTER]" hotKey="ENTER">
                        <validateStimuliResponses>
                            <conditionFalse>
                                <plainText featureText="Validate [ENTER] conditionFalse"/>
                            </conditionFalse>
                            <conditionTrue>
                                <plainText featureText="Validate [ENTER] conditionTrue"/>
                            </conditionTrue>
                        </validateStimuliResponses>
                    </actionButton>
                </actionButton>
                <addPadding/>
                <actionButton featureText="clearStimulusResponses and reaload">
                    <clearStimulusResponses tags="First_Stimuli_Screen"/>
                    <gotoPresenter target="single_line_text_box_no_action_example"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="single_line_text_box_no_action_example"/>
                    <gotoPresenter target="single_line_text_box_no_action_example"/>
                </actionButton>
            </afterStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </withStimuli>
    </presenter>
    <presenter back="Menu" menuLabel="Second" next="Third_Informatie" type="stimulus" self="Second" title="Second">
        <loadStimulus eventTag="Second" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <htmlText featureText="Enter a number with or without a decimal point. There cannot be a leading nor trailing decimal point. Only one decimal point is valid."/>
                <htmlText featureText="Only the keys 0, 1, 2, 3, 4, 5,6, 7, 8, 9 and . can be used in this text box example. The enter key will go to the next stimulus."/>
                <addPadding/>
                <stimulusFreeText featureText="Vul minimal 1 nummer." hotKey="ENTER" allowedCharCodes="0123456789." styleName="stimuliLabel" validationRegex="[0-9]+([.]?[0-9]+)?" inputErrorMessage="Sorry, dit teken is niet toegestaan."/>
                <actionButton featureText="Volgende [enter]" hotKey="ENTER" >
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="Second"/>
                    <gotoPresenter target="Second"/>
                </actionButton>
                <actionButton featureText="Next">
                    <gotoNextPresenter/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping storageField="item">
                <tag>second</tag>
            </randomGrouping>
            <stimuli>
                <tag>Second</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Recorder" next="Menu" type="stimulus" self="Recorder" title="Recorder">
        <actionButton featureText="stopAudioRecorder">
            <stopAudioRecorder/>
            <!--<htmlText featureText="stopAudioRecorder"/>-->
            <!--</stopAudioRecorder>-->
        </actionButton>
        <!-- <actionButton featureText="startAudioRecorderTag (not supported in the HTML5 version)">
        <startAudioRecorderTag eventTier="3"/>
        <htmlText featureText="startAudioRecorderTag"/>
        </startAudioRecorderTag>
        </actionButton>-->
        <loadStimulus eventTag="Second" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <regionAppend regionId="regionTimer"/>
                <clearPage/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <stimulusFreeText featureText="Vul minimal 1 nummer." allowedCharCodes="0123456789." styleName="stimuliLabel" validationRegex="[0-9]+[.]?[0-9]*" inputErrorMessage="Sorry, dit teken is niet toegestaan."/>
                <actionButton featureText="Volgende [tab + enter]">
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
                <actionButton groupId="startAudioButtonGroup" featureText="startAudioRecorder">
                    <disableButtonGroup matchingRegex="startAudioButtonGroup"/>
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia">
                        <onError>
                            <regionAppend regionId="regionTimer">
                                <htmlText featureText="startAudioRecorder onError"/>
                                <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                            </regionAppend>
                        </onError>
                        <onSuccess>
                            <regionAppend regionId="regionTimer">
                                <htmlText featureText="startAudioRecorder onSuccess"/>
                                <startTimer msToNext="0" listenerId="timerA"/>
                                <timerLabel listenerId="timerA" msLabelFormat="mm:ss" msToNext="0" styleName="countDownLabel"/>
                            </regionAppend>
                        </onSuccess>
                        <mediaLoaded>
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingLoaded"/>
                            </regionAppend>
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingLoadFailed"/>
                            </regionAppend>
                            <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                        </mediaLoadFailed>
                        <mediaPlaybackStarted/>
                        <mediaPlaybackComplete>
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingPlaybackComplete"/>
                            </regionAppend>
                            <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton groupId="startAudioButtonGroup" featureText="startAudioRecorder(046d:0a45)">
                    <disableButtonGroup matchingRegex="startAudioButtonGroup"/>
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="(046d:0a45)" mediaId="recordedMedia">
                        <onError>
                            <regionAppend regionId="regionTimer">
                                <htmlText featureText="startAudioRecorder onError, please plug in device with the USB id: (046d:0a45)"/>
                            </regionAppend>
                            <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                        </onError>
                        <onSuccess>
                            <regionAppend regionId="regionTimer">
                                <htmlText featureText="startAudioRecorder onSuccess"/>
                                <startTimer msToNext="0" listenerId="timerA"/>
                                <timerLabel listenerId="timerA" msLabelFormat="mm:ss" msToNext="0" styleName="countDownLabel"/>
                            </regionAppend>
                        </onSuccess>
                        <mediaLoaded>
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingLoaded"/>
                            </regionAppend>
                        </mediaLoaded>
                        <mediaLoadFailed> 
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingLoadFailed"/>
                                <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                            </regionAppend>
                        </mediaLoadFailed>
                        <mediaPlaybackStarted/>
                        <mediaPlaybackComplete>
                            <regionAppend regionId="regionTimer">
                                <plainText featureText="AudioRecordingPlaybackComplete"/>
                            </regionAppend>
                            <enableButtonGroup matchingRegex="startAudioButtonGroup"/>
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <gotoNextPresenter/>
            </endOfStimulus>
            <randomGrouping storageField="item">
                <tag>second</tag>
            </randomGrouping>
            <stimuli>
                <tag>Second</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="RecorderPauseTest" next="Menu" type="stimulus" self="RecorderPauseTest" title="RecorderPauseTest">
        <htmlText featureText="This example starts and stops the web recorder based on the stimulus pause value."/>
        <loadStimulus eventTag="RecorderPauseTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <regionAppend regionId="paddingRegion"/>
                <regionAppend regionId="hardwareTimeStampStatusRegion"/>
                <hasGetParameter parameterName="hardwareTimeStamp">
                    <conditionTrue>
                        <regionStyle regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="HardwareTimeStamps is enabled."/>
                        </regionAppend>
                    </conditionTrue>
                    <conditionFalse>
                        <regionAppend regionId="hardwareTimeStampStatusRegion">
                            <htmlText featureText="The GET parameter hardwareTimeStamp has not been provided in the URL. HardwareTimeStamps disabled so this example will have no output."/>
                            <htmlText featureText="&lt;a href=&quot;?hardwareTimeStamp&quot;&gt;Enable HardwareTimeStamps&lt;/a&gt;"/>
                        </regionAppend>
                    </conditionFalse>
                </hasGetParameter>
                <logTimeStamp eventTag="start"/>
                <hardwareTimeStamp dtmf="off" opto1="true" opto2="true" />
                <!-- allow the hardware optical sensor time to register the current state -->
                <pause msToNext="1000">
                    <logTimeStamp eventTag="zero"/>
                    <hardwareTimeStamp dtmf="1" opto1="false" opto2="true" />
                    <stimulusLabel styleName="stimuliLabel"/>
                    <actionButton groupId="dtmf8Button" featureText="DTMF 8 [space]" hotKey="SPACE">
                        <logTimeStamp eventTag="dtmf8Button"/>
                        <hardwareTimeStamp dtmf="8" opto2="true" />
                        <pause msToNext="200">
                            <hardwareTimeStamp dtmf="off" />
                        </pause>
                    </actionButton> 
                    <addPadding/>
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="0" mediaId="recordedMedia">
                        <onError>
                            <logTimeStamp eventTag="recording failed"/>
                            <hardwareTimeStamp dtmf="off" />
                            <htmlText featureText="startAudioRecorder onError"/>
                        </onError>
                        <onSuccess>
                            <logTimeStamp eventTag="recording begun"/>
                            <hardwareTimeStamp dtmf="off" opto2="false" />
                            <htmlText featureText="startAudioRecorder onSuccess"/>
                        </onSuccess>
                        <mediaLoaded>
                            <hardwareTimeStamp dtmf="4" />
                            <plainText featureText="AudioRecordingLoaded"/>
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <hardwareTimeStamp dtmf="5" />
                            <plainText featureText="AudioRecordingLoadFailed"/>
                        </mediaLoadFailed>
                        <mediaPlaybackStarted/>
                        <mediaPlaybackComplete>
                            <hardwareTimeStamp dtmf="6" />
                            <plainText featureText="AudioRecordingPlaybackComplete"/>
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                    <stimulusPause>
                        <hardwareTimeStamp dtmf="7" opto1="true" opto2="true" />
                        <stopAudioRecorder/> 
                        <logTimeStamp eventTag="stop"/>
                        <pause msToNext="200">
                            <hardwareTimeStamp dtmf="off" />
                            <nextStimulus repeatIncorrect="false"/>
                        </pause>
                    </stimulusPause>
                </pause>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <regionStyle regionId="paddingRegion" styleName="hardwareLightSensorPadding"/>
                <hardwareTimeStamp dtmf="off" opto1="false" opto2="false" />
                <stopAudioRecorder/>
                <actionButton featureText="resetStimulus" hotKey="SPACE">
                    <hardwareTimeStamp dtmf="9" opto1="false" opto2="false" />
                    <resetStimulus target="RecorderPauseTest"/>
                    <gotoPresenter target="RecorderPauseTest"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="RecorderNoDownloadTest" next="Menu" type="stimulus" self="RecorderNoDownloadTest" title="RecorderNoDownloadTest">
        <htmlText featureText="This example starts the web recorder with the recording label &quot;recording&quot; and with a zero downloadPermittedWindowMs so that playback is not allowed."/>
        <loadStimulus eventTag="RecorderNoDownloadTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <startAudioRecorderWeb featureText="recording" downloadPermittedWindowMs="0" deviceRegex="" mediaId="recordedMedia">
                    <onError>
                        <htmlText featureText="startAudioRecorder onError"/>
                    </onError>
                    <onSuccess>
                        <htmlText featureText="startAudioRecorder onSuccess"/>
                    </onSuccess>
                    <mediaLoaded>
                        <plainText featureText="AudioRecordingLoaded"/>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <plainText featureText="AudioRecordingLoadFailed"/>
                    </mediaLoadFailed>
                    <mediaPlaybackStarted>
                        <plainText featureText="mediaPlaybackStarted"/>
                    </mediaPlaybackStarted>
                    <mediaPlaybackComplete>
                        <plainText featureText="AudioRecordingPlaybackComplete"/>
                    </mediaPlaybackComplete>
                </startAudioRecorderWeb>
                <actionButton featureText="stopAudioRecorder">
                    <stopAudioRecorder/>
                </actionButton>
                <actionButton featureText="nextStimulus">
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <stopAudioRecorder/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="RecorderNoDownloadTest"/>
                    <gotoPresenter target="RecorderNoDownloadTest"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>media</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="RecorderTimeStampTest" next="Menu" type="stimulus" self="RecorderTimeStampTest" title="RecorderTimeStampTest">
        <htmlText featureText="This example shows how to pause a web recording and restart it. The example also shows how to record a time stamp of the recorings current length."/>
        <loadStimulus eventTag="RecorderTimeStampTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia">
                    <onError>
                        <htmlText featureText="startAudioRecorder onError"/>
                    </onError>
                    <onSuccess>
                        <htmlText featureText="startAudioRecorder onSuccess"/>
                    </onSuccess>
                    <mediaLoaded>
                        <plainText featureText="AudioRecordingLoaded"/>
                        <actionButton featureText="nextStimulus">
                            <nextStimulus repeatIncorrect="false"/>
                        </actionButton>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <plainText featureText="AudioRecordingLoadFailed"/>
                    </mediaLoadFailed>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <plainText featureText="AudioRecordingPlaybackComplete"/>
                    </mediaPlaybackComplete>
                </startAudioRecorderWeb>
                <actionButton featureText="logMediaTimeStamp">
                    <logMediaTimeStamp eventTag="logMediaTimeStamp" mediaId="recordedMedia"/>
                </actionButton>
                <actionButton featureText="resume recorder">
                    <playMedia mediaId="recordedMedia"/>
                </actionButton>
                <actionButton featureText="pauseMedia">
                    <pauseMedia mediaId="recordedMedia"/>
                </actionButton>
                <actionButton featureText="stopAudioRecorder">
                    <stopAudioRecorder/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <stopAudioRecorder/>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="RecorderNoiseEchoGainTest" next="Menu" type="stimulus" self="RecorderNoiseEchoGainTest" title="Recorder NoiseSuppression EchoCancellation AutoGainControl Test">
        <htmlText featureText="This example shows how to use the NoiseSuppression EchoCancellation AutoGainControl controls in the web based audio recorder." />
        <loadStimulus eventTag="RecorderTimeStampTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <stimulusLabel styleName="stimuliLabel" />
                <addPadding />
                <actionButton featureText="record with noiseSuppression on">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia" noiseSuppression="true" echoCancellation="false" autoGainControl="false">
                        <onError>
                            <htmlText featureText="startAudioRecorder onError" />
                        </onError>
                        <onSuccess>
                            <htmlText featureText="startAudioRecorder onSuccess" />
                        </onSuccess>
                        <mediaLoaded>
                            <plainText featureText="AudioRecordingLoaded" />
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <plainText featureText="AudioRecordingLoadFailed" />
                        </mediaLoadFailed>
                        <mediaPlaybackStarted />
                        <mediaPlaybackComplete>
                            <plainText featureText="AudioRecordingPlaybackComplete" />
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton featureText="record with echoCancellation on">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia" noiseSuppression="false" echoCancellation="true" autoGainControl="false">
                        <onError>
                            <htmlText featureText="startAudioRecorder onError" />
                        </onError>
                        <onSuccess>
                            <htmlText featureText="startAudioRecorder onSuccess" />
                        </onSuccess>
                        <mediaLoaded>
                            <plainText featureText="AudioRecordingLoaded" />
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <plainText featureText="AudioRecordingLoadFailed" />
                        </mediaLoadFailed>
                        <mediaPlaybackStarted />
                        <mediaPlaybackComplete>
                            <plainText featureText="AudioRecordingPlaybackComplete" />
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton featureText="record with autoGainControl on">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia" noiseSuppression="false" echoCancellation="false" autoGainControl="true">
                        <onError>
                            <htmlText featureText="startAudioRecorder onError" />
                        </onError>
                        <onSuccess>
                            <htmlText featureText="startAudioRecorder onSuccess" />
                        </onSuccess>
                        <mediaLoaded>
                            <plainText featureText="AudioRecordingLoaded" />
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <plainText featureText="AudioRecordingLoadFailed" />
                        </mediaLoadFailed>
                        <mediaPlaybackStarted />
                        <mediaPlaybackComplete>
                            <plainText featureText="AudioRecordingPlaybackComplete" />
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton featureText="record with noiseSuppression and echoCancellation and autoGainControl on">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia" noiseSuppression="true" echoCancellation="true" autoGainControl="true">
                        <onError>
                            <htmlText featureText="startAudioRecorder onError" />
                        </onError>
                        <onSuccess>
                            <htmlText featureText="startAudioRecorder onSuccess" />
                        </onSuccess>
                        <mediaLoaded>
                            <plainText featureText="AudioRecordingLoaded" />
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <plainText featureText="AudioRecordingLoadFailed" />
                        </mediaLoadFailed>
                        <mediaPlaybackStarted />
                        <mediaPlaybackComplete>
                            <plainText featureText="AudioRecordingPlaybackComplete" />
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton featureText="record with noiseSuppression and echoCancellation and autoGainControl off">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMedia" noiseSuppression="false" echoCancellation="false" autoGainControl="false">
                        <onError>
                            <htmlText featureText="startAudioRecorder onError" />
                        </onError>
                        <onSuccess>
                            <htmlText featureText="startAudioRecorder onSuccess" />
                        </onSuccess>
                        <mediaLoaded>
                            <plainText featureText="AudioRecordingLoaded" />
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <plainText featureText="AudioRecordingLoadFailed" />
                        </mediaLoadFailed>
                        <mediaPlaybackStarted />
                        <mediaPlaybackComplete>
                            <plainText featureText="AudioRecordingPlaybackComplete" />
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </actionButton>
                <actionButton featureText="logMediaTimeStamp">
                    <logMediaTimeStamp eventTag="logMediaTimeStamp" mediaId="recordedMedia" />
                </actionButton>
                <actionButton featureText="resume recorder">
                    <playMedia mediaId="recordedMedia" />
                </actionButton>
                <actionButton featureText="pauseMedia">
                    <pauseMedia mediaId="recordedMedia" />
                </actionButton>
                <actionButton featureText="stopAudioRecorder">
                    <stopAudioRecorder />
                </actionButton>
                <actionButton featureText="nextStimulus">
                    <nextStimulus repeatIncorrect="false" />
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <stopAudioRecorder />
            </endOfStimulus>
            <randomGrouping />
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Terug" type="text" self="Third_Informatie" title="Third Informatie">
        <htmlText featureText="Instructies Deel 3: &lt;br/&gt;&lt;br/&gt;"/>
        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="Third"/>
    </presenter>
    <presenter back="Menu" menuLabel="Third" next="completion" type="stimulus" self="Third" title="Third">
        <loadStimulus eventTag="Third" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <stimulusFreeText featureText="Vul minimal 1 letter." styleName="stimuliLabel" validationRegex=".{1,}" inputErrorMessage="Sorry, dit teken is niet toegestaan."/>
                <actionButton featureText="Volgende [tab + enter]">
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <gotoNextPresenter/>
            </endOfStimulus>
            <randomGrouping storageField="item">
                <tag>thirdexample</tag>
            </randomGrouping>
            <stimuli>
                <tag>Third</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Media Playback Demo" type="stimulus" self="Media_Playback_Demo" title="Media Playback Demo">
        <loadStimulus eventTag="Third" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <stimulusLabel styleName="stimuliLabel"/>
                <addPadding/>
                <stimulusFreeText featureText="Vul minimal 1 letter." styleName="stimuliLabel" validationRegex=".{1,}" inputErrorMessage="Sorry, dit teken is niet toegestaan."/>
                <stimulusImage msToNext="60" styleName="styleName" dataChannel="2">
                    <mediaLoaded>
                        <regionReplace regionId="stimulusImage1">
                            <plainText featureText="stimulusImageLoaded"/>
                        </regionReplace>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <regionReplace regionId="stimulusImage1">
                            <plainText featureText="stimulusImageFailed"/>
                        </regionReplace>
                    </mediaLoadFailed>
                </stimulusImage>
                <regionAppend regionId="stimulusImage1"></regionAppend>
                <!-- <stimulusImageCapture featureText="stimulusImageCapture" msToNext="60" maxHeight="60" percentOfPage="56" maxWidth="60">
                 <plainText featureText="plainText in stimulusImageCapture"/>
                </stimulusImageCapture>-->
                <table>
                    <row>
                        <column>
                            <actionButton featureText="StartRecorderA(USB)">
                                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="(046d:0a45)" mediaId="recordedMediaA">
                                    <onError>
                                        <regionReplace regionId="recordedMediaResultA">
                                            <plainText featureText="Error"/>
                                        </regionReplace>
                                    </onError>
                                    <onSuccess>
                                        <regionReplace regionId="recordedMediaResultA">
                                            <plainText featureText="Success"/>
                                        </regionReplace>
                                    </onSuccess>
                                    <mediaLoaded>
                                        <regionReplace regionId="recordedMediaResultA">
                                            <plainText featureText="AudioRecordingLoaded"/>
                                        </regionReplace>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <regionReplace regionId="recordedMediaResultA">
                                            <plainText featureText="AudioRecordingLoadFailed"/>
                                        </regionReplace>
                                    </mediaLoadFailed>
                                    <mediaPlaybackStarted>
                                        <clearTimer listenerId="timerMediaRegionA"/>
                                        <startTimer msToNext="0" listenerId="timerMediaRegionA"/>
                                    </mediaPlaybackStarted>
                                    <mediaPlaybackComplete>
                                        <regionReplace regionId="recordedMediaResultA">
                                            <plainText featureText="AudioRecordingPlaybackComplete"/>
                                        </regionReplace>
                                        <htmlTokenText featureText="timerMediaRegionA &lt;timerMediaRegionA&gt;ms"/>
                                    </mediaPlaybackComplete>
                                </startAudioRecorderWeb>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="playRecordedA">
                                <playMedia mediaId="recordedMediaA"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindRecordedA">
                                <rewindMedia mediaId="recordedMediaA"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseRecordedA">
                                <pauseMedia mediaId="recordedMediaA"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="recordedMediaResultA"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <actionButton featureText="StartRecorderB(any)">
                                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMediaB">
                                    <onError>
                                        <regionReplace regionId="recordedMediaResultB">
                                            <plainText featureText="Error"/>
                                        </regionReplace>
                                    </onError>
                                    <onSuccess>
                                        <regionReplace regionId="recordedMediaResultB">
                                            <plainText featureText="Success"/>
                                        </regionReplace>
                                    </onSuccess>
                                    <mediaLoaded>
                                        <regionReplace regionId="recordedMediaResultB">
                                            <plainText featureText="AudioRecordingLoaded"/>
                                        </regionReplace>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <regionReplace regionId="recordedMediaResultB">
                                            <plainText featureText="AudioRecordingLoadFailed"/>
                                        </regionReplace>
                                    </mediaLoadFailed>
                                    <mediaPlaybackStarted>
                                        <clearTimer listenerId="timerMediaRegionB"/>
                                        <startTimer msToNext="0" listenerId="timerMediaRegionB"/>
                                    </mediaPlaybackStarted>
                                    <mediaPlaybackComplete>
                                        <regionReplace regionId="recordedMediaResultB">
                                            <plainText featureText="AudioRecordingPlaybackComplete"/>
                                        </regionReplace>
                                        <htmlTokenText featureText="timerMediaRegionB &lt;timerMediaRegionB&gt;ms"/>
                                    </mediaPlaybackComplete>
                                </startAudioRecorderWeb>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="playRecordedB">
                                <playMedia mediaId="recordedMediaB"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindRecordedB">
                                <rewindMedia mediaId="recordedMediaB"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseRecordedB">
                                <pauseMedia mediaId="recordedMediaB"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="recordedMediaResultB"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <actionButton featureText="StartRecorderC(any)">
                                <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="" mediaId="recordedMediaC">
                                    <onError>
                                        <regionReplace regionId="recordedMediaResultC">
                                            <plainText featureText="Error"/>
                                        </regionReplace>
                                    </onError>
                                    <onSuccess>
                                        <regionReplace regionId="recordedMediaResultC">
                                            <plainText featureText="Success"/>
                                        </regionReplace>
                                    </onSuccess>
                                    <mediaLoaded>
                                        <regionReplace regionId="recordedMediaResultC">
                                            <plainText featureText="AudioRecordingLoaded"/>
                                        </regionReplace>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <regionReplace regionId="recordedMediaResultC">
                                            <plainText featureText="AudioRecordingLoadFailed"/>
                                        </regionReplace>
                                    </mediaLoadFailed>
                                    <mediaPlaybackStarted>
                                        <clearTimer listenerId="timerMediaRegionC"/>
                                        <startTimer msToNext="0" listenerId="timerMediaRegionC"/>
                                    </mediaPlaybackStarted>
                                    <mediaPlaybackComplete>
                                        <regionReplace regionId="recordedMediaResultC">
                                            <plainText featureText="AudioRecordingPlaybackComplete"/>
                                        </regionReplace>
                                        <htmlTokenText featureText="timerMediaRegionC &lt;timerMediaRegionC&gt;ms"/>
                                    </mediaPlaybackComplete>
                                </startAudioRecorderWeb>
                            </actionButton>
                        </column> 
                        <column>
                            <actionButton featureText="playRecordedC">
                                <playMedia mediaId="recordedMediaC"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindRecordedC">
                                <rewindMedia mediaId="recordedMediaC"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseRecordedC">
                                <pauseMedia mediaId="recordedMediaC"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="recordedMediaResultC"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <actionButton featureText="stopAudioRecorder">
                                <regionReplace regionId="stopAudioRecorder">
                                    <stopAudioRecorder/>
                                </regionReplace>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="StopRecorder"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusVideo loop="false" styleName="smallVideo" dataChannel="2" autoPlay="false" mediaId="mediaId1" showControls="true">
                                <mediaLoaded>
                                    <regionReplace regionId="mediaRegion1">
                                        <plainText featureText="mediaId1 stimulusVideoLoaded"/>
                                    </regionReplace>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <regionReplace regionId="mediaRegion1">
                                        <plainText featureText="mediaId1 stimulusVideoFailed"/>
                                    </regionReplace>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <clearTimer listenerId="timerMediaRegion1"/>
                                    <startTimer msToNext="0" listenerId="timerMediaRegion1"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <regionReplace regionId="mediaRegion1">
                                        <plainText featureText="mediaId1 stimulusVideoComplete"/>
                                    </regionReplace>
                                    <htmlTokenText featureText="timerMediaRegion1 &lt;timerMediaRegion1&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusVideo>
                        </column>
                        <column>
                            <actionButton featureText="playMedia 1">
                                <playMedia mediaId="mediaId1"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindMedia 1">
                                <rewindMedia mediaId="mediaId1"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseMedia 1">
                                <pauseMedia mediaId="mediaId1"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="mediaRegion1"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusCodeVideo maxHeight="60" codeFormat="&lt;code&gt;" percentOfPage="56" loop="false" styleName="smallVideo" dataChannel="2" autoPlay="false" mediaId="mediaId2" showControls="true" maxWidth="60">
                                <mediaLoaded>
                                    <regionReplace regionId="mediaRegion2">
                                        <plainText featureText="mediaId2 stimulusCodeVideoLoaded"/>
                                    </regionReplace>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <regionReplace regionId="mediaRegion2">
                                        <plainText featureText="mediaId2 stimulusCodeVideoFailed"/>
                                    </regionReplace>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <clearTimer listenerId="timerMediaRegion2"/>
                                    <startTimer msToNext="0" listenerId="timerMediaRegion2"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <regionReplace regionId="mediaRegion2">
                                        <plainText featureText="mediaId2 stimulusCodeVideoComplete"/>
                                    </regionReplace>
                                    <htmlTokenText featureText="timerMediaRegion2 &lt;timerMediaRegion2&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusCodeVideo>
                        </column>
                        <column>
                            <actionButton featureText="playMedia 2">
                                <playMedia mediaId="mediaId2"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindMedia 2">
                                <rewindMedia mediaId="mediaId2"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseMedia 2">
                                <pauseMedia mediaId="mediaId2"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="mediaRegion2"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusCodeAudio codeFormat="&lt;code&gt;" dataChannel="2" autoPlay="false" mediaId="mediaId3" showPlaybackIndicator="true">
                                <mediaLoaded>
                                    <regionReplace regionId="mediaRegion3">
                                        <plainText featureText="mediaId3 stimulusCodeAudioLoaded"/>
                                    </regionReplace>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <regionReplace regionId="mediaRegion3">
                                        <plainText featureText="mediaId3 stimulusCodeAudioFailed"/>
                                    </regionReplace>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <clearTimer listenerId="timerMediaRegion3"/>
                                    <startTimer msToNext="0" listenerId="timerMediaRegion3"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <regionReplace regionId="mediaRegion3">
                                        <plainText featureText="mediaId3 stimulusCodeAudioComplete"/>
                                    </regionReplace>
                                    <htmlTokenText featureText="timerMediaRegion3 &lt;timerMediaRegion3&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusCodeAudio>
                        </column>
                        <column>
                            <actionButton featureText="playMedia 3">
                                <playMedia mediaId="mediaId3"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindMedia 3">
                                <rewindMedia mediaId="mediaId3"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseMedia 3">
                                <pauseMedia mediaId="mediaId3"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="mediaRegion3"></regionAppend>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusAudio dataChannel="2" autoPlay="false" mediaId="mediaId4" showPlaybackIndicator="true">
                                <mediaLoaded>
                                    <regionReplace regionId="mediaRegion4">
                                        <plainText featureText="mediaId4 stimulusAudioLoaded"/>
                                    </regionReplace>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <regionReplace regionId="mediaRegion4">
                                        <plainText featureText="mediaId4 stimulusAudioFailed"/>
                                    </regionReplace>
                                </mediaLoadFailed>
                                <mediaPlaybackStarted>
                                    <clearTimer listenerId="timerMediaRegion4"/>
                                    <startTimer msToNext="0" listenerId="timerMediaRegion4"/>
                                </mediaPlaybackStarted>
                                <mediaPlaybackComplete>
                                    <regionReplace regionId="mediaRegion4">
                                        <plainText featureText="mediaId4 stimulusAudioComplete"/>
                                    </regionReplace>
                                    <htmlTokenText featureText="timerMediaRegion4 &lt;timerMediaRegion4&gt;ms"/>
                                </mediaPlaybackComplete>
                            </stimulusAudio>
                        </column>
                        <column>
                            <actionButton featureText="playMedia 4">
                                <playMedia mediaId="mediaId4"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="rewindMedia 4">
                                <rewindMedia mediaId="mediaId4"/>
                            </actionButton>
                        </column>
                        <column>
                            <actionButton featureText="pauseMedia 4">
                                <pauseMedia mediaId="mediaId4"/>
                            </actionButton>
                        </column>
                        <column>
                            <regionAppend regionId="mediaRegion4"></regionAppend>
                        </column>
                    </row>
                </table>
                <actionButton featureText="Volgende [tab + enter]">
                    <nextStimulus repeatIncorrect="false"/>
                </actionButton>
            </hasMoreStimulus>
            <endOfStimulus>
                <gotoNextPresenter/>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>media</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="USB LP310" type="stimulus" self="USB_LP310" title="USB LP310 laser pointer remote">
        <htmlText featureText="USB LP310 laser pointer remote test page&lt;br/&gt;"/>
        <actionButton featureText="LP310_UP" hotKey="LP310_UP">
            <htmlText featureText="LP310_UP&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_UP_LONG_A" hotKey="LP310_UP_LONG_A">
            <htmlText featureText="LP310_UP_LONG_A&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_UP_LONG_B" hotKey="LP310_UP_LONG_B">
            <htmlText featureText="LP310_UP_LONG_B&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_DOWN" hotKey="LP310_DOWN">
            <htmlText featureText="LP310_DOWN&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_DOWN_LONG" hotKey="LP310_DOWN_LONG">
            <htmlText featureText="LP310_DOWN_LONG&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_MIDDLE" hotKey="LP310_MIDDLE">
            <htmlText featureText="LP310_MIDDLE&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_MIDDLE_LONG" hotKey="LP310_MIDDLE_LONG">
            <htmlText featureText="LP310_MIDDLE_LONG&lt;br/&gt;"/>
        </actionButton>
        <actionButton featureText="LP310_MIDDLE_DOUBLE" hotKey="LP310_MIDDLE_DOUBLE">
            <htmlText featureText="LP310_MIDDLE_DOUBLE&lt;br/&gt;"/>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Bluetooth R1" type="stimulus" self="Bluetooth_R1" title="Bluetooth remote R1">
        <htmlText featureText="Bluetooth remote R1 test page&lt;br/&gt;"/>
        <!-- the region is used here only to provide a nice border around the button groups with the menuTable style -->
        <regionAppend regionId="regionIdMA" styleName="menuTable">
            <htmlText featureText="Bluetooth remote R1 with mode M+A&lt;br/&gt;"/>
            <actionButton featureText="R1_MA_A" hotKey="R1_MA_A">
                <htmlText featureText="R1_MA_A&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MA_ENTER" hotKey="R1_MA_ENTER">
                <htmlText featureText="R1_MA_ENTER&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MA_LEFT" hotKey="R1_MA_LEFT">
                <htmlText featureText="R1_MA_LEFT&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MA_RIGHT" hotKey="R1_MA_RIGHT">
                <htmlText featureText="R1_MA_RIGHT&lt;br/&gt;"/>
            </actionButton>
        </regionAppend>
        <regionAppend regionId="regionIdMB" styleName="menuTable">
            <htmlText featureText="Bluetooth remote R1 with mode M+B&lt;br/&gt;"/>
            <actionButton featureText="R1_MB_A" hotKey="R1_MB_A">
                <htmlText featureText="R1_MB_A&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MB_B" hotKey="R1_MB_B">
                <htmlText featureText="R1_MB_B&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MB_C" hotKey="R1_MB_C">
                <htmlText featureText="R1_MB_C&lt;br/&gt;"/>
            </actionButton>
        </regionAppend>
        <regionAppend regionId="regionIdMC" styleName="menuTable">
            <htmlText featureText="Bluetooth remote R1 with mode M+C&lt;br/&gt;"/>
            <actionButton featureText="R1_MC_B" hotKey="R1_MC_B">
                <htmlText featureText="R1_MC_B&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MC_C" hotKey="R1_MC_C">
                <htmlText featureText="R1_MC_C&lt;br/&gt;"/>
            </actionButton>
            <actionButton featureText="R1_MC_D" hotKey="R1_MC_D">
                <htmlText featureText="R1_MC_D&lt;br/&gt;"/>
            </actionButton>
        </regionAppend>
        <regionAppend regionId="regionIdMD" styleName="menuTable">
            <htmlText featureText="Bluetooth remote R1 with mode M+D&lt;br/&gt;"/>
            <actionButton featureText="R1_MD_A" hotKey="R1_MD_A">
                <htmlText featureText="R1_MD_A&lt;br/&gt;"/>
            </actionButton>
        </regionAppend>
    </presenter>
    <presenter menuLabel="showOnBackButton" type="stimulus" self="showOnBackButton" title="showOnBackButton">
        <loadStimulus eventTag="RecorderPauseTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText="This demonstration screen requires the preserveLastState=false in the Experiment element.&lt;br/&gt;"/>
                <htmlText featureText="Keys to navigate the stimuli are p, r, n and m.&lt;br/&gt;"/>
                <stimulusLabel styleName="stimuliLabel"/>
                <table showOnBackButton="true" styleName="titleBarButton">
                    <row>
                        <column styleName="">
                            <actionButton featureText="TestMenu (m)" hotKey="M" styleName="">
                                <touchInputReportSubmit dataChannel="3"/>
                                <gotoPresenter target="Menu"/>
                            </actionButton>
                        </column>
                        <column styleName="">
                            <actionButton featureText="Prev (p)" hotKey="P" styleName="">
                                <touchInputReportSubmit dataChannel="3"/>
                                <prevStimulus repeatIncorrect="false"/>
                            </actionButton>
                        </column>
                        <column styleName="">
                            <actionButton featureText="Repeat (r)" hotKey="R" styleName="">
                                <touchInputReportSubmit dataChannel="3"/>
                                <showStimulus/>
                            </actionButton>
                        </column>
                        <column styleName="">
                            <actionButton featureText="Next (n)" hotKey="N" styleName="">
                                <touchInputReportSubmit dataChannel="3"/>
                                <nextStimulus repeatIncorrect="false"/>
                            </actionButton>
                        </column>
                    </row>
                </table>
                <targetButton featureText="Menu" target="Menu"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="showOnBackButton"/>
                    <gotoPresenter target="showOnBackButton"/>
                </actionButton>
                <targetButton featureText="Menu" target="Menu"/>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="AppendStimulusResponse" type="stimulus" self="AppendStimulusResponse" title="AppendStimulusResponse">
        <loadStimulus eventTag="RecorderPauseTest" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText=".&lt;br/&gt;"/>
                <htmlText featureText=".&lt;br/&gt;"/>
                <htmlTokenText featureText="playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                "/>
                <stimulusLabel styleName="stimuliLabel"/>
                <regionAppend regionId="square1">
                    <htmlText featureText=".&lt;br/&gt;"/>
                </regionAppend>
                <regionAppend regionId="square2">
                    <htmlText featureText=".&lt;br/&gt;"/>
                </regionAppend>
                <regionAppend regionId="square3">
                    <htmlText featureText=".&lt;br/&gt;"/>
                </regionAppend>
                <regionAppend regionId="square4">
                    <htmlText featureText=".&lt;br/&gt;"/>
                </regionAppend>
                <setStimulusCodeResponse codeFormat="" dataChannel="8" applyScore="false"/>
                <regionCodeStyle regionId="square1" styleName="box_&lt;code&gt;_1_white"/>
                <regionCodeStyle regionId="square2" styleName="box_&lt;code&gt;_2_white"/>
                <regionCodeStyle regionId="square3" styleName="box_&lt;code&gt;_3_white"/>
                <regionCodeStyle regionId="square4" styleName="box_&lt;code&gt;_4_white"/>
                <pause msToNext="1000">
                    <regionCodeStyle regionId="square1" styleName="box_&lt;code&gt;_1_black"/>
                    <pause msToNext="1000">
                        <regionCodeStyle regionId="square1" styleName="box_&lt;code&gt;_1_white"/>
                        <regionCodeStyle regionId="square2" styleName="box_&lt;code&gt;_2_black"/>
                        <pause msToNext="1000">
                            <regionCodeStyle regionId="square2" styleName="box_&lt;code&gt;_2_white"/>
                            <regionCodeStyle regionId="square3" styleName="box_&lt;code&gt;_3_black"/>
                            <pause msToNext="1000">
                                <regionCodeStyle regionId="square3" styleName="box_&lt;code&gt;_3_white"/>
                                <regionCodeStyle regionId="square4" styleName="box_&lt;code&gt;_4_black"/>
                                <pause msToNext="1000">
                                    <regionCodeStyle regionId="square3" styleName="box_&lt;code&gt;_4_white"/>
                                    <regionReplace regionId="square1">
                                        <actionButton featureText="1" styleName="buttonStyle">
                                            <setStimulusCodeResponse codeFormat="&lt;stimulusResponse&gt;1" dataChannel="8" applyScore="false"/>
                                        </actionButton>
                                    </regionReplace>
                                    <regionReplace regionId="square2">
                                        <actionButton featureText="2" styleName="buttonStyle">
                                            <setStimulusCodeResponse codeFormat="&lt;stimulusResponse&gt;2" dataChannel="8" applyScore="false"/>
                                        </actionButton>
                                    </regionReplace>
                                    <regionReplace regionId="square3">
                                        <actionButton featureText="3" styleName="buttonStyle">
                                            <setStimulusCodeResponse codeFormat="&lt;stimulusResponse&gt;3" dataChannel="8" applyScore="false"/>
                                        </actionButton>
                                    </regionReplace>
                                    <regionReplace regionId="square4">
                                        <actionButton featureText="4" styleName="buttonStyle">
                                            <setStimulusCodeResponse codeFormat="&lt;stimulusResponse&gt;4" dataChannel="8" applyScore="false"/>
                                        </actionButton>
                                    </regionReplace>
                                    <regionCodeStyle regionId="square1" styleName="box_&lt;code&gt;_1_white"/>
                                    <regionCodeStyle regionId="square2" styleName="box_&lt;code&gt;_2_white"/>
                                    <regionCodeStyle regionId="square3" styleName="box_&lt;code&gt;_3_white"/>
                                    <regionCodeStyle regionId="square4" styleName="box_&lt;code&gt;_4_white"/>
                                    <actionButton featureText="Next [TAB + ENTER]" hotKey="ENTER">
                                        <setStimulusCodeResponse codeFormat="&lt;stimulusResponse&gt;" dataChannel="8" applyScore="true"/>
                                        <nextStimulus repeatIncorrect="false"/>
                                    </actionButton>
                                </pause>
                            </pause>
                        </pause>
                    </pause>
                </pause>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="AppendStimulusResponse"/>
                    <gotoPresenter target="AppendStimulusResponse"/>
                </actionButton>
                <targetButton featureText="Menu" target="Menu"/>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>boxes</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="enter in the text box" type="stimulus" self="enter_in_the_text_box" title="enter in the text box">
        <loadStimulus eventTag="enter_in_the_text_box" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText="This demonstration screen allows the user to press enter in the text box to go to the next stimulus.&lt;br/&gt;"/>
                <htmlText featureText="In this example at least two letters and only the wetuiopasfghknm letters can be typed.&lt;br/&gt;"/>
                <stimulusLabel styleName="stimuliLabel"/>
                <stimulusFreeText featureText="Sorry, dit teken is niet toegestaan in de Fantasietaal." hotKey="ENTER" allowedCharCodes="wetuiopasfghknm " styleName="minimalWidth" validationRegex="[wetuiopasfghknm ]{2,}" inputErrorMessage=" "/>
                <nextStimulusButton featureText="Next [ENTER]" eventTag="Next" hotKey="ENTER" repeatIncorrect="false"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="showOnBackButton"/>
                    <gotoPresenter target="showOnBackButton"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="stimulusCodeImageButton" type="stimulus" self="stimulusCodeImageButton" title="stimulusCodeImageButton">
        <loadStimulus eventTag="stimulusCodeImageButton" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText="This demonstration screen provides an example usage of the stimulusCodeImageButton.&lt;br/&gt;"/>
                <stimulusCodeImageButton codeFormat="&lt;code&gt;.jpg" dataChannel="8"  styleName="stimulusImageButton">
                    <mediaLoaded>
                        <htmlText featureText="mediaLoaded"/>
                    </mediaLoaded>
                    <mediaLoadFailed>
                        <htmlText featureText="mediaLoadFailed"/>
                    </mediaLoadFailed>
                    <onActivate>
                        <htmlText featureText="onActivate"/>
                    </onActivate>
                </stimulusCodeImageButton>
                <nextStimulusButton featureText="Next [ENTER]" eventTag="Next" hotKey="ENTER" repeatIncorrect="false"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="stimulusCodeImageButton"/>
                    <gotoPresenter target="stimulusCodeImageButton"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>media</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Stimulus Has Response" type="stimulus" self="stimulus_has_response" title="Stimulus Has Response">
        <table styleName="menuTable">
            <withStimuli eventTag="stimulus_has_response" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
                <beforeStimulus>
                    <plainText featureText="This example shows a few ways to test if a stimulus has response."/>
                </beforeStimulus>
                <eachStimulus>
                    <row>
                        <column styleName="menuTable">
                            <regionReplace regionId="stimulus_button_region_&lt;code&gt;"/>
                            <ratingButton dataChannel="1" groupId="rating_button" ratingLabelRight="" ratingLabels="zin compleet,zin onvolledig" ratingLabelLeft="">
                                <triggerMatching listenerId="stimulus_trigger_&lt;code&gt;"/>
                            </ratingButton>
                            <regionReplace regionId="stimulus_check_region_&lt;code&gt;"/>
                            <ratingCheckbox dataChannel="1" groupId="rating_check" ratingLabelRight="" ratingLabels="zin compleet,zin onvolledig" ratingLabelLeft="">
                                <triggerMatching listenerId="stimulus_trigger_&lt;code&gt;"/>
                            </ratingCheckbox>
                            <regionReplace regionId="stimulus_radio_region_&lt;code&gt;"/>
                            <ratingRadioButton dataChannel="1" groupId="rating_radio_button" ratingLabelRight="" ratingLabels="zin compleet,zin onvolledig" ratingLabelLeft="">
                                <triggerMatching listenerId="stimulus_trigger_&lt;code&gt;"/>
                            </ratingRadioButton>
                        </column>    
                    </row>
                    <triggerDefinition listenerId="stimulus_trigger_&lt;code&gt;" threshold="0" maximum="0">
                        <regionReplace regionId="stimulus_button_region_&lt;code&gt;">
                            <stimulusHasResponse matchingRegex="">
                                <conditionTrue>
                                    <plainText featureText="This stimulus has one or more responses."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have any response."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                            <stimulusHasResponse groupId="rating_button" matchingRegex="zin compleet">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the button response zin compleet."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the button response zin compleet."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                            <stimulusHasResponse groupId="rating_button" matchingRegex="zin onvolledig">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the response button zin onvolledig."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the button response zin onvolledig."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                        </regionReplace>
                        <regionReplace regionId="stimulus_check_region_&lt;code&gt;">
                            <stimulusHasResponse groupId="rating_check" matchingRegex=".*zin compleet.*">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the checkbox response zin compleet."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the checkbox response zin compleet."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                            <stimulusHasResponse groupId="rating_check" matchingRegex=".*zin onvolledig.*">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the checkbox response zin onvolledig."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the checkbox response zin onvolledig."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                        </regionReplace>
                        <regionReplace regionId="stimulus_radio_region_&lt;code&gt;">
                            <stimulusHasResponse groupId="rating_radio_button" matchingRegex="zin compleet">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the radio button response zin compleet."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the radio button response zin compleet."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                            <stimulusHasResponse groupId="rating_radio_button" matchingRegex="zin onvolledig">	
                                <conditionTrue>
                                    <plainText featureText="This stimulus has the radio button response zin onvolledig."/>
                                </conditionTrue>
                                <conditionFalse>
                                    <plainText featureText="This stimulus does not have the radio button response zin onvolledig."/>
                                </conditionFalse>
                            </stimulusHasResponse>
                        </regionReplace>
                    </triggerDefinition>
                    <triggerMatching listenerId="stimulus_trigger_&lt;code&gt;"/>
                </eachStimulus>
                <afterStimulus>
                    <actionButton featureText="clearStimulusResponses and reaload">
                        <clearStimulusResponses tags="First_Stimuli_Screen"/>
                        <!--<triggerMatching listenerId="stimulus_trigger_.*"/>-->
                        <gotoPresenter target="stimulus_has_response"/>
                    </actionButton>
                    <targetButton featureText="Reload" target="stimulus_has_response"/>
                </afterStimulus>
                <randomGrouping/>
                <stimuli>
                    <tag>First_Stimuli_Screen</tag>
                </stimuli>
            </withStimuli>
        </table>
    </presenter>
    <presenter back="Menu" menuLabel="stimulusRatingImageButton" type="stimulus" self="stimulusRatingImageButton" title="stimulusRatingImageButton">
        <loadStimulus eventTag="stimulusRatingImageButton" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText="This demonstration screen provides an example usage of the stimulus rating labels to show rating images.&lt;br/&gt;"/>
                <table>
                    <row>
                        <column>
                            <stimulusCodeImage codeFormat="&lt;stimulusRatingLabel_0&gt;.jpg" dataChannel="8" msToNext="0">	
                                <mediaLoaded/>
                                <mediaLoadFailed/>
                            </stimulusCodeImage>
                        </column>
                        <column>
                            <stimulusCodeImage codeFormat="&lt;stimulusRatingLabel_1&gt;.jpg" dataChannel="8" msToNext="0">	
                                <mediaLoaded/>
                                <mediaLoadFailed/>
                            </stimulusCodeImage>
                        </column>
                        <column>
                            <stimulusCodeImage codeFormat="&lt;stimulusRatingLabel_2&gt;.jpg" dataChannel="8" msToNext="0">	
                                <mediaLoaded/>
                                <mediaLoadFailed/>
                            </stimulusCodeImage>
                        </column>
                        <column>
                            <stimulusCodeImage codeFormat="&lt;stimulusRatingLabel_3&gt;.jpg" dataChannel="8" msToNext="0">	
                                <mediaLoaded/>
                                <mediaLoadFailed/>
                            </stimulusCodeImage>
                        </column>
                    </row>
                    <row>
                        <column>
                            <stimulusCodeImageButton codeFormat="&lt;stimulusRatingLabel_0&gt;.jpg" dataChannel="8"  styleName="stimulusImageButton">
                                <mediaLoaded>
                                    <htmlText featureText="mediaLoaded"/>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <htmlText featureText="mediaLoadFailed"/>
                                </mediaLoadFailed>
                                <onActivate>
                                    <htmlText featureText="onActivate"/>
                                </onActivate>
                            </stimulusCodeImageButton>
                        </column>
                        <column>
                            <stimulusCodeImageButton codeFormat="&lt;stimulusRatingLabel_1&gt;.jpg" dataChannel="8"  styleName="stimulusImageButton">
                                <mediaLoaded>
                                    <htmlText featureText="mediaLoaded"/>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <htmlText featureText="mediaLoadFailed"/>
                                </mediaLoadFailed>
                                <onActivate>
                                    <htmlText featureText="onActivate"/>
                                </onActivate>
                            </stimulusCodeImageButton>
                        </column>
                        <column>
                            <stimulusCodeImageButton codeFormat="&lt;stimulusRatingLabel_2&gt;.jpg" dataChannel="8"  styleName="stimulusImageButton">
                                <mediaLoaded>
                                    <htmlText featureText="mediaLoaded"/>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <htmlText featureText="mediaLoadFailed"/>
                                </mediaLoadFailed>
                                <onActivate>
                                    <htmlText featureText="onActivate"/>
                                </onActivate>
                            </stimulusCodeImageButton>
                        </column>
                        <column>
                            <stimulusCodeImageButton codeFormat="&lt;stimulusRatingLabel_3&gt;.jpg" dataChannel="8"  styleName="stimulusImageButton">
                                <mediaLoaded>
                                    <htmlText featureText="mediaLoaded"/>
                                </mediaLoaded>
                                <mediaLoadFailed>
                                    <htmlText featureText="mediaLoadFailed"/>
                                </mediaLoadFailed>
                                <onActivate>
                                    <htmlText featureText="onActivate"/>
                                </onActivate>
                            </stimulusCodeImageButton>
                        </column>
                    </row>
                </table>
                <nextStimulusButton featureText="Next [ENTER]" eventTag="Next" hotKey="ENTER" repeatIncorrect="false"/>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="stimulusRatingImageButton"/>
                    <gotoPresenter target="stimulusRatingImageButton"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>ratingimages</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="if stimulus exists" type="stimulus" self="if_stimulus_exists" title="if stimulus exists">
        <loadStimulus eventTag="if_stimulus_exists" randomise="false" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <htmlText featureText="This demonstration screen shows buttons depending on a given stimulus existing at an offset.&lt;br/&gt;"/>
                <stimulusLabel styleName="stimuliLabel"/>
                <table>
                    <row>
                        <column>
                            <stimulusExists offset="-1">
                                <conditionTrue>
                                    <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                                </conditionTrue>
                                <conditionFalse/>
                            </stimulusExists>
                        </column>
                        <column>
                            <stimulusExists offset="+1">
                                <conditionTrue>
                                    <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                                </conditionTrue>
                                <conditionFalse/>
                            </stimulusExists>
                        </column>
                    </row>
                </table>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="if_stimulus_exists"/>
                    <gotoPresenter target="if_stimulus_exists"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecorderPauseTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Einde van het experiment" next="Toestemming" type="transmission" self="completion" title="Einde van het experiment">
        <generateCompletionCode>
            <onSuccess>
                <htmlText featureText="Dit is het einde van het experiment.&lt;br/&gt;Hartelijk dank voor jouw deelname! &lt;br/&gt;&lt;br/&gt;"/>
                <addPadding/>
                <displayCompletionCode/>
                <addPadding/>
                <htmlText featureText="&lt;br/&gt;Het bovenstaande nummer is het bewijs dat je het experiment heeft voltooid&lt;br/&gt;"/>
                <addPadding/>
                <eraseUsersDataButton featureText="Opnieuw beginnen" target="Toestemming"/>
            </onSuccess>
            <onError>
                <plainText featureText="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw."/>
                <targetButton featureText="Probeer opnieuw" target="completion"/>
            </onError>
        </generateCompletionCode>
    </presenter>
    <presenter back="Menu" menuLabel="InvitationCodeExample" type="stimulus" self="InvitationCodeExample" title="Invitation Code Example">
        <hasMetadataValue fieldName="invitation_code" matchingRegex="...*">
            <conditionTrue>
                <htmlTokenText featureText="
                Your invitation code has been received and is:
                &lt;metadataField_invitation_code&gt;&lt;br/&gt;
                "/>
                <startTimer msToNext="150000" listenerId="invitationTimer"/>
                <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="InvitationCodeExampleStimuliScreen"/>
            </conditionTrue>
            <conditionFalse>
                <htmlText featureText="Your invitation code has not been found or is less that three characters long.&lt;br/&gt;
                Please provide this code as a URL GET parameter (&lt;a href=&quot;?invitation_code=yourcode&quot;&gt;?invitation_code=[yourcode]&lt;/a&gt;) and reload this page."/>
            </conditionFalse>
        </hasMetadataValue>
    </presenter>
    <presenter back="Menu" menuLabel="MatchOnEvalTokensExample" type="stimulus" self="MatchOnEvalTokensExample" title="MatchOnEvalTokensExample">
        <matchOnEvalTokens evaluateTokens="1000 + 222 + 12" matchingRegex="[1-4]{4,4}">
            <conditionTrue>
                <htmlTokenText featureText="matchOnEvalTokens conditionTrue on evaluateTokens=&quot;1000 + 222 + 12&quot; and matchingRegex=&quot;[1-4]{4,4}&quot;"/>
            </conditionTrue>
            <conditionFalse>
                <htmlTokenText featureText="matchOnEvalTokens conditionFalse on evaluateTokens=&quot;1000 + 222 + 12&quot; and matchingRegex=&quot;[1-4]{4,4}&quot;"/>
            </conditionFalse>
            <onError>
                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
            </onError>
        </matchOnEvalTokens>
        <matchOnEvalTokens evaluateTokens="1000 + 222 + 12 == 1234" matchingRegex="true">
            <conditionTrue>
                <htmlTokenText featureText="matchOnEvalTokens conditionTrue on evaluateTokens=&quot;1000 + 222 + 12 == 1234&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionTrue>
            <conditionFalse>
                <htmlTokenText featureText="matchOnEvalTokens conditionFalse on evaluateTokens=&quot;1000 + 222 + 12 == 1234&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionFalse>
            <onError>
                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
            </onError>
        </matchOnEvalTokens>
        <matchOnEvalTokens evaluateTokens="random(21) &lt; 21" matchingRegex="true">
            <conditionTrue>
                <htmlTokenText featureText="matchOnEvalTokens conditionTrue on evaluateTokens=&quot;random(21) &lt; 21&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionTrue>
            <conditionFalse>
                <htmlTokenText featureText="matchOnEvalTokens conditionFalse on evaluateTokens=&quot;random(21) &lt; 21&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionFalse>
            <onError>
                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
            </onError>
        </matchOnEvalTokens>
        <matchOnEvalTokens evaluateTokens="random(21) &gt;= 0" matchingRegex="true">
            <conditionTrue>
                <htmlTokenText featureText="matchOnEvalTokens conditionTrue on evaluateTokens=&quot;random(21) &gt;= 0&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionTrue>
            <conditionFalse>
                <htmlTokenText featureText="matchOnEvalTokens conditionFalse on evaluateTokens=&quot;random(21) &gt;= 0&quot; and matchingRegex=&quot;true&quot;"/>
            </conditionFalse>
            <onError>
                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
            </onError>
        </matchOnEvalTokens>
    </presenter>
    <presenter back="Menu" menuLabel="InvitationSessionStepsExample" type="transmission" self="InvitationSessionStepsExample" title="Invitation Session Steps Example">
        <hasMetadataValue fieldName="validated_uuid" matchingRegex="...*">
            <conditionTrue>
                <htmlText featureText="A &quot;validated_uuid&quot; has been found and it must match the provided &quot;uuid&quot;."/>
                <hasMetadataValue fieldName="uuid" matchingRegex="&lt;metadataField_validated_uuid&gt;">
                    <conditionTrue>
                        <htmlText featureText="The &quot;validated_uuid&quot; does match &quot;uuid&quot; and you can continue."/>
                        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="InvitationCodeExampleStimuliScreen"/>
                    </conditionTrue>
                    <conditionFalse>
                        <htmlText featureText="The &quot;validated_uuid&quot; does NOT match &quot;uuid&quot;."/>
                        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="InvitationCodeExampleInvalid"/>
                        <!--<eraseUsersDataButton featureText="Erase old data" target="InvitationSessionStepsExample"/>-->
                    </conditionFalse>
                </hasMetadataValue>
            </conditionTrue>
            <conditionFalse>
                <htmlTokenText featureText="&lt;metadataField_uuid&gt;"/> 
                <hasGetParameter parameterName="uuid">
                    <conditionTrue>
                        <htmlText featureText="get parameter uuid ok"/>
                        <hasGetParameter parameterName="session_id">
                            <conditionTrue>
                                <htmlText featureText="get parameter session_id ok"/>                        
                                <hasGetParameter parameterName="session_steps">
                                    <conditionTrue>
                                        <htmlText featureText="get parameter session_steps ok"/>
                                        <hasMetadataValue fieldName="uuid" matchingRegex="...*">
                                            <conditionTrue>
                                                <hasMetadataValue fieldName="session_id" matchingRegex="[0-6]">
                                                    <conditionTrue>
                                                        <hasMetadataValue fieldName="session_steps" matchingRegex="audiosimplereactiontime_lilbq4_audioas2_bdsmas_audiononwordmonitoring_grammaras_visualsimplereactiontime">
                                                            <conditionTrue>
                                                                <htmlText featureText="This example takes the list &quot;session_steps&quot; and extracts the next item after &quot;audioas2&quot; from that list which will be &quot;bdsmas&quot;. That value is then placed into the &quot;session_next_step&quot; metadata field."/>
                                                                <!--<htmlText featureText="Assuming the list contains audioas2 we act as if the name of this experiment is audioas2 and using setMetadataValue get the next item which is bdsmas."/>-->
                                                                <htmlText featureText="The resulting value in &quot;session_next_step&quot; will later be used to redirect the user to that next experiment after this one is complete."/>
                                                                <htmlText featureText="We also put the hypothetical name of this experiment &quot;audioas2&quot; into &quot;session_step&quot; for convenience."/>
                                                                <setMetadataValue fieldName="session_step" dataLogFormat="audioas2"/>                                                               
                                                                <setMetadataValue fieldName="session_next_step" replacementRegex="&lt;metadataField_session_step&gt;_([^_]*)[_$]" dataLogFormat="&lt;metadataField_session_steps&gt;"/>
                                                                <!--// if the response uuid does not exist then transmit-->
                                                                <transmitResults sendingRegex="uuid|session_id|session_steps|session_step|session_next_step|validation_error" receivingRegex="validated_uuid|validation_error" dataLogFormat="Is this UUID for this session step valid? Please respond with a 200 if it is and provide either validated_uuid or a variable validation_error if you want a human readable message to be shown. Otherwise a non 200 / error code will just prevent the user proceeding.">
                                                                    <onError>
                                                                        <htmlText featureText="Transmitting the data for this session step failed."/>
                                                                    </onError>
                                                                    <onSuccess>
                                                                        <htmlText featureText="Transmitting the data for this session step ok"/>
                                                                        <hasMetadataValue fieldName="validation_error" matchingRegex=".+">
                                                                            <conditionTrue>
                                                                                <addPadding/>
                                                                                <addPadding/>
                                                                                <htmlTokenText featureText="&lt;metadataField_validation_error&gt;"/>                                                                                
                                                                            </conditionTrue>
                                                                            <conditionFalse>
                                                                                <hasMetadataValue fieldName="uuid" matchingRegex="&lt;metadataField_validated_uuid&gt;">
                                                                                    <conditionTrue>
                                                                                        <htmlText featureText="The the return value validated_uuid from transmitResults matches the provided uuid."/>
                                                                                        <targetButton featureText="volgende [ spatiebalk ]" hotKey="SPACE" target="InvitationCodeExampleStimuliScreen"/>
                                                                                    </conditionTrue>
                                                                                    <conditionFalse>
                                                                                        <htmlText featureText="The the return value validated_uuid from transmitResults does NOT match the provided uuid."/>
                                                                                    </conditionFalse>
                                                                                </hasMetadataValue>
                                                                            </conditionFalse>
                                                                        </hasMetadataValue>
                                                                    </onSuccess>
                                                                </transmitResults>
                                                            </conditionTrue>
                                                            <conditionFalse>
                                                                <htmlText featureText="The session_steps value is incorrect, please provide it exactly as described below and reload this page."/>
                                                                <htmlText featureText="The get parameter session_steps is a _ separated list and should contain the value &quot;audiosimplereactiontime_lilbq4_audioas2_bdsmas_audiononwordmonitoring_grammaras_visualsimplereactiontime&quot;."/>
                                                            </conditionFalse>
                                                        </hasMetadataValue>
                                                    </conditionTrue>
                                                    <conditionFalse>
                                                        <htmlText featureText="session_id must be between 0 - 6.&lt;br/&gt;
                Please provide this as a URL GET parameter and reload this page."/>
                                                    </conditionFalse>
                                                </hasMetadataValue>
                                            </conditionTrue>
                                            <conditionFalse>
                                                <htmlText featureText="uuid has not been found.&lt;br/&gt;
                Please provide this as a URL GET parameter and reload this page."/>
                                            </conditionFalse>
                                        </hasMetadataValue>
                                    </conditionTrue>
                                    <conditionFalse>
                                        <htmlText featureText="get parameter session_steps NOT provided"/>
                                    </conditionFalse>
                                </hasGetParameter>
                            </conditionTrue>
                            <conditionFalse>
                                <htmlText featureText="get parameter session_id NOT provided"/>
                            </conditionFalse>
                        </hasGetParameter>
                    </conditionTrue>
                    <conditionFalse>
                        <htmlText featureText="get parameter uuid NOT provided"/>
                    </conditionFalse>
                </hasGetParameter>
            </conditionFalse>
        </hasMetadataValue>
        <!--<htmlText featureText="Valid get parameters for this screen for example: &quot;?uuid=98dfc59e-f4bf-46c1-8b62-48f12ebe7c29&amp;session_id=6&amp;session_steps=audiosimplereactiontime_lilbq4_audioas2_bdsmas_audiononwordmonitoring_grammaras_visualsimplereactiontime#InvitationSessionStepsExample&quot;.&lt;br/&gt;You can append these GET parameters to the URL and reload this page."/>-->
    </presenter>
    <presenter back="Menu" menuLabel="InvitationCodeExampleStimuliScreen" next="InvitationCodeExampleCompletion" type="stimulus" self="InvitationCodeExampleStimuliScreen" title="InvitationCodeExampleStimuliScreen">
        <startTimer msToNext="150000" listenerId="invitationTimer"/>
        <loadStimulus eventTag="First Stimuli Screen" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <showStimulusProgress/>
                <addPadding/>
                <htmlTokenText featureText="
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;
                Time so far: &lt;invitationTimer&gt;ms"/>
                <addPadding/>
                <stimulusPresent maxHeight="80" percentOfPage="0" showControls="false" maxWidth="80">
                    <mediaLoaded/>
                    <mediaLoadFailed/>
                    <mediaPlaybackStarted/>
                    <mediaPlaybackComplete>
                        <stimulusHasRatingOptions>
                            <conditionTrue>
                                <stimulusRatingButton ratingLabelRight="" dataChannel="1" ratingLabelLeft="">
                                    <nextStimulus repeatIncorrect="false"/>
                                </stimulusRatingButton>
                            </conditionTrue>
                            <conditionFalse>
                                <stimulusFreeText featureText="Entrez au moins trois lettres." validationRegex=".{1,}" inputErrorMessage=" "/>
                                <nextStimulusButton featureText="Next [TAB + ENTER]" eventTag="Next [TAB + ENTER]" hotKey="ENTER" repeatIncorrect="false"/>
                            </conditionFalse>
                        </stimulusHasRatingOptions>
                    </mediaPlaybackComplete>
                </stimulusPresent>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <scoreAboveThreshold scoreThreshold="5">
                    <aboveThreshold>
                        <setMetadataValue fieldName="step_done" dataLogFormat="Y"/>
                        <htmlText featureText="Your efforts have proved adequate."/>
                    </aboveThreshold>
                    <withinThreshold>
                        <htmlText featureText="Your efforts have proved inadequate."/>
                        <setMetadataValue fieldName="step_done" dataLogFormat="N"/>
                    </withinThreshold>
                </scoreAboveThreshold>
                <addPadding/>
                <actionButton featureText="clearCurrentScore">
                    <clearCurrentScore/>
                    <gotoPresenter target="InvitationCodeExampleStimuliScreen"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="InvitationCodeExampleStimuliScreen"/>
                    <gotoPresenter target="InvitationCodeExampleStimuliScreen"/>
                </actionButton>
                <addPadding/>
                <addPadding/>
                <targetButton featureText="transmitResults" target="InvitationCodeExampleCompletion"/>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>Pretest_Screen</tag>
            </stimuli>
        </loadStimulus> 
    </presenter>
    <presenter back="Menu" menuLabel="RedirectToUrlExample" type="transmission" self="RedirectToUrlExample" title="RedirectToUrlExample">
        <htmlText featureText="https://frinexstaging.mpi.nl/with_stimulus_example/?session_next_step=thenextexperiment&amp;validated_uuid=theusersid&amp;session_steps=allthesteps#RedirectToUrlExample"/>
        <setMetadataValue fieldName="session_next_step" dataLogFormat="thenextexperiment"/>
        <setMetadataValue fieldName="validated_uuid" dataLogFormat="theusersid"/>
        <setMetadataValue fieldName="session_steps" dataLogFormat="allthesteps"/>
        <actionButton featureText="redirectToUrl">
            <redirectToUrl src="/&lt;metadataField_session_next_step&gt;?uuid=&lt;metadataField_validated_uuid&gt;&amp;session_steps=&lt;metadataField_session_steps&gt;"/>
        </actionButton>            
        <addPadding/>           
        <actionButton featureText="redirectToStaging">
            <redirectToUrl src="https://frinexstaging.mpi.nl/with_stimulus_example/?uuid=&lt;userId&gt;&amp;invitation_id=&lt;userId&gt;#RedirectToUrlExample"/>
        </actionButton>            
        <addPadding/>             
        <actionButton featureText="redirectToAndroid"> 
            <redirectToUrl src="cdvfile://localhost/assets/www/index.html?uuid=&lt;userId&gt;&amp;invitation_id=&lt;userId&gt;#RedirectToUrlExample"/>
        </actionButton>            
        <actionButton featureText="redirectToElectron"> 
            <redirectToUrl src="http://localhost:5000/index.html?uuid=&lt;userId&gt;&amp;invitation_id=&lt;userId&gt;#RedirectToUrlExample"/>
        </actionButton>
        <htmlTokenText featureText="&lt;a href=&quot;http://localhost:5000/index.html?uuid=&lt;userId&gt;&amp;invitation_id=&lt;userId&gt;#RedirectToUrlExample&quot;&gt;return to electron&lt;/a&gt;"/>
    </presenter>  
    <presenter menuLabel="InvitationCodeExampleCompletion" type="transmission" self="InvitationCodeExampleCompletion" title="Invitation Code Example Completion">
        <generateCompletionCode>
            <onSuccess>  
                <htmlText featureText="The endpoint for this data transmition is set in the listing.json file section for this experiment with the values registrationUrlStaging and registrationUrlProduction."/>
                <transmitResults sendingRegex="uuid|session_id|step_done|session_steps|session_step" receivingRegex="validated_uuid" dataLogFormat="playerScore,playerErrors,playerPotentialScore,playerTotalScore,playerTotalErrors,playerTotalPotentialScore,playerGamesPlayed,invitationTimer\n
                &lt;playerScore&gt;,&lt;playerErrors&gt;,&lt;playerPotentialScore&gt;,&lt;playerTotalScore&gt;,&lt;playerTotalErrors&gt;,&lt;playerTotalPotentialScore&gt;,&lt;playerGamesPlayed&gt;,&lt;invitationTimer&gt;">
                    <onError>
                        <htmlText featureText="Results transmition failed."/>
                    </onError>
                    <onSuccess>
                        <htmlText featureText="Results transmitted ok."/>
                        <!--generateCompletionCode should have already send all metadata and data so we can skip these steps here-->
                        <!-- <sendMetadata>
                <onSuccess>
                    <sendAllData>
                        <onSuccess>-->
                        <actionButton featureText="redirectToUrl">
                            <redirectToUrl src="/&lt;metadataField_session_next_step&gt;?uuid=&lt;metadataField_validated_uuid&gt;&amp;session_steps=&lt;metadataField_session_steps&gt;"/>
                        </actionButton>                    
                        <!-- </onSuccess>
                                    <onError>
                                        <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                                    </onError>
                                </sendAllData>
                            </onSuccess>
                            <onError>
                                <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                            </onError>
                        </sendMetadata>-->
                    </onSuccess>
                </transmitResults>
                <!-- <htmlText featureText="This is the end of the experiment. &lt;br/&gt;&lt;br/&gt;Please keep this completion code as verification that you have done the experiment:&lt;br/&gt;"/>
                <addPadding/>
                <displayCompletionCode/>
                <addPadding/>
                <htmlText featureText="&lt;br/&gt;Thank you for your participation!&lt;br/&gt;Please use this link to return to the MPI website and register your efforts: &lt;a href=&quot;https://example.com/submissions/complete?cc=&lt;completionCode&gt;&amp;ts=&lt;playerTotalScore&gt;&amp;invitation_code=&lt;metadataField_invitation_code&gt;&quot;&gt;register your efforts&lt;/a&gt;."/>
                <htmlText featureText="Please note that the GET values in the above link will not be populated in this version.&lt;br/&gt;"/>
                <htmlText featureText="It is worth noting that both Prolific and Mechanical Turk do not use return values from the experiment software. Instead they take a single experiment code which is the same for all users and require the user to log in to their website by following that link.&lt;br/&gt;"/>
                <eraseUsersDataButton featureText="Opnieuw beginnen" target="Menu"/>-->
                <gotoPresenter target="InvitationCodeExampleFinished"/>
            </onSuccess>
            <onError>
                <plainText featureText="Could not contact the server, please check your internet connection and try again."/>
                <targetButton featureText="Retry" target="InvitationCodeExampleCompletion"/>
            </onError>
        </generateCompletionCode>
    </presenter>
    <presenter back="InvitationCodeExampleRestart" menuLabel="InvitationCodeExampleFinished" type="stimulus" self="InvitationCodeExampleFinished" title="Invitation Code Example Finished">
        <htmlText featureText="This is the end of the experiment. &lt;br/&gt;&lt;br/&gt;"/>
        <addPadding/>
        <!--<displayCompletionCode/>-->
        <htmlTokenText featureText="&lt;br/&gt;Thank you for your participation!&lt;br/&gt;Please use this link to return to the MPI website and register your efforts: &lt;a href=&quot;https://example.com/submissions/complete?cc=&lt;completionCode&gt;&amp;ts=&lt;playerTotalScore&gt;&amp;invitation_code=&lt;metadataField_invitation_code&gt;&quot;&gt;register your efforts&lt;/a&gt;."/>
        <addPadding/>
        <addPadding/>
        <addPadding/>
        <htmlText featureText="It is worth noting that both Prolific and Mechanical Turk do not use return values from the experiment software. Instead they take a single experiment code which is the same for all users and require the user to log in to their website by following that link.&lt;br/&gt;"/>
        <targetButton featureText="Continue" target="InvitationCodeExampleRestart"/>
    </presenter>
    <presenter back="Menu" menuLabel="Next Step Example" type="stimulus" self="NextStepExample" title="Next Step Example">
        <htmlText featureText="The regular expression used in this example finds the session_step in the list session_steps and places the next value from the list into session_next_step."/>
        <htmlText featureText="To test this we iterate over the items in the list and test the result of each element, the results of which are below:"/>
        <addPadding/>
        <setMetadataValue fieldName="session_steps" dataLogFormat="one_two_three"/>
        <htmlTokenText featureText="session_steps: &lt;b&gt;&lt;metadataField_session_steps&gt;&lt;/b&gt;"/>
        <addPadding/>
        <setMetadataValue fieldName="session_step" dataLogFormat="one"/>
        <htmlTokenText featureText="session_step: &lt;metadataField_session_step&gt;"/>
        <setMetadataValue fieldName="session_next_step" replacementRegex="&lt;metadataField_session_step&gt;_([^_]*)" dataLogFormat="&lt;metadataField_session_steps&gt;"/>
        <htmlTokenText featureText="session_next_step: &lt;b&gt;&lt;metadataField_session_next_step&gt;&lt;/b&gt;"/>
        <addPadding/>
        <setMetadataValue fieldName="session_step" dataLogFormat="two"/>
        <htmlTokenText featureText="session_step: &lt;metadataField_session_step&gt;"/>
        <setMetadataValue fieldName="session_next_step" replacementRegex="&lt;metadataField_session_step&gt;_([^_]*)" dataLogFormat="&lt;metadataField_session_steps&gt;"/>
        <htmlTokenText featureText="session_next_step: &lt;b&gt;&lt;metadataField_session_next_step&gt;&lt;/b&gt;"/>
        <addPadding/>
        <htmlText featureText="Because there are no more items in the list, session_next_step should be empty and no error sould occur."/>
        <setMetadataValue fieldName="session_step" dataLogFormat="three"/>
        <htmlTokenText featureText="session_step: &lt;metadataField_session_step&gt;"/>
        <setMetadataValue fieldName="session_next_step" replacementRegex="&lt;metadataField_session_step&gt;_([^_]*)" dataLogFormat="&lt;metadataField_session_steps&gt;"/>
        <htmlTokenText featureText="session_next_step: &lt;b&gt;&lt;metadataField_session_next_step&gt;&lt;/b&gt;"/>
        <addPadding/>
        <htmlText featureText="This example is achieved with &amp;lt;setMetadataValue&amp;gt; where the dataLogFormat is the input string and the regular expression in replacementRegex captures the required value."/>
        <htmlText featureText="The regular expression resolves to, for example &quot;one_([^_]*)&quot; and first finds the current step string &quot;one&quot; followed by a &quot;_&quot; and then captures all following characters until it finds another &quot;_&quot; or reaches the end of the input string. The result is specified by the capture group inside the ( ) which is then stored into the metadata field specified in fieldName."/>
    </presenter>
    <presenter menuLabel="InvitationCodeExampleRestart" type="transmission" self="InvitationCodeExampleRestart" title="Invitation Code Example Restart">
        <generateCompletionCode>
            <onSuccess>
                <eraseUsersDataButton featureText="Opnieuw beginnen" target="InvitationCodeExample"/>
            </onSuccess>
            <onError>
                <plainText featureText="Could not contact the server, please check your internet connection and try again."/>
                <targetButton featureText="Retry" target="InvitationCodeExampleRestart"/>
            </onError>
        </generateCompletionCode>
    </presenter>
    <presenter menuLabel="InvitationCodeExampleInvalid" type="transmission" self="InvitationCodeExampleInvalid" title="Invitation Code Example Invalid">
        <plainText featureText="You must delete the local data to proceed."/>
        <eraseUsersDataButton featureText="Opnieuw beginnen" target="InvitationSessionStepsExample"/>
    </presenter> 
    <presenter back="Menu" menuLabel="RecordingQualityTest" type="stimulus" self="RecordingQualityTest" title="RecordingQualityTest">
        <resetStimulus target="RecordingQualityTest"/>
        <regionAppend regionId="recordedMediaResult"></regionAppend>
        <regionAppend regionId="stimulusProgress"></regionAppend>
        <regionAppend regionId="stimulusLabel"></regionAppend>
        <regionAppend regionId="stimulusButtons"></regionAppend>
        <loadStimulus eventTag="RecordingQualityTest" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <regionReplace regionId="recordedMediaResult">
                    <startAudioRecorderWeb featureText="00:00:00" downloadPermittedWindowMs="30000" deviceRegex="(046d:0a45)" mediaId="recordedMedia_&lt;stimulusId&gt;">
                        <onError>
                            <regionReplace regionId="stimulusLabel"></regionReplace>
                            <regionReplace regionId="stimulusButtons"></regionReplace>
                            <regionReplace regionId="recordedMediaResult">
                                <plainText featureText="Recording Error"/>
                                <plainText featureText="Please make sure you are using the HTTPS version of this page."/>
                                <plainText featureText="Please check that your USB headset is pluged in and that you have allowed this web page to access the microphone."/>
                                <actionButton featureText="Retry">
                                    <showStimulus/>
                                </actionButton>
                            </regionReplace>
                        </onError>
                        <onSuccess>
                            <regionReplace regionId="stimulusLabel">
                                <stimulusLabel/>
                            </regionReplace>
                            <regionReplace regionId="stimulusButtons">
                                <actionButton featureText="Continue">
                                    <pause msToNext="1000">
                                        <stopAudioRecorder/>
                                        <nextStimulus repeatIncorrect="false"/>
                                    </pause>
                                </actionButton>
                            </regionReplace>
                        </onSuccess>
                        <mediaLoaded>
                            <!-- <regionReplace regionId="recordedMediaResult">
                                <plainText featureText="AudioRecordingLoaded"/>
                            </regionReplace>-->
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <regionReplace regionId="recordedMediaResult">
                                <plainText featureText="AudioRecordingLoadFailed"/>
                            </regionReplace>
                        </mediaLoadFailed>
                        <mediaPlaybackStarted/>
                        <mediaPlaybackComplete>
                            <!-- <regionReplace regionId="recordedMediaResult">
                                <plainText featureText="AudioRecordingPlaybackComplete"/>
                            </regionReplace>-->
                        </mediaPlaybackComplete>
                    </startAudioRecorderWeb>
                </regionReplace>
            </hasMoreStimulus>
            <endOfStimulus>                
                <regionReplace regionId="stimulusProgress"></regionReplace>
                <regionReplace regionId="stimulusLabel"></regionReplace>
                <regionReplace regionId="stimulusButtons"></regionReplace>
                <resetStimulus target="RecordingQualityTest"/>
                <loadStimulus eventTag="RecordingQualityTest" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
                    <hasMoreStimulus>
                        <regionReplace regionId="stimulusProgress">
                            <showStimulusProgress/>
                            <addPadding/>
                        </regionReplace>
                        <regionReplace regionId="stimulusLabel">
                            <htmlText featureText="Listen to the recorded audio and click the button that corresponds to the recording."/>
                            <addPadding/>
                        </regionReplace>
                        <regionReplace regionId="stimulusButtons">
                            <playMedia mediaId="recordedMedia_&lt;stimulusId&gt;"/>
                            <actionButton featureText="replay">
                                <playMedia mediaId="recordedMedia_&lt;stimulusId&gt;"/>
                            </actionButton>
                            <addPadding/>
                            <stimulusRatingButton ratingLabelRight="" dataChannel="1" ratingLabelLeft="">
                                <nextStimulus repeatIncorrect="false"/>
                            </stimulusRatingButton>
                        </regionReplace>
                    </hasMoreStimulus>
                    <endOfStimulus>
                        <clearPage/>
                        <scoreAboveThreshold correctStreak="3">
                            <aboveThreshold>
                                <htmlText featureText="Your efforts have proved adequate."/>
                            </aboveThreshold>
                            <withinThreshold>
                                <htmlText featureText="Your efforts have proved inadequate."/>
                            </withinThreshold>
                        </scoreAboveThreshold>
                        <addPadding/>
                        <actionButton featureText="clearCurrentScore">
                            <clearCurrentScore/>
                            <gotoPresenter target="RecordingQualityTest"/>
                        </actionButton>  
                        <addPadding/>
                        <actionButton featureText="resetStimulus">
                            <resetStimulus target="RecordingQualityTest"/>
                            <gotoPresenter target="RecordingQualityTest"/>
                        </actionButton>
                    </endOfStimulus>
                    <randomGrouping/>
                    <stimuli>
                        <tag>RecordingQualityTest</tag>
                    </stimuli>
                </loadStimulus>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>RecordingQualityTest</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter menuLabel="Menu" type="menu" self="Menu" title="Menu">
        <allMenuItems/>
    </presenter>
    <presenter menuLabel="menuItemStyle" type="menu" back="Menu" self="menuItemStyle" title="menuItemStyle">
        <menuItem featureText="Timer_Label_Screen" target="Timer_Label_Screen" styleName="menuButtonDemoAStyle"/>
        <menuItem featureText="Region_Timer_Screen" target="Region_Timer_Screen" styleName="menuButtonDemoAStyle"/>
        <menuItem featureText="Region_Toggle_Example" target="Region_Toggle_Example" styleName="menuButtonDemoBStyle"/>
        <menuItem featureText="Rating_Toggle_Example" target="Rating_Toggle_Example" styleName="menuButtonDemoAStyle"/>
        <menuItem featureText="With_Stimuli_Screen" target="With_Stimuli_Screen" styleName="menuButtonDemoBStyle"/>
    </presenter>
    <presenter menuLabel="allMenuItemsStyle" type="menu" back="Menu" self="allMenuItemsStyle" title="allMenuItemsStyle">
        <allMenuItems styleName="menuButtonDemoAStyle"/>
    </presenter>
    <presenter menuLabel="activateRandomItem" type="menu" next="Menu" self="activateRandomItem" title="activateRandomItem">
        <menuItem featureText="Timer_Label_Screen" target="Timer_Label_Screen"/>
        <menuItem featureText="Region_Timer_Screen" target="Region_Timer_Screen"/>
        <menuItem featureText="Region_Toggle_Example" target="Region_Toggle_Example"/>
        <menuItem featureText="Rating_Toggle_Example" target="Rating_Toggle_Example"/>
        <menuItem featureText="With_Stimuli_Screen" target="With_Stimuli_Screen"/>
        <htmlText featureText="The tag activateRandomItem will take the list of menu items on this screen and randomly select one that has not been completed and send the user to that screen. If all have been completed then the user will be sent to this screen's next presenter."/>
        <actionButton featureText="activateRandomItem">
            <activateRandomItem/>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="triggerRandomListener" type="stimulus" next="Menu" self="triggerRandomListener" title="Trigger Random Listener">
        <regionAppend regionId="regionTriggerA">
            <plainText featureText="regionTriggerA is unchanged"/>
        </regionAppend>
        <regionAppend regionId="regionTriggerB">
            <plainText featureText="regionTriggerB is unchanged"/>
        </regionAppend>
        <regionAppend regionId="regionTriggerC">
            <plainText featureText="regionTriggerC is unchanged"/>
        </regionAppend>
        <triggerDefinition listenerId="triggerA" threshold="0" maximum="1">
            <regionReplace regionId="regionTriggerA">
                <plainText featureText="regionTriggerA has triggered and will not again"/>
            </regionReplace>
        </triggerDefinition>
        <triggerDefinition listenerId="triggerB" threshold="0" maximum="1">
            <regionReplace regionId="regionTriggerB">
                <plainText featureText="regionTriggerB has triggered and will not again"/>
            </regionReplace>
        </triggerDefinition> 
        <triggerDefinition listenerId="triggerC" threshold="0" maximum="1">
            <regionReplace regionId="regionTriggerC">
                <plainText featureText="regionTriggerB has triggered and will not again"/>
            </regionReplace>
        </triggerDefinition>
        <actionButton featureText="Click to randomly trigger any once">
            <triggerRandom matchingRegex="trigger[ABC]">
                <targetButton featureText="Reset Triggers" target="triggerRandomListener"/>
            </triggerRandom>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="incrementScoreExample" type="stimulus" next="Menu" self="incrementScoreExample" title="Increment Score">
        <regionAppend regionId="scoreLabelsRegion"/>
        <triggerDefinition listenerId="scoreLabelsTrigger" threshold="0" maximum="0">
            <regionReplace regionId="scoreLabelsRegion">
                <htmlTokenText featureText="
                Each increment accrues positive potential but only a positive values increment the score while negative values increment errors.&lt;br/&gt;
                The games played value increments only when the potential is greater than zero and the score is cleared.&lt;br/&gt;
                playerScore:
                &lt;playerScore&gt;&lt;br/&gt;
                playerErrors:
                &lt;playerErrors&gt;&lt;br/&gt;
                playerPotentialScore:
                &lt;playerPotentialScore&gt;&lt;br/&gt;
                playerErrorStreak:
                &lt;playerErrorStreak&gt;&lt;br/&gt;
                playerCorrectStreak:
                &lt;playerCorrectStreak&gt;&lt;br/&gt;
                playerMaxScore:
                &lt;playerMaxScore&gt;&lt;br/&gt;
                playerMaxErrors:
                &lt;playerMaxErrors&gt;&lt;br/&gt;
                playerMaxPotentialScore:
                &lt;playerMaxPotentialScore&gt;&lt;br/&gt;
                playerMaxErrorStreak:
                &lt;playerMaxErrorStreak&gt;&lt;br/&gt;
                playerMaxCorrectStreak:
                &lt;playerMaxCorrectStreak&gt;&lt;br/&gt;
                playerTotalScore:
                &lt;playerTotalScore&gt;&lt;br/&gt;
                playerTotalErrors:
                &lt;playerTotalErrors&gt;&lt;br/&gt;
                playerTotalPotentialScore:
                &lt;playerTotalPotentialScore&gt;&lt;br/&gt;
                playerGamesPlayed:
                &lt;playerGamesPlayed&gt;&lt;br/&gt;
                "/>
            </regionReplace> 
        </triggerDefinition>
        <triggerMatching listenerId="scoreLabelsTrigger"/>
        <actionButton featureText="clearCurrentScore">
            <clearCurrentScore/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
        <actionButton featureText="scoreIncrement 5">
            <scoreIncrement scoreValue="5"/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
        <actionButton featureText="scoreIncrement -3">
            <scoreIncrement scoreValue="-3"/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
        <actionButton featureText="scoreIncrement -1">
            <scoreIncrement scoreValue="-1"/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
        <actionButton featureText="scoreIncrement 1">
            <scoreIncrement scoreValue="1"/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
        <actionButton featureText="scoreIncrement 0">
            <scoreIncrement scoreValue="0"/>
            <triggerMatching listenerId="scoreLabelsTrigger"/>
        </actionButton>
    </presenter>
    <presenter back="Menu" menuLabel="Deelnemer" type="metadata" self="EditParticipant" next="ListParticipants" title="Deelnemer">
        <metadataField fieldName="workerId"/>
        <addPadding/>
        <saveMetadataButton featureText="Volgende" sendData="false" networkErrorMessage="Geen verbinding met de server. Controleer alstublieft uw internetverbinding en probeer het opnieuw.">
            <onError/>
            <onSuccess>
                <gotoNextPresenter/>
            </onSuccess>
        </saveMetadataButton>
        <addPadding/>
    </presenter>
    <presenter back="Menu" menuLabel="Deelnemer lijst" type="metadata" self="ListParticipants" next="Admin" title="Kiez deelnemer">
        <htmlText featureText="The participants which are still in local browser memory:"/>
        <selectUserMenu fieldName="workerId"/>
        <addPadding/>
        <htmlTokenText featureText="Current workerId: &lt;metadataField_workerId&gt;"/>
        <htmlTokenText featureText="Current userId: &lt;userId&gt;"/>
        <addPadding/>
        <addPadding/>
        <targetButton featureText="To the admin page" target="Admin"/>   
    </presenter>
    <presenter type="transmission" menuLabel="Einde van deze test." self="Admin" title="Einde van deze test." next="ListParticipants">
        <centrePage/>
        <sendMetadata>
            <onSuccess>
                <sendAllData>
                    <onSuccess>
                        <addPadding/>
                        <addPadding/>
                        <htmlText featureText="Einde van deze test."/>
                        <addPadding/>
                        <htmlText featureText="Bedankt voor uw deelname."/>
                        <addPadding/>
                        <addPadding/>
                        <createUserButton featureText="Create New User" target="EditParticipant"/>
                        <addPadding/>
                        <eraseUsersDataButton featureText="Erase Current User" target="EditParticipant"/>
                    </onSuccess>
                    <onError>
                        <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                        <addPadding/>
                        <addPadding/>
                        <targetButton featureText="Retry" target="Admin"/>
                        <addPadding/>
                        <addPadding/>
                        <createUserButton featureText="Create New User" target="EditParticipant"/>
                        <addPadding/>
                        <eraseUsersDataButton featureText="Erase Current User" target="EditParticipant"/>
                    </onError>
                </sendAllData>
            </onSuccess>
            <onError>
                <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                <addPadding/>
                <addPadding/>
                <targetButton featureText="Retry" target="Admin"/>
                <addPadding/>
                <addPadding/>
                <createUserButton featureText="Create New User" target="EditParticipant"/>
                <addPadding/>
                <eraseUsersDataButton featureText="Erase Current User" target="EditParticipant"/>
            </onError>
        </sendMetadata>
    </presenter>
    <presenter back="Menu" menuLabel="Data Management" next="DataUpload" type="metadata" self="DataManagement" title="Data Management">
        <htmlText featureText="Participants with data in the application memory:"/>
        <selectUserMenu fieldName="workerId"/>
    </presenter>
    <presenter back="DataManagement" menuLabel="Data Upload" next="DataManagement" type="transmission" self="DataUpload" title="Data Upload">
        <htmlText featureText="Uploading matadata"/>
        <pause msToNext="100">
            <sendMetadata>
                <onSuccess>
                    <htmlText featureText="Uploading data" styleName=""/>
                    <pause msToNext="100">
                        <sendAllData>
                            <onSuccess>
                                <htmlText featureText="The participant's data has been uploaded to the server" styleName=""/>
                                <addPadding/>
                                <addPadding/>
                                <eraseUsersDataButton featureText="Remove the participants's data from this application" target="DataManagement"/>
                                <addPadding/>
                                <addPadding/>
                                <targetButton featureText="Keep local copy of the participants's data" hotKey="" styleName="" target="DataManagement"/>
                                <addPadding/>
                                <addPadding/>
                            </onSuccess>
                            <onError>
                                <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                                <addPadding/>
                                <addPadding/>
                                <targetButton featureText="Retry" hotKey="" styleName="" target="DataUpload"/>
                                <addPadding/>
                                <addPadding/>
                                <targetButton featureText="Participant's Data Listing" hotKey="" styleName="" target="DataManagement"/>
                                <addPadding/>
                                <addPadding/>
                            </onError>
                        </sendAllData>
                    </pause>
                </onSuccess>
                <onError>
                    <plainText featureText="Cannot connect to the server, please check your internet connection and/or upload data later. Do not clean the browser's cache."/>
                    <addPadding/>
                    <addPadding/>
                    <targetButton featureText="Retry" hotKey="" styleName="" target="DataUpload"/>
                    <addPadding/>
                    <addPadding/>
                    <targetButton featureText="Participant's Data Listing" hotKey="" styleName="" target="DataManagement"/>
                    <addPadding/>
                    <addPadding/>
                </onError>
            </sendMetadata>
        </pause>
    </presenter>
    <presenter back="Menu" menuLabel="table-tags inside a region-tag"  self="table_tags_inside_a_region_tag" type="stimulus" title="table-tags inside a region-tag">
        <regionAppend regionId="missedAutors"/>
        <regionReplace  regionId="missedAutors" styleName="">
            <addPadding/>  
            <withStimuli randomise="false" eventTag="missed_fav_author" maxStimuli="3" repeatCount="1">
                <beforeStimulus> 
                </beforeStimulus>
                <eachStimulus>
                    <table>
                        <row>
                            <column>
                                <stimulusLabel/> 
                            </column>
                            <column>
                                <stimulusFreeText featureText="Sorry, dit teken is niet toegestaan." validationRegex=".*" inputErrorMessage=" " />
                            </column>
                        </row>
                    </table>
                </eachStimulus>
                <afterStimulus>   
                </afterStimulus>
                <randomGrouping/>
                <stimuli>
                    <tag>missed_fav_author</tag>
                </stimuli>
            </withStimuli>
        </regionReplace>
        <regionAppend regionId="buttons"/>
        <regionReplace regionId="buttons" styleName="">
            <addPadding/>
            <htmlText featureText="Heb je favoriete auteurs, die niet in deze lijst staan?"/>
            <table>
                <row>
                    <column>
                        <actionButton featureText="left" >
                            <htmlText featureText="pressed left"/>
                        </actionButton>
                    </column>
                    <column>
                        <actionButton featureText="right" >
                            <htmlText featureText="pressed right"/>
                        </actionButton>
                    </column>   
                </row>
            </table>
        </regionReplace>
    </presenter>
    <presenter back="Menu" menuLabel="Predefined Stimuli Example" type="stimulus" self="predefined_stimuli_example" title="Predefined Stimuli Example">
        <withStimuli eventTag="predefined_stimuli_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <beforeStimulus>
                <plainText featureText="The stimuli list in this example can be predetermined by the providing list alias in the URL."/>
                <htmlTokenText featureText="Alternatively you could set the metadata field &quot;stimuliSequentialDisplayExample&quot; manually with &amp;lt;setMetadataValue fieldName=&quot;stimuliSequentialDisplayExample&quot; dataLogFormat=&quot;L1&quot;/&amp;gt;"/>
                <addPadding/>
                <htmlTokenText featureText="The value of stimuliSequentialDisplayExample is: &quot;&lt;metadataField_stimuliSequentialDisplayExample&gt;&quot;"/>
                <addPadding/>
                <plainText featureText="When no list alias is found the tag &quot;First_Stimuli_Screen&quot; will be used."/>
                <addPadding/>
                <plainText featureText="&lt;randomGrouping storageField=&quot;stimuliSequentialDisplayExample&quot;&gt;"/>
                <plainText featureText="&lt;list alias=&quot;L1&quot;&gt;-R1-R2-R3-R4-Q1-Q2-Q3-Q8-&lt;/list&gt;"/>
                <plainText featureText="&lt;list alias=&quot;L2&quot;&gt;-Q1-Q2-Q3-Q8-&lt;/list&gt;"/>
                <plainText featureText="&lt;list alias=&quot;L3&quot;&gt;-R1-R2-R3-R4-&lt;/list&gt;"/>
                <plainText featureText="&lt;/randomGrouping&gt;"/>
                <plainText featureText="&lt;stimuli&gt;"/>
                <plainText featureText="&lt;tag&gt;First_Stimuli_Screen&lt;/tag&gt;"/>
                <plainText featureText="&lt;/stimuli&gt;"/>
            </beforeStimulus>
            <eachStimulus>
                <htmlTokenText featureText="stimulusId: &lt;stimulusId&gt;"/>
            </eachStimulus>
            <afterStimulus>
                <addPadding/>
                <htmlText featureText="&lt;a href=&quot;?stimuliSequentialDisplayExample=L1&quot;&gt;List 1&lt;/a&gt;"/>
                <addPadding/>
                <htmlText featureText="&lt;a href=&quot;?stimuliSequentialDisplayExample=L2&quot;&gt;List 2&lt;/a&gt;"/>
                <addPadding/>
                <htmlText featureText="&lt;a href=&quot;?stimuliSequentialDisplayExample=L3&quot;&gt;List 3&lt;/a&gt;"/>
                <addPadding/>
                <actionButton featureText="clearStimulusResponses and reaload">
                    <clearStimulusResponses tags="First_Stimuli_Screen"/>
                    <gotoPresenter target="single_line_text_box_no_action_example"/>
                </actionButton>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="single_line_text_box_no_action_example"/>
                    <gotoPresenter target="single_line_text_box_no_action_example"/>
                </actionButton>
            </afterStimulus>
            <randomGrouping storageField="stimuliSequentialDisplayExample">
                <list alias="L1">-R1-R2-R3-R4-Q1-Q2-Q3-Q8-</list>
                <list alias="L2">
                    -Q1
                    -Q2
                    -Q3
                    -Q8
                    -
                </list>
                <list alias="L3">-R1-R2-R3-R4-</list>
            </randomGrouping>
            <stimuli>
                <tag>First_Stimuli_Screen</tag>
            </stimuli>
        </withStimuli>
    </presenter>
    <presenter back="Menu" menuLabel="Custom Completion Number" type="transmission" self="custom_completion_number" title="Custom Completion Number">
        <setMetadataEvalTokens evaluateTokens="random(10)random(10)random(10)random(10)random(10)random(10)random(10)" fieldName="customCompletionNumber">	
            <onError>
                <htmlTokenText featureText="Failed generating customCompletionNumber."/>
            </onError>
            <onSuccess> 
                <htmlTokenText featureText="Generated a customCompletionNumber do not present this value until it has been transmitted to the server."/> 
                <sendMetadata>
                    <onError>
                        <htmlTokenText featureText="Failed storing customCompletionNumber."/>
                    </onError>
                    <onSuccess>
                        <htmlTokenText featureText="Your custom completion code is: &lt;metadataField_customCompletionNumber&gt;" />
                    </onSuccess>
                </sendMetadata>
            </onSuccess>
        </setMetadataEvalTokens>
    </presenter>
    <presenter back="Menu" menuLabel="Random Image Positions Remembered" type="stimulus" self="random_image_positions_remembered" title="Random Image Positions Remembered">
        <loadStimulus eventTag="random_image_positions_remembered" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows how to randomly assign a left or right position to a given stimulus and remember that random position when that stimulus is shown again."/>
                <addPadding/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <stimulusExists offset="1">
                    <conditionTrue>
                        <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <actionButton featureText="resetStimulus">
                    <clearStimulusResponses tags="GroupOf2Images"/>
                    <setMetadataValue fieldName="displayedOrder" replacementRegex="" dataLogFormat=""/>
                    <resetStimulus target="random_image_positions_remembered"/>
                    <gotoPresenter target="random_image_positions_remembered"/>
                </actionButton>
                <addPadding/>
                <addPadding/> 
                <addPadding/>
                <addPadding/>
                <table styleName="menuTable">
                    <row>
                        <column styleName="menuTable">
                            <regionReplace regionId="leftImageRegion" />
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="centreImageRegion" />
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="rightImageRegion" />
                        </column>
                    </row>
                    <row>
                        <column>
                            <regionReplace regionId="leftImageRegion_label" />
                        </column>
                        <column>
                            <regionReplace regionId="centreImageRegion_label" />
                        </column>
                        <column>
                            <regionReplace regionId="rightImageRegion_label" />
                        </column>
                    </row>
                </table>
                <addPadding/>
                <!-- check that a sequence has been stored and if not then store a sequence for the current stimulus -->
                <stimulusHasResponse groupId="rememberedSequenceFirst" matchingRegex="_[AB]">
                    <conditionTrue>
                        <htmlText featureText="Using stored sequence"/>
                    </conditionTrue>
                    <conditionFalse>
                        <htmlText featureText="Randomising the sequence"/>
                        <matchOnEvalTokens evaluateTokens="random(2) &gt; 0" matchingRegex="true">
                            <conditionTrue>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_A" groupId="rememberedSequenceFirst"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_B" groupId="rememberedSequenceLast"/>
                            </conditionTrue>
                            <conditionFalse>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_B" groupId="rememberedSequenceFirst"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_A" groupId="rememberedSequenceLast"/>
                            </conditionFalse>
                            <onError>
                                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
                            </onError>
                        </matchOnEvalTokens>
                        <hasMetadataValue fieldName="displayedOrder" matchingRegex=".*_A_A$">
                            <conditionTrue>
                                <plainText featureText="The image with the _A suffix was shown first the last two or more times. Since a sequence of three is not allowed this randomisation will be forced to show _B first for this stimulus."/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_B" groupId="rememberedSequenceFirst"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_A" groupId="rememberedSequenceLast"/>
                            </conditionTrue>
                            <conditionFalse/>
                        </hasMetadataValue>
                        <hasMetadataValue fieldName="displayedOrder" matchingRegex=".*_B_B$">
                            <conditionTrue>
                                <plainText featureText="The image with the _B suffix was shown first the last two or more times. Since a sequence of three is not allowed this randomisation will be forced to show _A first for this stimulus."/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_A" groupId="rememberedSequenceFirst"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="_B" groupId="rememberedSequenceLast"/>
                            </conditionTrue>
                            <conditionFalse/>
                        </hasMetadataValue>
                        <setMetadataValue fieldName="displayedOrder" replacementRegex="" dataLogFormat="&lt;metadataField_displayedOrder&gt;&lt;stimulusResponse__rememberedSequenceFirst&gt;"/>
                    </conditionFalse>
                </stimulusHasResponse>
                <!-- check that a position has been stored and if not then store a position for the current stimulus -->
                <stimulusHasResponse groupId="rememberedPositionA" matchingRegex="(left|right)ImageRegion">
                    <conditionTrue>
                        <htmlText featureText="Using stored position"/>
                    </conditionTrue>
                    <conditionFalse>
                        <htmlText featureText="Randomising the position"/>
                        <matchOnEvalTokens evaluateTokens="random(2) &gt; 0" matchingRegex="true">
                            <conditionTrue>
                                <setStimulusCodeResponse applyScore="false" codeFormat="leftImageRegion" groupId="rememberedPositionA"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="rightImageRegion" groupId="rememberedPositionB"/>
                            </conditionTrue>
                            <conditionFalse>
                                <setStimulusCodeResponse applyScore="false" codeFormat="rightImageRegion" groupId="rememberedPositionA"/>
                                <setStimulusCodeResponse applyScore="false" codeFormat="leftImageRegion" groupId="rememberedPositionB"/>
                            </conditionFalse>
                            <onError>
                                <htmlTokenText featureText="matchOnEvalTokens triggered onError"/>
                            </onError>
                        </matchOnEvalTokens>
                    </conditionFalse>
                </stimulusHasResponse>
                <htmlTokenText featureText="displayedOrder: &lt;metadataField_displayedOrder&gt;" />
                <!-- place the first stimulus in the centre position -->
                <regionAppend regionId="centreImageRegion_label">
                    <htmlTokenText featureText="&lt;code&gt;&lt;stimulusResponse__rememberedSequenceFirst&gt;" />
                </regionAppend>
                <regionReplace regionId="centreImageRegion">
                    <stimulusCodeImage codeFormat="&lt;code&gt;&lt;stimulusResponse__rememberedSequenceFirst&gt;.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                        <mediaLoaded>
                            <pause msToNext="1000">
                                <regionReplace regionId="centreImageRegion">
                                    <!-- place the second stimulus in the centre position -->
                                    <regionAppend regionId="centreImageRegion_label">
                                        <htmlTokenText featureText="&lt;code&gt;&lt;stimulusResponse__rememberedSequenceLast&gt;" />
                                    </regionAppend>
                                    <stimulusCodeImage codeFormat="&lt;code&gt;&lt;stimulusResponse__rememberedSequenceLast&gt;.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                        <mediaLoaded>
                                            <pause msToNext="1000">
                                                <regionReplace regionId="centreImageRegion"/>
                                                <!-- place the stimulus in the stored positions -->
                                                <regionReplace regionId="&lt;stimulusResponse__rememberedPositionA&gt;">
                                                    <stimulusCodeImage codeFormat="&lt;code&gt;_A.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                                        <mediaLoaded>
                                                        </mediaLoaded>
                                                        <mediaLoadFailed>
                                                            <htmlText featureText="mediaLoadFailed"/>
                                                        </mediaLoadFailed>
                                                    </stimulusCodeImage>
                                                </regionReplace>
                                                <regionReplace regionId="&lt;stimulusResponse__rememberedPositionB&gt;">
                                                    <stimulusCodeImage codeFormat="&lt;code&gt;_B.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                                        <mediaLoaded>
                                                        </mediaLoaded>
                                                        <mediaLoadFailed>
                                                            <htmlText featureText="mediaLoadFailed"/>
                                                        </mediaLoadFailed>
                                                    </stimulusCodeImage>
                                                </regionReplace>
                                                <regionReplace regionId="leftImageRegion_label">
                                                    <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeTextLeft"/>
                                                </regionReplace>
                                                <regionReplace regionId="rightImageRegion_label">
                                                    <stimulusFreeText featureText="." validationRegex=".{0,}" hotKey="ENTER" inputErrorMessage=" " styleName="minimalWidth" groupId="stimulusFreeTextRight"/>
                                                </regionReplace>
                                            </pause>
                                        </mediaLoaded>
                                        <mediaLoadFailed>
                                            <htmlText featureText="mediaLoadFailed"/>
                                        </mediaLoadFailed>
                                    </stimulusCodeImage>
                                </regionReplace>
                            </pause>
                        </mediaLoaded>
                        <mediaLoadFailed>
                            <htmlText featureText="mediaLoadFailed"/>
                        </mediaLoadFailed>
                    </stimulusCodeImage>
                </regionReplace>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <clearStimulusResponses tags="GroupOf2Images"/>
                    <setMetadataValue fieldName="displayedOrder" replacementRegex="" dataLogFormat=""/>
                    <resetStimulus target="random_image_positions_remembered"/>
                    <gotoPresenter target="random_image_positions_remembered"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>GroupOf2Images</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <presenter back="Menu" menuLabel="Preload Images Example" type="stimulus" self="preload_images_example" title="Preload Images Example">
        <loadStimulus eventTag="preload_images_example" randomise="true" repeatRandomWindow="0" maxStimuli="1000" repeatCount="1">
            <hasMoreStimulus>
                <clearPage/>
                <plainText featureText="This example shows how load the required images before displaying them, so that they all show at the same time regardless of network delays. If any image fails to load then no images will be shown and this must be handled appropriately."/>
                <triggerDefinition listenerId="showLoadedImages" threshold="11" maximum="1">
                    <regionStyle regionId="regionImage2A" styleName=""/>
                    <pause msToNext="1000">
                        <regionStyle regionId="regionImage2A" styleName="hiddenRegion"/>
                        <regionStyle regionId="regionImage2B" styleName=""/>
                        <pause msToNext="1000">
                            <regionStyle regionId="regionImage2B" styleName="hiddenRegion"/>
                            <regionStyle regionId="regionImage2C" styleName=""/>
                            <pause msToNext="1000">
                                <regionStyle regionId="regionImage2C" styleName="hiddenRegion"/>
                                <regionStyle regionId="regionImage1" styleName=""/>
                                <regionStyle regionId="regionImage3" styleName=""/>
                                <regionStyle regionId="regionImageA" styleName=""/>
                                <regionStyle regionId="regionImageB" styleName=""/>
                                <regionStyle regionId="regionImageC" styleName=""/>
                                <regionStyle regionId="regionImageD" styleName=""/>
                                <regionStyle regionId="regionImageE" styleName=""/>
                                <regionStyle regionId="regionImageF" styleName=""/>
                            </pause>
                        </pause>
                    </pause>
                    <plainText featureText="The triggerDefinition showLoadedImages has reached its threshold and has triggered. The images should now be shown."/>
                </triggerDefinition>
                <addPadding/>
                <addPadding/>
                <stimulusExists offset="-1">
                    <conditionTrue>
                        <prevStimulusButton featureText="Previous" eventTag="prevStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <stimulusExists offset="1">
                    <conditionTrue>
                        <nextStimulusButton featureText="Next" eventTag="nextStimulusButton" hotKey="" styleName="" repeatIncorrect="false"/>
                    </conditionTrue>
                    <conditionFalse/>
                </stimulusExists>
                <addPadding/>
                <addPadding/>
                <table styleName="menuTable">
                    <row>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImage1" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImage2A" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_A.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                            <regionReplace regionId="regionImage2B" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_B.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                            <regionReplace regionId="regionImage2C" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_C.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImage3" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                    </row>
                    <row>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageA" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_A.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image A loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageB" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_B.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image B loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageC" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_C.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image C loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                    </row>
                    <row>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageD" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_D.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image D loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageE" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_E.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image E loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                        <column styleName="menuTable">
                            <regionReplace regionId="regionImageF" styleName="hiddenRegion">
                                <stimulusCodeImage codeFormat="&lt;code&gt;_F.png" dataChannel="2" msToNext="0" styleName="stimulusImageButton">
                                    <mediaLoaded>
                                        <plainText featureText="Image F loaded."/>
                                        <triggerMatching listenerId="showLoadedImages"/>
                                    </mediaLoaded>
                                    <mediaLoadFailed>
                                        <htmlText featureText="mediaLoadFailed"/>
                                    </mediaLoadFailed>
                                </stimulusCodeImage>
                            </regionReplace>
                        </column>
                    </row>
                </table>
            </hasMoreStimulus>
            <endOfStimulus>
                <clearPage/>
                <actionButton featureText="resetStimulus">
                    <resetStimulus target="preload_images_example"/>
                    <gotoPresenter target="preload_images_example"/>
                </actionButton>
            </endOfStimulus>
            <randomGrouping/>
            <stimuli>
                <tag>GroupOf2Images</tag>
            </stimuli>
        </loadStimulus>
    </presenter>
    <!--todo: add an example of random pause with min max and also with ranges-->
    <presenter back="Menu" menuLabel="Over" type="debug" self="about" title="Over">
        <versionData/>
        <stimuliValidation/>
    </presenter>
    <stimuli>
        <stimulus identifier="cond_1:Label for the stimuli" label="Label for the stimuli" pauseMs="0" code="Item1" tags="First_Stimuli_Screen cond_1"/>
        <stimulus identifier="cond_2:Label1 for stimuli in condition two" label="Label1 for stimuli in condition two" pauseMs="0" code="Item2" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label2 for stimuli in condition two" label="Label2 for stimuli in condition two" pauseMs="0" code="Item3" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label3 for stimuli in condition two" label="Label3 for stimuli in condition two" pauseMs="0" code="Item4" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label4 for stimuli in condition two" label="Label4 for stimuli in condition two" pauseMs="0" code="Item5" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label5 for stimuli in condition two" label="Label5 for stimuli in condition two" pauseMs="0" code="Item6" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label6 for stimuli in condition two" label="Label6 for stimuli in condition two" pauseMs="0" code="Item7" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label7 for stimuli in condition two" label="Label7 for stimuli in condition two" pauseMs="0" code="Item8" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_2:Label8 for stimuli in condition two" label="Label8 for stimuli in condition two" pauseMs="0" code="Item9" tags="First_Stimuli_Screen cond_2"/>
        <stimulus identifier="cond_3:Label for stimuli in condition three" label="Label for stimuli in condition three" pauseMs="0" code="Item10" tags="First_Stimuli_Screen cond_3"/>
        <stimulus identifier="second:14a" label="14a" pauseMs="0" tags="Second second"/>
        <stimulus identifier="second:14b" label="14b" pauseMs="0" tags="Second second"/>
        <stimulus identifier="second:14s" label="14s" pauseMs="0" tags="Second second"/>
        <stimulus identifier="second:14d" label="14d" pauseMs="0" tags="Second second"/>
        <stimulus identifier="thirdexample:aaa" label="aaa" pauseMs="0" tags="Third thirdexample"/>
        <stimulus identifier="thirdexample:ccc" label="ccc" pauseMs="0" tags="Third thirdexample"/>
        <stimulus identifier="thirdexample:ssss" label="ssss" pauseMs="0" tags="Third thirdexample"/>
        <stimulus identifier="RecorderPauseTest1000" label="1000" pauseMs="1000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest2000" label="2000" pauseMs="2000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest3000" label="3000" pauseMs="3000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest4000" label="4000" pauseMs="4000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest5000" label="5000" pauseMs="5000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest6000" label="6000" pauseMs="6000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest7000" label="7000" pauseMs="7000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest8000" label="8000" pauseMs="8000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest9000" label="9000" pauseMs="9000" tags="RecorderPauseTest"/>
        <stimulus identifier="RecorderPauseTest10000" label="10000" pauseMs="10000" tags="RecorderPauseTest"/>
        <stimulus identifier="ratingimages1" ratingLabels="d1e250,d1e256,d1e263,d1e275" tags="ratingimages" />
        <stimulus identifier="ratingimages2" ratingLabels="d1e281,d1e287,d1e293,d1e223" tags="ratingimages" />
        <stimulus identifier="ratingimages3" ratingLabels="d1e266,d1e272,d1e278,d1e284" tags="ratingimages" />
        <stimulus identifier="ratingimages4" ratingLabels="d1e290,d1e228,d1e238,d1e244" tags="ratingimages" />
        <stimulus identifier="ratingimages5" ratingLabels="d1e241,d1e247,d1e253,d1e259" tags="ratingimages" />
        <stimulus audioPath="d1e269_a" code="d1e269" identifier="d1e269" imagePath="d1e269.jpg" label="d1e269" pauseMs="0" tags="media" videoPath="d1e269_v"/>
        <stimulus audioPath="d1e235_a" code="d1e235" identifier="d1e235" imagePath="d1e235.jpg" label="d1e235" pauseMs="0" tags="media" videoPath="d1e235_v"/>
        <stimulus audioPath="d1e241_a" code="d1e241" identifier="d1e241" imagePath="d1e241.jpg" label="d1e241" pauseMs="0" tags="media" videoPath="d1e241_v"/>
        <stimulus audioPath="d1e247_a" code="d1e247" identifier="d1e247" imagePath="d1e247.jpg" label="d1e247" pauseMs="0" tags="media" videoPath="d1e247_v"/>
        <stimulus audioPath="d1e253_a" code="d1e253" identifier="d1e253" imagePath="d1e253.jpg" label="d1e253" pauseMs="0" tags="media" videoPath="d1e253_v"/>
        <stimulus audioPath="d1e259_a" code="d1e259" identifier="d1e259" imagePath="d1e259.jpg" label="d1e259" pauseMs="0" tags="media" videoPath="d1e259_v"/>
        <stimulus audioPath="d1e266_a" code="d1e266" identifier="d1e266" imagePath="d1e266.jpg" label="d1e266" pauseMs="0" tags="media" videoPath="d1e266_v"/>
        <stimulus audioPath="d1e272_a" code="d1e272" identifier="d1e272" imagePath="d1e272.jpg" label="d1e272" pauseMs="0" tags="media" videoPath="d1e272_v"/>
        <stimulus audioPath="d1e278_a" code="d1e278" identifier="d1e278" imagePath="d1e278.jpg" label="d1e278" pauseMs="0" tags="media" videoPath="d1e278_v"/>
        <stimulus audioPath="d1e284_a" code="d1e284" identifier="d1e284" imagePath="d1e284.jpg" label="d1e284" pauseMs="0" tags="media" videoPath="d1e284_v"/>
        <stimulus audioPath="d1e290_a" code="d1e290" identifier="d1e290" imagePath="d1e290.jpg" label="d1e290" pauseMs="0" tags="media" videoPath="d1e290_v"/>
        <stimulus audioPath="d1e228_a" code="d1e228" identifier="d1e228" imagePath="d1e228.jpg" label="d1e228" pauseMs="0" tags="media" videoPath="d1e228_v"/>
        <stimulus audioPath="d1e238_a" code="d1e238" identifier="d1e238" imagePath="d1e238.jpg" label="d1e238" pauseMs="0" tags="media" videoPath="d1e238_v"/>
        <stimulus audioPath="d1e244_a" code="d1e244" identifier="d1e244" imagePath="d1e244.jpg" label="d1e244" pauseMs="0" tags="media" videoPath="d1e244_v"/>
        <stimulus audioPath="d1e250_a" code="d1e250" identifier="d1e250" imagePath="d1e250.jpg" label="d1e250" pauseMs="0" tags="media" videoPath="d1e250_v"/>
        <stimulus audioPath="d1e256_a" code="d1e256" identifier="d1e256" imagePath="d1e256.jpg" label="d1e256" pauseMs="0" tags="media" videoPath="d1e256_v"/>
        <stimulus audioPath="d1e263_a" code="d1e263" identifier="d1e263" imagePath="d1e263.jpg" label="d1e263" pauseMs="0" tags="media" videoPath="d1e263_v"/>
        <stimulus audioPath="d1e275_a" code="d1e275" identifier="d1e275" imagePath="d1e275.jpg" label="d1e275" pauseMs="0" tags="media" videoPath="d1e275_v"/>
        <stimulus audioPath="d1e281_a" code="d1e281" identifier="d1e281" imagePath="d1e281.jpg" label="d1e281" pauseMs="0" tags="media" videoPath="d1e281_v"/>
        <stimulus audioPath="d1e287_a" code="d1e287" identifier="d1e287" imagePath="d1e287.jpg" label="d1e287" pauseMs="0" tags="media" videoPath="d1e287_v"/>
        <stimulus audioPath="d1e293_a" code="d1e293" identifier="d1e293" imagePath="d1e293.jpg" label="d1e293" pauseMs="0" tags="media" videoPath="d1e293_v"/>
        <stimulus audioPath="d1e223_a" code="d1e223" identifier="d1e223" imagePath="d1e223.jpg" label="d1e223" pauseMs="0" tags="media" videoPath="d1e223_v"/>
        <stimulus audioPath="100ms_a" code="100ms" identifier="100ms" imagePath="100ms.jpg" label="100ms" pauseMs="100" tags="ToneVideos" videoPath="100ms_v"/>
        <stimulus audioPath="500ms_a" code="500ms" identifier="500ms" imagePath="500ms.jpg" label="500ms" pauseMs="500" tags="ToneVideos" videoPath="500ms_v"/>
        <stimulus audioPath="1000ms_a" code="1000ms" identifier="1000ms" imagePath="1000ms.jpg" label="1000ms" pauseMs="1000" tags="ToneVideos" videoPath="1000ms_v"/>
        <stimulus audioPath="2000ms_a" code="2000ms" identifier="2000ms" imagePath="2000ms.jpg" label="2000ms" pauseMs="2000" tags="ToneVideos" videoPath="2000ms_v"/>
        <stimulus audioPath="5000ms_a" code="5000ms" identifier="5000ms" imagePath="5000ms.jpg" label="5000ms" pauseMs="5000" tags="ToneVideos" videoPath="5000ms_v"/>
        <stimulus audioPath="100ms_a" code="100ms" identifier="100ms_c" imagePath="100ms.jpg" label="100ms_c" pauseMs="100" tags="ToneVideos_c" videoPath="100ms_c_v"/>
        <stimulus audioPath="500ms_a" code="500ms" identifier="500ms_c" imagePath="500ms.jpg" label="500ms_c" pauseMs="500" tags="ToneVideos_c" videoPath="500ms_c_v"/>
        <stimulus audioPath="1000ms_a" code="1000ms" identifier="1000ms_c" imagePath="1000ms.jpg" label="1000ms_c" pauseMs="1000" tags="ToneVideos_c" videoPath="1000ms_c_v"/>
        <stimulus audioPath="2000ms_a" code="2000ms" identifier="2000ms_c" imagePath="2000ms.jpg" label="2000ms_c" pauseMs="2000" tags="ToneVideos_c" videoPath="2000ms_c_v"/>
        <stimulus audioPath="5000ms_a" code="5000ms" identifier="5000ms_c" imagePath="5000ms.jpg" label="5000ms_c" pauseMs="5000" tags="ToneVideos_c" videoPath="5000ms_c_v"/>
        <stimulus audioPath="missing" code="missing" identifier="missing" imagePath="missing.jpg" label="this stimuli has no media files and when loaded as audio or video should trigger an error should be handled nicely" pauseMs="0" tags="media" videoPath="missing"/>
        <stimulus identifier="R1" label="Speak the word &lt;b&gt;'continue'&lt;/b&gt; into the microphone, then after speaking press 'continue'" correctResponses="continue" ratingLabels="continue,arrête,thème,récurrent" pauseMs="0" tags="RecordingQualityTest"/>
        <stimulus identifier="R2" label="Speak the word &lt;b&gt;'arrête'&lt;/b&gt; into the microphone, then after speaking press 'continue'" correctResponses="arrête" ratingLabels="continue,arrête,thème,récurrent" pauseMs="0" tags="RecordingQualityTest"/>
        <stimulus identifier="R3" label="Speak the word &lt;b&gt;'thème'&lt;/b&gt; into the microphone, then after speaking press 'continue'" correctResponses="thème" ratingLabels="continue,arrête,thème,récurrent" pauseMs="0" tags="RecordingQualityTest"/>
        <stimulus identifier="R4" label="Speak the word &lt;b&gt;'récurrent'&lt;/b&gt; into the microphone, then after speaking press 'continue'" correctResponses="récurrent" ratingLabels="continue,arrête,thème,récurrent" pauseMs="0" tags="RecordingQualityTest"/>
        <stimulus identifier="Q1" label="The correct answer is 'continue'" correctResponses="continue" ratingLabels="continue,arrête" pauseMs="0" tags="Pretest_Screen"/>
        <stimulus identifier="Q2" label="The correct answer is 2" correctResponses="2" ratingLabels="1,2" pauseMs="0" tags="Pretest_Screen"/>
        <stimulus identifier="Q3" label="The correct answer is 3" correctResponses="3" ratingLabels="1,2,3" pauseMs="0" tags="Pretest_Screen"/>
        <stimulus identifier="Q8" label="The correct answer is 5" correctResponses="5" ratingLabels="1,2,3,4,5,6,7" pauseMs="0" tags="Pretest_Screen"/>
        <stimulus label="Q6 type H or h" correctResponses="[hH]" identifier="Q6" pauseMs="0" tags="Pretest_Screen Q6"/>
        <stimulus label="Q7 type 'crayon' in any combination of case" correctResponses=".*[Cc][Rr][Aa][Yy][Oo][Nn]" identifier="Q7" pauseMs="0" tags="Pretest_Screen Q7"/>
        <stimulus identifier="Picture_01" imagePath="1_1.jpg" code="1" ratingLabels="1,2,3,4,5,6,7" label="&lt;span style=&quot;text-align: left;&quot; &gt;label text 1a&lt;/span&gt;&lt;span style=&quot;text-align: right;&quot;&gt;label text 1b&lt;/span&gt;" pauseMs="0" tags="Practice"/>
        <stimulus code="10X15_30X60_45X60_75X90" correctResponses="1234" identifier="10X15_30X60_45X60_75X90" label="10X15_30X60_45X60_75X90" pauseMs="1000" tags="boxes"/>
        <stimulus code="45X10_15X60_75X30_60X90" correctResponses="1234" identifier="45X10_15X60_75X30_60X90" label="45X10_15X60_75X30_60X90" pauseMs="1000" tags="boxes"/>
        <stimulus code="45X90_10X10_15X75_30X60" correctResponses="1234" identifier="45X90_10X10_15X75_30X60" label="45X90_10X10_15X75_30X60" pauseMs="1000" tags="boxes"/>
        <stimulus code="NC" identifier="7" correctResponses="2" ratingLabels="1,2,3,4,5" label="In tegenstelling tot andere feestgangers. 2" pauseMs="0" tags="RatingToggle rating_button_examples"/>
        <stimulus code="NN" identifier="68" correctResponses="5" ratingLabels="M,T,6,#,2" label="De meeste vrienden. 5" pauseMs="0" tags="RatingToggle rating_button_examples"/>
        <stimulus code="NC" identifier="32" correctResponses="1" ratingLabels="8,7,6,5,4,3,2,1" label="Bij de auditie waren. 1" pauseMs="0" tags="RatingToggle rating_button_examples"/>
        <stimulus code="NC1" identifier="322" correctResponses="ugly" ratingLabels="bad,good,ugly,cat,meow" label="Bij de auditie waren. 1" pauseMs="0" tags="RatingToggle rating_button_examples"/>
        <stimulus code="NC2" identifier="323" correctResponses="punctuation" ratingLabels="good[brackets],good\,comma,good{braces},good(parentheses),meow,back\slash,two^caret,dollar$sign,four*asterisk,five+plus,question?mark,full.stop,eight|pipe,exclamation!mark" label="Bij de auditie waren. 1" pauseMs="0" tags="RatingToggle rating_button_examples"/>
        <stimulus  identifier="author_1"  label="Auteur 1"  tags="missed_fav_author"  pauseMs="0"  />
        <stimulus  identifier="author_2"  label="Auteur 2"  tags="missed_fav_author"  pauseMs="0"  />
        <stimulus  identifier="author_3"  label="Auteur 3"  tags="missed_fav_author"  pauseMs="0"  />
        <stimulus identifier="group_example_1_0" ratingLabels="8,7,6,5,4,3,2,1,0" label="group_example_1_0" tags="group_example_1" />
        <stimulus code="1" identifier="Image1" label="1" tags="GroupOf2Images" />
        <stimulus code="2" identifier="Image2" label="2" tags="GroupOf2Images" />
        <stimulus code="3" identifier="Image3" label="3" tags="GroupOf2Images" />
        <stimulus code="4" identifier="Image4" label="4" tags="GroupOf2Images" />
        <stimulus code="5" identifier="Image5" label="5" tags="GroupOf2Images" />
        <stimulus code="6" identifier="Image6" label="6" tags="GroupOf2Images" />
        <stimulus identifier="topic_1_1" label="Topic_1 : 1" tags="Topic_1 Topics" />
        <stimulus identifier="topic_1_2" label="Topic_1 : 2" tags="Topic_1 Topics" />
        <stimulus identifier="topic_1_3" label="Topic_1 : 3" tags="Topic_1 Topics" />
        <stimulus identifier="topic_2_1" label="Topic_2 : 1" tags="Topic_2 Topic_234 Topics" />
        <stimulus identifier="topic_2_2" label="Topic_2 : 2" tags="Topic_2 Topic_234 Topics" />
        <stimulus identifier="topic_2_3" label="Topic_2 : 3" tags="Topic_2 Topic_234 Topics" />
        <stimulus identifier="topic_3_1" label="Topic_3 : 1" tags="Topic_3 Topic_234 Topics" />
        <stimulus identifier="topic_3_2" label="Topic_3 : 2" tags="Topic_3 Topic_234 Topics" />
        <stimulus identifier="topic_3_3" label="Topic_3 : 3" tags="Topic_3 Topic_234 Topics" />
        <stimulus identifier="topic_4_1" label="Topic_4 : 1" tags="Topic_4 Topic_234 Topics" />
        <stimulus identifier="topic_4_2" label="Topic_4 : 2" tags="Topic_4 Topic_234 Topics" />
        <stimulus identifier="topic_4_3" label="Topic_4 : 3" tags="Topic_4 Topic_234 Topics" />
        <stimulus identifier="Picture_09_2875" imagePath="triangle_area.jpg"  pauseMs="2875" tags="TestrunSimple"/>
        <stimulus identifier="Picture_10_1372" imagePath="triangle_area.jpg"  pauseMs="1372" tags="TestrunSimple"/>
        <stimulus identifier="Picture_11_2348" imagePath="triangle_area.jpg"  pauseMs="2348" tags="TestrunSimple"/>
        <stimulus identifier="Picture_12_2700" imagePath="triangle_area.jpg"  pauseMs="2700" tags="TestrunSimple"/>
        <stimulus identifier="Picture_13_1921" imagePath="triangle_area.jpg"  pauseMs="1921" tags="TestrunSimple"/>
        <stimulus identifier="Picture_14_2663" imagePath="triangle_area.jpg"  pauseMs="2663" tags="TestrunSimple"/>
        <stimulus identifier="Picture_15_2012" imagePath="triangle_area.jpg"   pauseMs="2012" tags="TestrunSimple"/>
        <stimulus identifier="Picture_16_2509" imagePath="triangle_area.jpg"   pauseMs="2509" tags="TestrunSimple"/>
        <stimulus identifier="Picture_17_2088" imagePath="triangle_area.jpg"   pauseMs="2088" tags="TestrunSimple"/>
        <stimulus identifier="Picture_18_1200" imagePath="triangle_area.jpg"   pauseMs="1200" tags="TestrunSimple"/>
        <stimulus identifier="Picture_19_1332" imagePath="triangle_area.jpg"  pauseMs="1332" tags="TestrunSimple"/>
        <stimulus identifier="Picture_20_3000" imagePath="triangle_area.jpg"   pauseMs="3000" tags="TestrunSimple"/>
        <stimulus identifier="Picture_21_2472" imagePath="triangle_area.jpg"  pauseMs="2472" tags="TestrunSimple"/>
        <stimulus identifier="Picture_22_1585" imagePath="triangle_area.jpg"  pauseMs="1585" tags="TestrunSimple"/>
        <stimulus identifier="Picture_23_1109" imagePath="triangle_area.jpg"  pauseMs="1109" tags="TestrunSimple"/>
        <stimulus identifier="Picture_24_1194" imagePath="triangle_area.jpg"  pauseMs="1194" tags="TestrunSimple"/>
        <stimulus identifier="Picture_25_1528" imagePath="triangle_area.jpg" pauseMs="1528" tags="TestrunSimple"/>
        <stimulus identifier="Picture_26_1911" imagePath="triangle_area.jpg" pauseMs="1911" tags="TestrunSimple"/>
        <stimulus identifier="Picture_27_1735" imagePath="triangle_area.jpg" pauseMs="1735" tags="TestrunSimple"/>
        <stimulus identifier="Picture_28_2575" imagePath="triangle_area.jpg" pauseMs="2575" tags="TestrunSimple"/>
    </stimuli>
</experiment>
